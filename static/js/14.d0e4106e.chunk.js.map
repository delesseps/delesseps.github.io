{"version":3,"sources":["components/form/AutoCompleteField.tsx","components/form/TextField.tsx","../node_modules/@material-ui/core/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/DialogContent/DialogContent.js","components/form/SwitchField.tsx","../node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","utils/email.ts","components/organisms/UserPicker.tsx","components/organisms/NewAccountUserDialog.tsx","../node_modules/@material-ui/core/internal/SwitchBase.js","../node_modules/@material-ui/core/Switch/Switch.js"],"names":["TextFieldStyle","css","AutoCompleteField","props","name","control","error","rules","label","placeholder","creatable","getOptionLabel","option","disableClearable","renderOption","autoFocus","options","render","onChange","onBlur","value","id","autoHighlight","getOptionSelected","selectOnFocus","clearOnBlur","evt","newValue","renderInput","InputLabelProps","InputProps","rest","className","shrink","helperText","message","TextField","multiline","minRows","disabled","transform","fullWidth","event","target","DialogTitle","React","ref","children","classes","disableTypography","other","_objectWithoutPropertiesLoose","_extends","clsx","root","Typography","component","variant","withStyles","margin","padding","flex","DialogContent","dividers","theme","WebkitOverflowScrolling","overflowY","paddingTop","borderTop","palette","divider","borderBottom","LabelStyle","SwitchField","labelPlacement","checked","FormControlLabel","disabledProp","muiFormControl","useFormControl","controlProps","forEach","key","capitalize","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","text","tester","Name","styled","span","UserMatch","Email","Mobile","ListBoxStyles","allUsers","email","mobile","filter","createFilterOptions","UserPicker","Autocomplete","listbox","handleHomeEndKeys","inputValue","filterOptions","params","filtered","cleanValue","noSpaces","length","test","emailParts","split","account","address","some","part","isEmail","find","user","push","ContentStyle","bp","xs","xlMob","SelectedUserChipLabelStyle","defaultValues","AccessType","AccountAccessTypeLabels","get","AccountAccessType","Editor","Message","SendNotification","GivenName","FamilyName","accountAccessTypeOptions","entries","map","accountAccessType","NewAccountUserDialog","isOpen","onClose","onSubmit","useTheme","fullScreen","useMediaQuery","breakpoints","down","useState","selectedUser","setSelectedUser","methods","useForm","mode","useEffect","reset","handleSubmit","watch","getValues","sendNotification","onModalClose","Dialog","open","aria-labelledby","aria-describedby","Grid","container","spacing","item","Chip","onDelete","Fragment","DialogActions","Button","onClick","SwitchBase","checkedProp","checkedIcon","defaultChecked","icon","inputProps","inputRef","onFocus","readOnly","required","tabIndex","type","useControlled","controlled","default","Boolean","state","setCheckedState","hasLabelFor","IconButton","role","undefined","input","newChecked","position","opacity","width","height","top","left","zIndex","Switch","edge","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius"],"mappings":"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","file":"static/js/14.d0e4106e.chunk.js","sourcesContent":["import { Control, Controller, FieldError } from 'react-hook-form';\nimport {\n  AutocompleteRenderOptionState,\n  InputLabelProps,\n  TextField,\n  Autocomplete as MuiAutocomplete\n} from '@material-ui/core';\nimport { FieldRules } from 'types/FieldRules';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport { css } from 'emotion';\nimport React from 'react';\n\nexport interface SelectOption<R> {\n  label: string;\n  value: R;\n}\n\ninterface Props<T,R> {\n  name: keyof T;\n  control: Control<T>;\n  error?: FieldError;\n  rules?: FieldRules;\n  label?: string;\n  options: Array<SelectOption<R>>;\n  placeholder?: string;\n  getOptionLabel?: (option: SelectOption<R>) => string;\n  renderOption?: (\n    props: React.HTMLAttributes<HTMLLIElement>,\n    option: SelectOption<R>,\n    state: AutocompleteRenderOptionState\n  ) => React.ReactNode;\n  autoFocus?: boolean;\n  creatable?: boolean;\n  InputLabelProps?: Partial<InputLabelProps>;\n  disableClearable?: boolean | undefined;\n}\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\nconst AutoCompleteField = <T extends Record<string, any>, R extends any>(props: Props<T,R>) => {\n  const {\n    name,\n    control,\n    error,\n    rules,\n    label,\n    placeholder,\n    creatable,\n    getOptionLabel = (option: SelectOption<R>) => option?.label || '',\n    disableClearable,\n    renderOption,\n    autoFocus,\n    options,\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      rules={rules}\n      render={({ onChange, onBlur, value, name }) => {\n        // const selectedValueWithLabel = options.find(option => option?.value === value);\n\n        return (\n          <MuiAutocomplete\n            id={name}\n            autoHighlight\n            // freeSolo={creatable}\n            disableClearable={disableClearable}\n            options={options}\n            getOptionSelected={(option: SelectOption<R>, value: SelectOption<R>) => { \n              return value ? option.value === value.value : false;\n            }}\n            renderOption={renderOption}\n            selectOnFocus={creatable}\n            clearOnBlur={creatable}\n            getOptionLabel={getOptionLabel}\n            value={value}\n            // value={selectedValueWithLabel}\n            onChange={(evt, newValue) => onChange(newValue)}\n            onBlur={onBlur}\n            renderInput={({ InputLabelProps, InputProps, ...rest }) => \n              <TextField\n                autoFocus={autoFocus}\n                className={TextFieldStyle}\n                label={label}\n                error={!!error}\n                InputLabelProps={{ shrink: true, ...InputLabelProps }}\n                InputProps={{ placeholder: placeholder, ...InputProps }}\n                helperText={ error?.message ?? '' }\n                {...rest}\n              />\n            }\n          />\n        )\n      }}\n    />\n  )\n};\n\nexport default AutoCompleteField;\n","import { Control, Controller, FieldError } from 'react-hook-form';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport { FieldRules } from 'types/FieldRules';\nimport { css } from 'emotion';\nimport React from 'react';\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\ninterface Props<T> {\n  id?: string;\n  name: keyof T;\n  control: Control<T>;\n  label?: string;\n  className?: string;\n  error?: FieldError;\n  rules?: FieldRules;\n  placeholder?: string;\n  multiline?: boolean;\n  minRows?: number;\n  // type?: 'text' | 'number' | 'password';\n  disabled?: boolean;\n  autoFocus?: boolean;\n  transform?: (value: string) => any;\n}\n\nconst TextField = <T extends object>(props: Props<T>) => {\n  const {\n    id,\n    name,\n    control,\n    label,\n    error,\n    rules,\n    multiline,\n    minRows,\n    // type,\n    placeholder,\n    disabled,\n    autoFocus,\n    transform\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      rules={rules}\n      render={({ onChange, onBlur, value, name }) => (\n        <MuiTextField\n          id={id || name}\n          fullWidth\n          autoFocus={autoFocus}\n          className={TextFieldStyle}\n          multiline={multiline}\n          minRows={minRows}\n          // type={ type }\n          label={label}\n          placeholder={placeholder}\n          onChange={(event) => {\n            if (transform) {\n              onChange(transform(event.target.value));\n            } else {\n              onChange(event.target.value);\n            }\n          }}\n          onBlur={onBlur}\n          value={value}\n          error={!!error}\n          InputLabelProps={{ shrink: true }}\n          helperText={error?.message ?? ''}\n          disabled={disabled}\n        />\n      )}\n    />\n  );\n};\n\nexport default TextField;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    disableTypography = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   * @default false\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    overflowY: 'auto',\n    padding: '8px 24px',\n    '&:first-child': {\n      // dialog without title\n      paddingTop: 20\n    }\n  },\n\n  /* Styles applied to the root element if `dividers={true}`. */\n  dividers: {\n    padding: '16px 24px',\n    borderTop: `1px solid ${theme.palette.divider}`,\n    borderBottom: `1px solid ${theme.palette.divider}`\n  }\n});\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  const {\n    classes,\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import React from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MuiSwitch from '@material-ui/core/Switch';\nimport { css } from 'emotion';\n\nconst LabelStyle = css`\n  .MuiFormControlLabel-label {\n    font-size: 11px;\n    color: #777;\n    line-height: 2em;\n  }\n`;\n\ninterface Props<T> {\n  id?: string;\n  name: keyof T;\n  control: Control<T>;\n  label: string;\n  // color?: 'primary' | 'secondary' | 'default';\n}\n\nconst SwitchField = <T extends object>(props: Props<T>) => {\n  const {\n    id,\n    name,\n    control,\n    // color,\n    label\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      render={({ onChange, onBlur, value }) => (\n        <FormControlLabel\n          className={LabelStyle}\n          label={label}\n          labelPlacement=\"top\"\n          control={\n            <MuiSwitch\n              id={id}\n              onChange={(event) => onChange(event.target.checked)}\n              onBlur={onBlur}\n              checked={value}\n              // color={color ?? 'primary'}\n            />\n          }\n        />\n      )}\n    />\n  );\n};\n\nexport default SwitchField;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    WebkitTapHighlightColor: 'transparent',\n    marginLeft: -11,\n    marginRight: 16,\n    // used for row presentation of radio/checkbox\n    '&$disabled': {\n      cursor: 'default'\n    }\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n  labelPlacementStart: {\n    flexDirection: 'row-reverse',\n    marginLeft: 16,\n    // used for row presentation of radio/checkbox\n    marginRight: -11\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n  labelPlacementTop: {\n    flexDirection: 'column-reverse',\n    marginLeft: 16\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n  labelPlacementBottom: {\n    flexDirection: 'column',\n    marginLeft: 16\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the label's Typography component. */\n  label: {\n    '&$disabled': {\n      color: theme.palette.text.disabled\n    }\n  }\n});\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  const {\n    classes,\n    className,\n    control,\n    disabled: disabledProp,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[`labelPlacement${capitalize(labelPlacement)}`], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","const tester = /^[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nexport const isEmail = (email: string): boolean => {\n  if (!email) {\n    return false;\n  }\n\n  if (email.length > 256) {\n    return false;\n  }\n\n  if (!tester.test(email)) {\n    return false;\n  }\n\n  // Further checking of some things regex can't handle\n  var emailParts = email.split('@');\n  var account = emailParts[0];\n  var address = emailParts[1];\n  if (account.length > 64) return false;\n\n  var domainParts = address.split('.');\n  if (domainParts.some((part) => {\n    return part.length > 63;\n  })) return false;\n\n  return true;\n};\n","import { Autocomplete, createFilterOptions, TextField } from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport AssignableUser from 'types/AssignableUser';\nimport { css } from 'emotion';\nimport React from 'react';\nimport { noSpaces } from 'utils/string';\nimport { isEmail } from 'utils/email';\n\nconst Name = styled.span`\n  display: block !important;\n  font-size: 14px;\n`;\n\nconst UserMatch = styled.span`\n  display: block;\n`;\n\nconst Email = styled.span`\n  margin-top: 0.5em;\n  display: block;\n  font-size: 11px;\n  color: #666;\n`;\n\nconst Mobile = styled.span`\n  display: block;\n  font-size: 11px;\n  color: #666;\n`;\n\nconst ListBoxStyles = css`\n  .MuiAutocomplete-option {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\nconst allUsers: AssignableUser[] = [\n  {\n    id: 3,\n    name: 'Kim Wexler',\n    email: 'kim.wexler@wm.com',\n    mobile: '+61 444 555 666',\n  },\n  {\n    id: 2,\n    name: 'Saul Goodman',\n    email: 'saul.goodman@itsallgoodman.com',\n    mobile: '+61 432 109 876',\n  },\n  {\n    id: 1,\n    name: 'Walter White',\n    email: 'walter.white@bb.com',\n    mobile: '+61 456 789 012'\n  }\n];\n\nconst filter = createFilterOptions<AssignableUser>();\n\ninterface UserPickerProps {\n  value: AssignableUser | null;\n  onChange: (user: AssignableUser | null) => void;\n}\n\nconst UserPicker = ({ value, onChange }: UserPickerProps) => {\n  return (\n    <Autocomplete\n      value={value}\n      autoHighlight\n      classes={{\n        listbox: ListBoxStyles\n      }}\n      options={allUsers}\n      getOptionSelected={(option: AssignableUser, value: AssignableUser) => { \n        return value ? option === value : false;\n      }}\n      renderOption={(props, value) => (\n        <li {...props}>\n          <UserMatch>\n            <Name>{value.name}</Name>\n            {!!value.email && <Email>{value.email}</Email>}\n            {!!value.mobile && <Mobile>{value.mobile}</Mobile>}\n          </UserMatch>\n        </li>\n      )}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return `${option.name} ${option.email} ${option.mobile}`\n      }}\n      // getOptionLabel={(option) => `${option.name} ${option.email} ${option.mobile}`}\n      // value={value}\n      // value={selectedValueWithLabel}\n      // onChange={(evt, newValue) => onChange(newValue)}\n      onChange={(evt, newValue) => {\n        if (typeof newValue === 'string') {\n          onChange({\n            id: 0,\n            name: newValue,\n            email: newValue,\n          });\n        } else if (newValue) {\n          // Create a new value from the user input\n          onChange(newValue);\n        } else {\n          onChange(null);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n        const cleanValue = noSpaces(params.inputValue);\n\n        // Suggest the creation of a new value\n        if (cleanValue !== '') {\n          if (isEmail(cleanValue) && !filtered.find(user => user.email === cleanValue)) {\n            filtered.push({\n              inputValue: cleanValue,\n              id: 0,\n              name: `Add \"${cleanValue}\"`,\n              email: ''\n            });\n          // } else {\n          //   filtered.push({\n          //     // inputValue: params.inputValue,\n          //     id: 0,\n          //     name: '',\n          //     email: 'Type email address to Add'\n          //   });\n          }\n        }\n\n        return filtered;\n      }}\n      // onBlur={onBlur}\n      // freeSolo\n      renderInput={({ InputLabelProps, InputProps, ...rest }) => \n        <TextField\n          autoFocus={true}\n          className={TextFieldStyle}\n          // label=\"Find or create user\"\n          // error={!!error}\n          InputLabelProps={{ shrink: true, ...InputLabelProps }}\n          InputProps={{ placeholder: 'Find or create user', ...InputProps }}\n          // helperText={ error?.message ?? '' }\n          {...rest}\n        />\n      }\n    />\n  )\n};\n\nexport default UserPicker;\n","import {\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport AutoCompleteField, { SelectOption } from 'components/form/AutoCompleteField';\nimport SwitchField from 'components/form/SwitchField';\nimport TextField from 'components/form/TextField';\nimport { css } from 'emotion';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { bp } from 'theme';\nimport { AccountAccessType, AccountAccessTypeLabels } from 'types/AccountAccessType';\nimport AssignableUser from 'types/AssignableUser';\nimport UserPicker from './UserPicker';\n\nconst ContentStyle = css`\n  min-height: 175px;\n  ${bp.xs} {\n    width: 100%\n  }\n  ${bp.xlMob} {\n    width: 400px;\n  }\n`\n\nconst SelectedUserChipLabelStyle = css`\n  font-size: 14px;\n`\n\ninterface NewAccountUserForm {\n  AccessType: SelectOption<AccountAccessType>;\n  Message: string;\n  GivenName: string;\n  FamilyName: string;\n  SendNotification: boolean;\n}\n\nconst defaultValues: NewAccountUserForm = {\n  AccessType: { label: AccountAccessTypeLabels.get(AccountAccessType.Editor)!, value: AccountAccessType.Editor },\n  Message: '',\n  SendNotification: false,\n  GivenName: '',\n  FamilyName: '',\n}\n\nconst accountAccessTypeOptions = [...AccountAccessTypeLabels.entries()].map(([accountAccessType, label]) => \n  ({ label: label, value: accountAccessType })\n);\n\nexport interface NewAccountUserDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (accountUser: NewAccountUserForm) => void;\n}\n\nfunction NewAccountUserDialog({ isOpen, onClose, onSubmit }: NewAccountUserDialogProps) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xlMob'))\n  const [selectedUser, setSelectedUser] = useState<AssignableUser | null>(null);\n\n  const methods = useForm<NewAccountUserForm>({\n    defaultValues,\n    mode: 'onChange',\n  });\n\n  useEffect(\n    () => {\n      // Unmount CallBack\n      if (!isOpen) {\n        reset();\n      }\n      return () => reset();\n    },\n    [isOpen]\n  )\n\n  const {\n    handleSubmit,\n    control,\n    watch,\n    getValues,\n  } = methods;\n\n  const sendNotification = watch('SendNotification') === true;\n\n  function onModalClose() {\n    onClose();\n  }\n\n  function reset() {\n    setSelectedUser(null);\n  }\n\n  function onModalOK() {\n    onSubmit(getValues());\n  }\n\n  function onSelectionRemove() {\n    setSelectedUser(null);\n  }\n  \n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={isOpen}\n      onClose={onModalClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        New Account User\n      </DialogTitle>\n      <DialogContent className={ContentStyle}>\n        <form onSubmit={handleSubmit(() => {})}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              {\n                (selectedUser) ?\n                <Chip\n                  classes={{ label: SelectedUserChipLabelStyle }}\n                  label={selectedUser.inputValue ? selectedUser.inputValue : selectedUser.name}\n                  onDelete={onSelectionRemove}\n                  // variant=\"outlined\"\n                />\n                :\n                <UserPicker\n                  value={selectedUser}\n                  onChange={setSelectedUser}\n                />\n              }\n            </Grid>\n\n            {\n              !!selectedUser &&\n              <React.Fragment>\n                {\n                  !!selectedUser.inputValue &&\n                  <Grid item container spacing={1}>\n                    <Grid item xs={6}>\n                      <TextField\n                        autoFocus\n                        name=\"GivenName\"\n                        label=\"First Name\"\n                        control={control}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField\n                        name=\"FamilyName\"\n                        label=\"Family Name\"\n                        control={control}\n                      />\n                    </Grid>\n                  </Grid>\n                }\n                <Grid item xs={12}>\n                  <AutoCompleteField\n                    name=\"AccessType\"\n                    disableClearable\n                    control={control}\n                    label=\"Access\"\n                    options={accountAccessTypeOptions}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SwitchField\n                    name=\"SendNotification\"\n                    control={control}\n                    label=\"Notify?\"\n                  />\n                </Grid>\n                {\n                  sendNotification &&\n                  <Grid item xs={12}>\n                    <TextField\n                      autoFocus\n                      name=\"Message\"\n                      control={control}\n                      multiline\n                      minRows={3}\n                      label=\"Message\"\n                    />\n                </Grid>\n                }\n              </React.Fragment>\n            }\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onModalClose}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" onClick={onModalOK}>\n          { sendNotification ? 'Send' : 'Assign'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default NewAccountUserDialog;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport const styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    classes,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 34 + 12 * 2,\n    height: 14 + 12 * 2,\n    overflow: 'hidden',\n    padding: 12,\n    boxSizing: 'border-box',\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0,\n    // Reset the stacking context.\n    verticalAlign: 'middle',\n    // For correct alignment with the text.\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -8\n  },\n\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -8\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    // Render above the focus ripple.\n    color: theme.palette.mode === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create(['left', 'transform'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&$checked': {\n      transform: 'translateX(20px)'\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      opacity: 0.5\n    },\n    '&$disabled + $track': {\n      opacity: theme.palette.mode === 'light' ? 0.12 : 0.1\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.secondary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    width: 40,\n    height: 24,\n    padding: 7,\n    '& $thumb': {\n      width: 16,\n      height: 16\n    },\n    '& $switchBase': {\n      padding: 4,\n      '&$checked': {\n        transform: 'translateX(16px)'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {},\n\n  /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n  disabled: {},\n\n  /* Styles applied to the internal SwitchBase component's input element. */\n  input: {\n    left: '-100%',\n    width: '300%'\n  },\n\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  thumb: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the track element. */\n  track: {\n    height: '100%',\n    width: '100%',\n    borderRadius: 14 / 2,\n    zIndex: -1,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n  }\n});\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  const icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[`size${capitalize(size)}`])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[`color${capitalize(color)}`]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}