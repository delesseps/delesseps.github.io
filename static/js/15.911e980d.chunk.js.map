{"version":3,"sources":["utils/string.ts","../node_modules/abnacn-validator/dist/abnacn-validator.js","../node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/internal/SwitchBase.js","../node_modules/@material-ui/core/Switch/Switch.js","components/form/SwitchField.tsx","components/SectionHeading.tsx","components/organisms/CompanyPicker.tsx","components/organisms/CompanyDirectorDetails.tsx","components/organisms/NewCompanyDetails.tsx","components/organisms/AddCompanyTrusteeDialog.tsx"],"names":["initials","value","split","map","parts","charAt","join","noSpaces","replace","define","exports","isValidABN","str","length","weights","checksum","Number","reduce","total","digit","index","isValidACN","acn","isNaN","parseInt","weighting","tally","i","check","isValidABNorACN","Object","defineProperty","FormControlLabel","React","props","ref","classes","className","control","disabledProp","disabled","label","labelPlacement","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","name","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","useControlled","controlled","default","Boolean","state","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","Switch","edge","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","mode","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","LabelStyle","css","SwitchField","render","SectionHeading","styled","div","Name","span","EntityMatch","Abn","ListBoxStyles","TextFieldStyle","allCompanyEntities","abn","filter","createFilterOptions","CompanyPicker","Autocomplete","autoHighlight","listbox","options","getOptionSelected","option","renderOption","inputValue","formatAbnAcn","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","evt","newValue","filterOptions","params","filtered","cleanValue","push","renderInput","InputLabelProps","InputProps","rest","TextField","shrink","placeholder","DirectorRoot","Head","Title","CoreDetails","Icon","Actions","MenuItemStyle","CompanyDirectorDetails","director","onRemove","useState","anchorEl","setAnchorEl","onMenuClose","Grid","container","spacing","item","xs","firstGivenName","familyName","onClick","currentTarget","Menu","getContentAnchorEl","keepMounted","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","AddDirectorDialog","lazy","Directors","Header","EmptyState","NewCompanyDetails","company","isDirectorModalOpen","setIsDirectorModalOpen","directors","setDirectors","methods","useForm","defaultValues","Acn","IsTradingEntity","IsForeign","watch","isTradingEntity","isForeign","removeDirector","slice","concat","md","FormLabel","Button","startIcon","endIcon","LazyDialog","isOpen","onSubmit","addDirector","ContentStyle","bp","sm","AddCompanyTrusteeDialog","selectedCompany","setSelectedCompany","useTheme","fullScreen","useMediaQuery","breakpoints","down","reset","onModalClose","useEffect","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","variant"],"mappings":"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","file":"static/js/15.911e980d.chunk.js","sourcesContent":["\nexport const initials = (value: string) =>\n  value.split(' ').map(parts => parts.charAt(0)).join('')\n\nexport const noSpaces = (value: string) =>\n  value.replace(/\\s/g, '')","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.abnacn = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.isValidABN = isValidABN;\n    exports.isValidACN = isValidACN;\n    exports.isValidABNorACN = isValidABNorACN;\n    // Taken from Truffala's formula at:\n    // http://stackoverflow.com/questions/14174738/regex-to-match-australian-business-number-abn\n    function isValidABN(str) {\n        str = str.replace(/[ _]/g, '');\n\n        if (!str || str.length !== 11) {\n            return false;\n        }\n        var weights = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19],\n            checksum = str.split('').map(Number).reduce(function (total, digit, index) {\n            if (!index) {\n                digit--;\n            }\n            return total + digit * weights[index];\n        }, 0);\n\n        if (!checksum || checksum % 89 !== 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // Taken from Worldspawn's post on http://forums.whirlpool.net.au/archive/984775\n    function isValidACN(acn) {\n        // Strip off white space\n        if (typeof acn === 'string') {\n            acn = acn.replace(/\\s/g, '').replace(/-/g, '');\n        }\n\n        if (acn.length != 9 || isNaN(parseInt(acn))) return false;\n\n        var weighting = [8, 7, 6, 5, 4, 3, 2, 1];\n        var tally = 0;\n        for (var i = 0; i < weighting.length; i++) {\n            tally += parseInt(acn.charAt(i)) * weighting[i];\n        }\n\n        var check = 10 - tally % 10;\n        check = check == 10 ? 0 : check;\n\n        return check == acn[8];\n    }\n\n    function isValidABNorACN(value) {\n        // Logical OR operation returns true if only of them is true, and false only if they're both false.\n        return isValidABN(value) || isValidACN(value);\n    }\n});\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    WebkitTapHighlightColor: 'transparent',\n    marginLeft: -11,\n    marginRight: 16,\n    // used for row presentation of radio/checkbox\n    '&$disabled': {\n      cursor: 'default'\n    }\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n  labelPlacementStart: {\n    flexDirection: 'row-reverse',\n    marginLeft: 16,\n    // used for row presentation of radio/checkbox\n    marginRight: -11\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n  labelPlacementTop: {\n    flexDirection: 'column-reverse',\n    marginLeft: 16\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n  labelPlacementBottom: {\n    flexDirection: 'column',\n    marginLeft: 16\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the label's Typography component. */\n  label: {\n    '&$disabled': {\n      color: theme.palette.text.disabled\n    }\n  }\n});\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  const {\n    classes,\n    className,\n    control,\n    disabled: disabledProp,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[`labelPlacement${capitalize(labelPlacement)}`], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport const styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    classes,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 34 + 12 * 2,\n    height: 14 + 12 * 2,\n    overflow: 'hidden',\n    padding: 12,\n    boxSizing: 'border-box',\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0,\n    // Reset the stacking context.\n    verticalAlign: 'middle',\n    // For correct alignment with the text.\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -8\n  },\n\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -8\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    // Render above the focus ripple.\n    color: theme.palette.mode === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create(['left', 'transform'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&$checked': {\n      transform: 'translateX(20px)'\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      opacity: 0.5\n    },\n    '&$disabled + $track': {\n      opacity: theme.palette.mode === 'light' ? 0.12 : 0.1\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.secondary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    width: 40,\n    height: 24,\n    padding: 7,\n    '& $thumb': {\n      width: 16,\n      height: 16\n    },\n    '& $switchBase': {\n      padding: 4,\n      '&$checked': {\n        transform: 'translateX(16px)'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {},\n\n  /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n  disabled: {},\n\n  /* Styles applied to the internal SwitchBase component's input element. */\n  input: {\n    left: '-100%',\n    width: '300%'\n  },\n\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  thumb: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the track element. */\n  track: {\n    height: '100%',\n    width: '100%',\n    borderRadius: 14 / 2,\n    zIndex: -1,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n  }\n});\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  const icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[`size${capitalize(size)}`])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[`color${capitalize(color)}`]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MuiSwitch from '@material-ui/core/Switch';\nimport { css } from 'emotion';\n\nconst LabelStyle = css`\n  .MuiFormControlLabel-label {\n    font-size: 11px;\n    color: #777;\n    line-height: 2em;\n  }\n`;\n\ninterface Props<T> {\n  id?: string;\n  name: keyof T;\n  control: Control<T>;\n  label: string;\n  // color?: 'primary' | 'secondary' | 'default';\n}\n\nconst SwitchField = <T extends object>(props: Props<T>) => {\n  const {\n    id,\n    name,\n    control,\n    // color,\n    label\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      render={({ onChange, onBlur, value }) => (\n        <FormControlLabel\n          className={LabelStyle}\n          label={label}\n          labelPlacement=\"top\"\n          control={\n            <MuiSwitch\n              id={id}\n              onChange={(event) => onChange(event.target.checked)}\n              onBlur={onBlur}\n              checked={value}\n              // color={color ?? 'primary'}\n            />\n          }\n        />\n      )}\n    />\n  );\n};\n\nexport default SwitchField;\n","import styled from '@emotion/styled';\n\nconst SectionHeading = styled.div`\n  font-size: 11px;\n  color: #777;\n  /* padding: 8px 0;\n  border-top: 1px solid; */\n`;\n\nexport default SectionHeading\n","import { isValidABN, isValidACN } from 'abnacn-validator';\nimport { Autocomplete, createFilterOptions, TextField } from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport React from 'react';\nimport Company from 'types/Company';\nimport { noSpaces } from 'utils/string';\nimport { formatAbnAcn } from 'utils/abnAcn';\n\nconst Name = styled.span`\n  display: block !important;\n  font-size: 14px;\n  margin-bottom: 0.5em;\n`;\n\nconst EntityMatch = styled.span`\n  display: block;\n`;\n\nconst Abn = styled.span`\n  display: block;\n  font-size: 11px;\n  color: #666;\n`;\n\nconst ListBoxStyles = css`\n  .MuiAutocomplete-option {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\nexport interface CompanyInput extends Company {\n  inputValue?: string;\n}\n\nconst allCompanyEntities: CompanyInput[] = [\n  {\n    abn: '86162372741',\n    acn: '162372741',\n    name: 'APOSITIVE PTY LTD'\n  },\n  {\n    acn: '609328207',\n    name: 'CROFT FAMILY PTY LTD'\n  }\n];\n\nconst filter = createFilterOptions<CompanyInput>();\n\ninterface CompanyPickerProps {\n  value: CompanyInput | null;\n  onChange: (tradingEntity: CompanyInput | null) => void;\n}\n\nconst CompanyPicker = ({ value, onChange }: CompanyPickerProps) => {\n  return (\n    <Autocomplete\n      value={value}\n      autoHighlight\n      classes={{\n        listbox: ListBoxStyles\n      }}\n      options={allCompanyEntities}\n      getOptionSelected={(option: CompanyInput, value: CompanyInput) => { \n        return value ? option === value : false;\n      }}\n      renderOption={(props, value, state) => {\n        return (\n          // value.abn === '' && !value.inputValue ? \n          // <span>\n          //   <EntityMatch>\n          //     <Abn>{formatAbnAcn(value.acn)} {!!value.abn && <> / {formatAbnAcn(value.abn)}</>}</Abn>\n          //   </EntityMatch>\n          // </span> :\n          <li {...props}>\n            <EntityMatch>\n              <Name>{value.name}</Name>\n              {!value.inputValue && <Abn>{formatAbnAcn(value.acn)} {!!value.abn && <> / {formatAbnAcn(value.abn)}</>}</Abn>}\n            </EntityMatch>\n          </li>\n        )\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return `${option.name} ${option.acn.replace(/\\s/g, '')} ${option.abn?.replace(/\\s/g, '')}`\n      }}\n      // getOptionLabel={(option) => `${option.name} ${option.email} ${option.mobile}`}\n      // value={value}\n      // value={selectedValueWithLabel}\n      // onChange={(evt, newValue) => onChange(newValue)}\n      onChange={(evt, newValue) => {\n        if (typeof newValue === 'string') {\n          onChange({\n            acn: '',\n            name: newValue,\n            // email: newValue,\n          });\n        } else if (newValue) {\n          // Create a new value from the user input\n          onChange(newValue);\n        } else {\n          onChange(null);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n        const cleanValue = noSpaces(params.inputValue);\n        // const numericValue = parseInt(cleanValue)\n        // const isNumeric = `${numericValue}`.length === cleanValue.length && !isNaN(numericValue);\n\n        // Suggest the creation of a new value\n        if (cleanValue !== '') {\n          // if (isNumeric) {\n          if ((cleanValue.length === 9 && isValidACN(cleanValue)) || (cleanValue.length === 11 && isValidABN(cleanValue))) {\n            filtered.push({\n              inputValue: params.inputValue,\n              acn: cleanValue,\n              name: `Create Company \"${formatAbnAcn(cleanValue)}\"`\n              // email: `Add \"${params.inputValue}\"`\n            });\n            // }\n          } else {\n            filtered.push({\n              inputValue: params.inputValue,\n              acn: '',\n              name: `Create Company \"${params.inputValue}\"`\n            });\n          }\n        }\n\n        return filtered;\n      }}\n      // onBlur={onBlur}\n      // freeSolo\n      renderInput={({ InputLabelProps, InputProps, ...rest }) => \n        <TextField\n          autoFocus={true}\n          className={TextFieldStyle}\n          // label=\"Find or create user\"\n          // error={!!error}\n          InputLabelProps={{ shrink: true, ...InputLabelProps }}\n          InputProps={{ placeholder: 'Find by ACN, ABN or name', ...InputProps }}\n          // helperText={ error?.message ?? '' }\n          {...rest}\n        />\n      }\n    />\n  )\n};\n\nexport default CompanyPicker;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { MdMoreVert, MdPerson } from \"react-icons/md\";\nimport { Grid, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { css } from \"emotion\";\nimport Director from \"types/Director\";\n\nconst DirectorRoot = styled.div`\n  background-color: #eee;\n  margin-bottom: 2px;\n`;\n\nconst Head = styled.div`\n  display: flex;\n`;\n\nconst Title = styled.div`\n  flex-grow: 1;\n  padding: 16px;\n  display: flex;\n`;\n\nconst CoreDetails = styled.div`\n  flex-grow: 1;\n`;\n\nconst Name = styled.span`\n  display: inline-block;\n  font-size: 14px;\n`;\n\nconst Icon = styled.span`\n  display: inline-block;\n  font-size: 16px;\n  width: 30px;\n  vertical-align: middle;\n`;\n\nconst Actions = styled.div`\n  margin-right: 2px;\n  margin-top: 2px;\n`;\n\nconst MenuItemStyle = css`\n  padding: 10px 16px;\n`;\n\nexport interface CompanyDirectorDetailsProps {\n  director: Director;\n  onRemove: (index: number) => void;\n  index: number;\n}\n\nfunction CompanyDirectorDetails({ director, onRemove, index}: CompanyDirectorDetailsProps) {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  function onMenuClose() {\n    setAnchorEl(null);\n  }\n\n  function onMenuRemove() {\n    onMenuClose();\n    onRemove(index);\n  }\n\n  function onMenuRunCreditCheck() {\n    onMenuClose();\n    // onRemove(index);\n  }\n\n  function onMenuClick(evt: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    setAnchorEl(evt.currentTarget);\n  }\n\n  return (\n    <DirectorRoot>\n      <Head>\n        <Title>\n          <Icon>\n            <MdPerson/>\n          </Icon>\n          <CoreDetails>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Name>{director.firstGivenName} {director.familyName}</Name>\n              </Grid>\n            </Grid>\n          </CoreDetails>\n        </Title>\n        <Actions>\n          <IconButton\n            onClick={onMenuClick}\n          >\n            <MdMoreVert />\n          </IconButton>\n          <Menu\n            anchorEl={anchorEl}\n            getContentAnchorEl={null}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={onMenuClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n          >\n            <MenuItem className={MenuItemStyle} onClick={onMenuRunCreditCheck}>Run Credit Check</MenuItem>\n            <MenuItem className={MenuItemStyle} onClick={onMenuRemove}>Remove</MenuItem>\n          </Menu>\n        </Actions>\n      </Head>\n    </DirectorRoot>\n  )\n}\n\nexport default CompanyDirectorDetails;\n","import styled from \"@emotion/styled\";\nimport { Button, FormLabel, Grid } from \"@material-ui/core\";\nimport SwitchField from \"components/form/SwitchField\";\nimport TextField from \"components/form/TextField\";\nimport SectionHeading from \"components/SectionHeading\";\nimport { css } from \"emotion\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { MdAdd, MdPerson } from \"react-icons/md\";\nimport Director from \"types/Director\";\nimport Company from \"types/Company\";\nimport { formatAbnAcn } from \"utils/abnAcn\";\nimport CompanyDirectorDetails from \"./CompanyDirectorDetails\";\nimport LazyDialog from \"components/LazyDialog\";\n\nconst AddDirectorDialog = React.lazy(() => import('./AddDirectorDialog'))\n\nconst Directors = styled.div`\n`;\n\nconst Header = styled.div`\n  display: flex;\n`;\n\nconst LabelStyle = css`\n  flex-grow: 1;\n  font-size: 11px;\n  color: #777;\n  line-height: 2em;\n  align-self: flex-end;\n`;\n\nconst Actions = styled.div`\n  .MuiButton-root {\n    margin-left: 8px;\n  }\n`;\n\nconst EmptyState = styled.div`\n  background-color: #eee;\n  padding: 24px;\n  text-align: center;\n`;\n\nexport interface NewCompanyDetailsProps {\n  company: Company;\n  // onChange: (tradingEntity?: TradingEntity) => void;\n}\n\ninterface NewCompanyDetailsForm {\n  Name: string;\n  Acn: string;\n  Abn: string;\n  IsTradingEntity: boolean;\n  IsForeign: boolean;\n  ForeignIdentifier: string;\n}\n\nfunction NewCompanyDetails({ company: { acn, abn, name } }: NewCompanyDetailsProps) {\n  const [isDirectorModalOpen, setIsDirectorModalOpen] = useState(false);\n  const [directors, setDirectors] = useState<Director[]>([]);\n\n  const methods = useForm<NewCompanyDetailsForm>({\n    defaultValues: {\n      Name: name,\n      Acn: formatAbnAcn(acn),\n      IsTradingEntity: !!abn,\n      Abn: formatAbnAcn(abn),\n      IsForeign: false,\n    },\n    mode: 'onChange',\n  });\n\n  const {\n    // handleSubmit,\n    control,\n    watch,\n    // getValues,\n  } = methods;\n\n  const isTradingEntity = watch('IsTradingEntity');\n  const isForeign = watch('IsForeign');\n\n  function onDirectorModalClose() {\n    setIsDirectorModalOpen(false);\n  }\n\n  function onDirectorModalSubmit(director: Director) {\n    setIsDirectorModalOpen(false);\n    addDirector(director);\n  }\n\n  function onAddDirector() {\n    setIsDirectorModalOpen(true);\n  }\n\n  function addDirector(director: Director) {\n    setDirectors([...directors, director]);\n  }\n\n  function removeDirector(index: number) {\n    setDirectors(directors.slice(0, index).concat(directors.slice(index + 1)));\n  }\n  return (\n    <>\n      <Grid container spacing={2} alignItems=\"flex-end\">\n        <Grid item xs={12}><SectionHeading>Company Details</SectionHeading></Grid>\n        <Grid item xs={10}>\n          <TextField\n            autoFocus\n            id=\"NewCompanyName\"\n            name=\"Name\"\n            label=\"Name\"\n            control={control}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <SwitchField\n            name=\"IsForeign\"\n            control={control}\n            label=\"Foreign?\"\n          />\n        </Grid>\n        {\n          isForeign ?\n          <Grid item xs={12}>\n            <TextField\n              name=\"ForeignIdentifier\"\n              label=\"Identifier\"\n              control={control}\n            />\n          </Grid>\n          :\n          <>\n            <Grid item xs={12} md={3}>\n              <TextField\n                name=\"Acn\"\n                label=\"ACN\"\n                control={control}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <SwitchField\n                name=\"IsTradingEntity\"\n                control={control}\n                label=\"Is Trading?\"\n              />\n            </Grid>\n            {\n              isTradingEntity &&\n              <Grid item xs={9} md={6}>\n                <TextField\n                  name=\"Abn\"\n                  label=\"ABN\"\n                  control={control}\n                />\n              </Grid>\n            }\n          </>\n        }\n        <Grid item xs={12}>\n          <Directors>\n            <Header>\n              <FormLabel className={LabelStyle}>Directors</FormLabel>\n              <Actions>\n                <Button\n                  startIcon={<MdAdd />}\n                  endIcon={<MdPerson/>}\n                  onClick={onAddDirector}\n                />\n              </Actions>\n            </Header>\n            {\n              !directors?.length ?\n              <EmptyState>No directors assigned</EmptyState>\n              :\n              directors.map((director, index) =>\n                <CompanyDirectorDetails\n                  key={index}\n                  index={index}\n                  director={director}\n                  onRemove={removeDirector} />\n              )\n            }\n          </Directors>\n        </Grid>\n      </Grid>\n      <LazyDialog isOpen={isDirectorModalOpen}>\n        <AddDirectorDialog\n          isOpen={isDirectorModalOpen}\n          onClose={onDirectorModalClose}\n          onSubmit={onDirectorModalSubmit}\n        />\n      </LazyDialog>\n    </>\n  )\n}\n\nexport default NewCompanyDetails;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, useMediaQuery, useTheme } from '@material-ui/core';\nimport { css } from 'emotion';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { bp } from 'theme';\nimport CompanyPicker, { CompanyInput } from './CompanyPicker';\nimport NewCompanyDetails from './NewCompanyDetails';\n\nconst ContentStyle = css`\n  ${bp.xs} {\n    width: 100%\n  }\n  ${bp.sm} {\n    width: 580px;\n  }\n`\n\n// const SelectedEntityChipLabelStyle = css`\n//   font-size: 14px;\n//   ${bp.xs} {\n//     max-width: 340px;\n//   }\n//   ${bp.sm} {\n//     max-width: 500px;\n//   }\n// `\n\nexport interface AddCompanyTrusteeDialogProps {\n  isOpen: boolean;\n  // company?: CompanyInput;\n  onClose: () => void;\n  onSubmit: (company: CompanyInput) => void;\n}\n\nfunction AddCompanyTrusteeDialog({ isOpen, onClose, onSubmit }: AddCompanyTrusteeDialogProps) {\n  const [selectedCompany, setSelectedCompany] = useState<CompanyInput | null>(null);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xlMob'))\n\n  useEffect(\n    () => {\n      // Unmount CallBack\n      if (!isOpen) {\n        reset();\n      }\n      return () => reset();\n    },\n    [isOpen]\n  )\n\n  function reset() {\n    setSelectedCompany(null);\n  }\n\n  function onModalClose() {\n    onClose();\n  }\n\n  function onModalOK() {\n    onSubmit(selectedCompany!);\n  }\n\n  // function onSelectionRemove() {\n  //   setSelectedCompany(null);\n  // }\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={isOpen}\n      onClose={onModalClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Add Company Trustee\n      </DialogTitle>\n      <DialogContent className={ContentStyle}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            {\n              (selectedCompany) ?\n              <NewCompanyDetails\n                company={!!selectedCompany.inputValue ?\n                  selectedCompany.acn ? {\n                    name: '',\n                    acn: selectedCompany.acn\n                  } : {\n                    name: selectedCompany.inputValue,\n                    acn: ''\n                  } :selectedCompany}\n                />\n              :\n              <CompanyPicker\n                value={selectedCompany}\n                onChange={setSelectedCompany}\n              />\n            }\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onModalClose}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" disabled={!selectedCompany} onClick={onModalOK}>\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default AddCompanyTrusteeDialog;\n"],"sourceRoot":""}