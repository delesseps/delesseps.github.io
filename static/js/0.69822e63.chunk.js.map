{"version":3,"sources":["../../src/utils/isHTMLElement.ts","../../src/constants.ts","../../src/logic/attachEventListeners.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isArray.ts","../../src/utils/isObject.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/transformToNestObject.ts","../../src/utils/isUndefined.ts","../../src/utils/unique.ts","../../src/utils/get.ts","../../src/logic/focusOnErrorField.ts","../../src/logic/removeAllEventListeners.ts","../../src/logic/getRadioValue.ts","../../src/utils/isRadioInput.ts","../../src/utils/isFileInput.ts","../../src/utils/isCheckBoxInput.ts","../../src/utils/isMultipleSelect.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/utils/isDetached.ts","../../src/utils/isEmptyObject.ts","../../src/utils/isBoolean.ts","../../src/utils/unset.ts","../../src/logic/findRemovedFieldAndRemoveListener.ts","../../src/utils/isString.ts","../../src/utils/deepMerge.ts","../../src/logic/getFieldsValues.ts","../../src/utils/isSameError.ts","../../src/logic/shouldRenderBasedOnError.ts","../../src/utils/isRegex.ts","../../src/logic/getValueAndMessage.ts","../../src/utils/isFunction.ts","../../src/utils/isMessage.ts","../../src/logic/getValidateError.ts","../../src/logic/appendErrors.ts","../../src/logic/validateField.ts","../../src/utils/isPrimitive.ts","../../src/utils/getPath.ts","../../src/logic/assignWatchFields.ts","../../src/logic/skipValidation.ts","../../src/logic/getFieldArrayParentName.ts","../../src/logic/deepEqual.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/isSelectInput.ts","../../src/utils/onDomRemove.ts","../../src/utils/validationModeChecker.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/useForm.ts","../../src/useFormContext.tsx","../../src/logic/getInputValue.ts","../../src/controller.tsx","../node_modules/@material-ui/core/FormControl/useFormControl.js","../node_modules/@material-ui/core/FormControl/formControlState.js","../node_modules/@material-ui/core/utils/useControlled.js","../node_modules/@material-ui/core/FormControl/FormControlContext.js","../node_modules/@material-ui/core/InputBase/utils.js","../node_modules/@material-ui/core/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/core/utils/useId.js","../../../src/utils/isBrowser.js","../../../src/utils/debounce.js","../../../src/utils/isFunction.js","../../../src/utils/getStyleComputedProperty.js","../../../src/utils/getParentNode.js","../../../src/utils/getScrollParent.js","../../../src/utils/getReferenceNode.js","../../../src/utils/isIE.js","../../../src/utils/getOffsetParent.js","../../../src/utils/getRoot.js","../../../src/utils/findCommonOffsetParent.js","../../../src/utils/isOffsetContainer.js","../../../src/utils/getScroll.js","../../../src/utils/includeScroll.js","../../../src/utils/getBordersSize.js","../../../src/utils/getWindowSizes.js","../../../src/utils/getClientRect.js","../../../src/utils/getBoundingClientRect.js","../../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../../src/utils/isFixed.js","../../../src/utils/getFixedPositionOffsetParent.js","../../../src/utils/getBoundaries.js","../../../src/utils/computeAutoPlacement.js","../../../src/utils/getReferenceOffsets.js","../../../src/utils/getOuterSizes.js","../../../src/utils/getOppositePlacement.js","../../../src/utils/getPopperOffsets.js","../../../src/utils/find.js","../../../src/utils/runModifiers.js","../../../src/utils/findIndex.js","../../../src/methods/update.js","../../../src/utils/isModifierEnabled.js","../../../src/utils/getSupportedPropertyName.js","../../../src/methods/destroy.js","../../../src/utils/getWindow.js","../../../src/utils/setupEventListeners.js","../../../src/methods/enableEventListeners.js","../../../src/methods/disableEventListeners.js","../../../src/utils/removeEventListeners.js","../../../src/utils/isNumeric.js","../../../src/utils/setStyles.js","../../../src/modifiers/computeStyle.js","../../../src/utils/isModifierRequired.js","../../../src/methods/placements.js","../../../src/utils/clockwise.js","../../../src/modifiers/flip.js","../../../src/modifiers/offset.js","../../../src/modifiers/index.js","../../../src/methods/defaults.js","../../../src/modifiers/shift.js","../../../src/modifiers/preventOverflow.js","../../../src/modifiers/keepTogether.js","../../../src/modifiers/arrow.js","../../../src/utils/getOppositeVariation.js","../../../src/modifiers/inner.js","../../../src/modifiers/hide.js","../../../src/utils/getRoundedOffsets.js","../../../src/modifiers/applyStyle.js","../../../src/utils/setAttributes.js","../../../src/index.js","../node_modules/@material-ui/core/MenuList/MenuList.js","../node_modules/@material-ui/core/Menu/Menu.js","../node_modules/@material-ui/core/Popper/Popper.js","../node_modules/@material-ui/core/Grow/Grow.js","../node_modules/@material-ui/core/IconButton/IconButton.js","../node_modules/@material-ui/core/Input/Input.js","../node_modules/@material-ui/core/FilledInput/FilledInput.js","../node_modules/@material-ui/core/Popover/Popover.js","../node_modules/@material-ui/core/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/core/FormControl/FormControl.js","../node_modules/@material-ui/core/InputLabel/InputLabel.js","../node_modules/@material-ui/core/FormLabel/FormLabel.js","../node_modules/@material-ui/core/Grid/Grid.js","../node_modules/@material-ui/core/Select/SelectInput.js","../node_modules/@material-ui/core/NativeSelect/NativeSelectInput.js","../node_modules/@material-ui/core/NativeSelect/NativeSelect.js","../node_modules/@material-ui/core/Select/Select.js","../node_modules/@material-ui/core/ListSubheader/ListSubheader.js","../node_modules/@material-ui/core/internal/svg-icons/Close.js","../node_modules/@material-ui/core/Autocomplete/Autocomplete.js","../node_modules/@material-ui/core/TextareaAutosize/TextareaAutosize.js","../node_modules/@material-ui/core/InputBase/InputBase.js","../node_modules/@material-ui/core/OutlinedInput/NotchedOutline.js","../node_modules/@material-ui/core/OutlinedInput/OutlinedInput.js","../node_modules/@material-ui/core/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/Chip/Chip.js","../node_modules/@material-ui/core/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/TextField/TextField.js"],"names":["value","HTMLElement","EVENTS","VALIDATION_MODE","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","attachEventListeners","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","Array","isArray","isObjectType","isNullOrUndefined","Date","test","input","result","replace","match","mathNumber","mathQuote","originalString","push","set","object","path","index","tempPath","isKey","stringToPath","length","lastIndex","key","newValue","objValue","isObject","isNaN","data","Object","entries","reduce","previous","val","undefined","filter","Boolean","obj","defaultValue","unique","split","isUndefined","fields","fieldErrors","get","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","element","type","defaultResult","validResult","values","map","attributes","getFieldValue","fieldsRef","name","unmountFieldsStateRef","current","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","keys","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isBoolean","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","isCheckBoxInput","forEach","removeAllEventListeners","disconnect","deepMerge","target","source","targetValue","sourceValue","search","output","isString","startsWith","find","transformToNestObject","error","types","message","every","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isSameError","RegExp","validationData","isRegex","getValidateError","isMessage","validateAllFieldCriteria","a","required","maxLength","minLength","min","max","pattern","validate","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","maxLengthValue","minLengthValue","inputLength","toString","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","validateError","validationResult","validateFunction","validateResult","getPath","pathWithIndex","isPrimitive","getInnerPath","flat","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","substring","indexOf","deepEqual","object1","object2","keys1","keys2","val1","val2","isMatchFieldArrayName","searchName","names","some","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","mode","isOnSubmit","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","defaultValues","shouldFocusError","criteriaMode","React.useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","Set","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","React.useState","render","modeRef","modeChecker","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","reRender","React.useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","String","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","isNameInFieldArray","previousIsDirty","getValues","getFieldArrayParentName","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","Promise","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","renderWatchedInputs","found","size","setValue","getFieldsValues","shouldSkipValidation","skipValidation","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","onValid","onInvalid","e","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","reset","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","formState","commonProps","prop","control","FormContext","React.createContext","displayName","useFormContext","React.useContext","Controller","as","onFocus","rest","methods","isNotFieldArray","getInitialValue","setInputStateValue","valueRef","onFocusRef","commonTask","event","getInputValue","registerField","defineProperty","onBlur","onChange","props","React.isValidElement","React.cloneElement","React.createElement","useFormControl","React","FormControlContext","formControlState","states","muiFormControl","acc","state","useControlled","controlled","defaultProp","default","isControlled","valueState","hasValue","isFilled","SSR","isAdornedStart","startAdornment","createSvgIcon","d","useId","idOverride","defaultId","setDefaultId","id","Math","round","random","navigator","timeoutDuration","longerTimeoutBrowsers","i","isBrowser","fn","called","scheduled","functionToCheck","getType","getStyleComputedProperty","property","css","getParentNode","getScrollParent","overflow","overflowX","overflowY","getReferenceNode","reference","isIE11","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nodeName","getRoot","node","findCommonOffsetParent","element1","element2","order","start","end","range","commonAncestorContainer","isOffsetContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","getBordersSize","styles","axis","sideA","sideB","getSize","body","computedStyle","parseInt","getWindowSizes","getComputedStyle","getClientRect","offsets","height","getBoundingClientRect","top","sizes","width","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","offset","isFixed","getFixedPositionOffsetParent","el","getBoundaries","boundaries","left","boundariesElement","boundariesNode","popper","isPaddingNumber","padding","getArea","computeAutoPlacement","placement","rects","refRect","bottom","sortedAreas","b","filteredAreas","computedPlacement","variation","getReferenceOffsets","commonOffsetParent","getOuterSizes","x","y","getOppositePlacement","hash","right","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","arr","check","runModifiers","modifiers","ends","findIndex","cur","update","this","flip","positionFixed","isModifierEnabled","modifierName","getSupportedPropertyName","prefixes","upperProp","prefix","toCheck","destroy","getWindow","ownerDocument","attachToScrollParents","callback","scrollParents","isBody","passive","setupEventListeners","scrollElement","enableEventListeners","disableEventListeners","removeEventListeners","isNumeric","n","isFinite","setStyles","unit","isFirefox","isModifierRequired","requesting","isRequired","requested","validPlacements","placements","clockwise","counter","BEHAVIORS","parseOffset","useHeight","basePlacement","fragments","frag","divider","splitRegex","ops","mergeWithPrevious","op","str","toValue","index2","shiftvariation","isVertical","shiftOffsets","transformProp","popperStyles","transform","floor","opSide","arrowElement","len","sideCapitalized","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","placementOpposite","flipOrder","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flippedVariationByContent","flippedVariation","getOppositeVariation","subtractLength","bound","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","getRoundedOffsets","prefixedProperty","invertTop","invertLeft","Popper","requestAnimationFrame","debounce","modifierOptions","eventsEnabled","Utils","PopperUtils","Defaults","nextItem","list","disableListWrap","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","textCriteriaMatches","nextFocus","textCriteria","text","innerText","textContent","trim","toLowerCase","repeating","join","moveFocus","currentFocus","disabledItemsFocusable","traversalFunction","wrappedOnce","nextFocusDisabled","disabled","getAttribute","hasAttribute","MenuList","actions","autoFocus","autoFocusItem","className","onKeyDown","variant","other","_objectWithoutPropertiesLoose","listRef","textCriteriaRef","previousKeyMatched","lastTime","useEnhancedEffect","adjustStyleForScrollbar","containerElement","theme","noExplicitWidth","style","clientHeight","scrollbarSize","getScrollbarSize","direction","handleRef","useForkRef","activeItemIndex","child","items","newChildProps","tabIndex","List","_extends","role","activeElement","criteria","lowerKey","currTime","performance","now","keepFocusOnCurrent","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","Menu","classes","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","useTheme","menuListActionsRef","contentAnchorRef","instance","setRef","Popover","getContentAnchorEl","anchorOrigin","transformOrigin","root","paper","isAppearing","clsx","withStyles","maxHeight","WebkitOverflowScrolling","outline","getAnchorEl","anchorEl","defaultPopperOptions","container","disablePortal","keepMounted","initialPlacement","popperOptions","popperRefProp","popperRef","transition","tooltipRef","ownRef","handlePopperRef","handlePopperRefRef","exited","setExited","rtlPlacement","flipPlacement","setPlacement","handleOpen","handlePopperUpdate","PopperJs","preventOverflow","onCreate","createChainedFunction","onUpdate","handleClose","childProps","in","onEnter","onExited","Portal","display","getScale","entering","opacity","entered","Grow","inProp","onEntered","onExit","onExiting","timeout","TransitionComponent","Transition","timer","autoTimeout","nodeRef","foreignRef","normalizedTransitionCallback","maybeIsAppearing","handleEntering","handleEnter","reflow","duration","getTransitionProps","delay","transitions","getAutoHeightDuration","create","handleEntered","handleExiting","handleExit","handleExited","clearTimeout","appear","addEndListener","next","setTimeout","visibility","muiSupportAuto","IconButton","edge","color","disableFocusRipple","ButtonBase","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","label","textAlign","flex","fontSize","typography","pxToRem","borderRadius","palette","action","active","shortest","backgroundColor","alpha","hoverOpacity","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","alignItems","justifyContent","Input","disableUnderline","fullWidth","inputComponent","multiline","InputBase","underline","muiName","bottomLineColor","formControl","focused","borderBottomColor","borderBottom","content","shorter","easing","easeOut","pointerEvents","borderBottomStyle","marginDense","inputMarginDense","inputMultiline","inputTypeSearch","FilledInput","light","borderTopLeftRadius","shape","borderTopRightRadius","adornedStart","paddingLeft","adornedEnd","paddingRight","paddingTop","paddingBottom","hiddenLabel","WebkitBoxShadow","WebkitTextFillColor","caretColor","inputHiddenLabel","inputAdornedStart","inputAdornedEnd","getOffsetTop","getOffsetLeft","getTransformOriginValue","anchorPosition","anchorReference","containerProp","elevation","marginThreshold","transitionDurationProp","paperRef","getAnchorOffset","contentAnchorOffset","resolvedAnchorEl","anchorRect","anchorVertical","getContentAnchorOffset","contentAnchorEl","contains","parentElement","offsetTop","process","getTransformOrigin","elemRect","getPositioningStyle","offsetWidth","offsetHeight","elemTransformOrigin","anchorOffset","containerWindow","ownerWindow","heightThreshold","innerHeight","widthThreshold","innerWidth","diff","setPositioningStyles","positioning","updatePosition","handleResize","clear","Modal","BackdropProps","invisible","Paper","minWidth","minHeight","maxWidth","stripDiacritics","string","normalize","createFilterOptions","ignoreAccents","ignoreCase","limit","matchFrom","stringify","getOptionLabel","filteredOptions","candidate","array","comp","defaultFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","debug","multiple","disableClearable","disableCloseOnSelect","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","getOptionSelected","groupBy","handleHomeEndKeys","idProp","includeInputInList","inputValueProp","onHighlightChange","onInputChange","onOpen","openProp","openOnFocus","selectOnFocus","valueProp","ignoreFocus","firstFocus","listboxRef","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","setInputValueState","setFocused","resetInputValue","useEventCallback","newInputValue","optionLabel","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","value2","listboxAvailable","focusTag","tagToFocus","querySelector","setHighlightedIndex","reason","removeAttribute","setAttribute","prev","listboxNode","scrollHeight","scrollBottom","elementBottom","changeHighlightedIndex","nextIndex","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","handleValue","details","isTouch","selectNewValue","reasonProp","origin","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","which","stopPropagation","handleFocus","handleBlur","handleInputChange","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","group","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","onMouseOver","onTouchStart","FormControl","component","Component","visuallyFocused","margin","initialAdornedStart","isMuiElement","setAdornedStart","initialFilled","filled","setFilled","focusedState","onFilled","childContext","onEmpty","registerEffect","Provider","flexDirection","border","verticalAlign","marginNormal","marginBottom","InputLabel","disableAnimation","shrinkProp","shrink","fcs","FormLabel","animated","outlined","asterisk","zIndex","body1","lineHeight","SPACINGS","GRID_SIZES","getOffset","div","parse","Grid","alignContent","classNameProp","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth","StyledGrid","boxSizing","flexWrap","breakpoint","themeSpacing","generateGutter","breakpoints","accumulator","globalStyles","flexBasis","flexGrow","assign","up","generateGrid","areEqualValues","SelectInput","ariaLabel","autoWidth","displayEmpty","IconComponent","inputRefProp","labelId","MenuProps","readOnly","renderValue","SelectDisplayProps","tabIndexProp","displayNode","setDisplayNode","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","getElementById","handler","getSelection","isCollapsed","displaySingle","clientWidth","childrenArray","toArray","handleItemClick","writable","displayMultiple","computeDisplay","Error","_formatMuiErrorMessage","onKeyUp","menuMinWidth","buttonId","selectMenu","button","dangerouslySetInnerHTML","__html","nativeInput","icon","iconOpen","NativeSelectInput","userSelect","cursor","background","textOverflow","whiteSpace","iconFilled","iconOutlined","defaultInput","NativeSelect","ArrowDropDownIcon","inputProps","nativeSelectStyles","_ref","_ref2","Select","labelWidth","native","variantProps","InputComponent","standard","OutlinedInput","mergeClasses","baseClasses","newClasses","ListSubheader","disableGutters","disableSticky","inset","sticky","gutters","listStyle","fontFamily","fontWeight","fontWeightMedium","DisablePortal","CloseIcon","Autocomplete","ChipProps","clearText","closeIcon","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loading","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","PopperComponentProp","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","tag","tagSizeSmall","Chip","groupLabel","groupUl","props2","renderListOption","optionProps","hasClearIcon","hasPopupIcon","InputLabelProps","InputProps","inputRoot","endAdornment","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputFocused","popperDisablePortal","noOptions","listbox","option2","modal","WebkitTapHighlightColor","hover","disabledOpacity","getStyleValue","TextareaAutosize","maxRows","minRows","shadowRef","renders","setState","syncHeight","inputShallow","placeholder","singleRowHeight","outerHeight","outerHeightStyle","prevState","rows","ariaDescribedby","inputPropsProp","renderSuffix","handleInputRefWarning","handleInputPropsRefProp","handleInputRefProp","handleInputRef","checkDirty","onAnimationStart","animationName","args","placeholderHidden","placeholderVisible","font","letterSpacing","animationDuration","boxShadow","resize","NotchedOutline","labelWidthProp","notched","align","legendLabelled","legendNotched","legend","borderStyle","borderWidth","notchedOutline","borderColor","isDeleteKeyboardEvent","keyboardEvent","avatarProp","avatar","clickableProp","clickable","ComponentProp","deleteIconProp","deleteIcon","iconProp","chipRef","handleDeleteIconClick","small","moreProps","focusVisibleClassName","focusVisible","disableRipple","customClasses","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","themeVariantsClasses","useThemeVariants","deletable","outlinedPrimary","outlinedSecondary","labelSmall","grey","deleteIconColor","getContrastText","textDecoration","contrastText","dark","emphasize","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","FormHelperText","contained","caption","variantComponent","TextField","FormHelperTextProps","helperText","SelectProps","InputMore","_InputLabelProps$requ","displayRequired","helperTextId","inputLabelId","InputElement"],"mappings":"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","file":"static/js/0.69822e63.chunk.js","sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import isObject from './isObject';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(targetValue, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return deepMerge(\n    transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\n\nexport default function deepEqual(object1: any = [], object2: any = []) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n\n    if (\n      (isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\n        ? !deepEqual(val1, val2)\n        : val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: () => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport deepEqual from './logic/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n  SubmitErrorHandler,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const modeRef = React.useRef(modeChecker(mode));\n  const {\n    current: { isOnSubmit, isOnTouch },\n  } = modeRef;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = String(\n                  value as string | boolean,\n                ).includes(checkboxRef.value)),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          !deepEqual(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          !name ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isSubmitted: isSubmittedRef.current,\n            isTouched: !!get(touchedFieldsRef.current, name),\n            ...modeRef.current,\n          });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute:', ref);\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getFieldsValues(\n        fieldsRef,\n        unmountFieldsStateRef,\n      );\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await onValid(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (onInvalid) {\n            await onInvalid(fieldErrors, e);\n          }\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      fieldsRef.current &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    validateResolver: resolver ? validateResolver : undefined,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types/form';\nimport { ControllerProps } from './types/props';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production' && !control && !methods) {\n    throw new Error('📋 Controller is missing `control` prop.');\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    isSubmittedRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    reRender,\n    fieldsRef,\n    fieldArrayNamesRef,\n    unmountFieldsStateRef,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\n      ? unmountFieldsStateRef.current[name]\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(value)) {\n      console.warn(\n        '📋 Controller `defaultValue` or useForm `defaultValues` is missing.',\n      );\n    }\n\n    if (as && render) {\n      console.warn('📋 Should use either `as` or `render` prop.');\n    }\n\n    if (!isNotFieldArray && isUndefined(defaultValue)) {\n      console.warn(\n        '📋 Controller is missing `defaultValue` prop when using `useFieldArray`.',\n      );\n    }\n  }\n\n  const shouldValidate = (isBlurEvent?: boolean) =>\n    !skipValidation({\n      isBlurEvent,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted: isSubmittedRef.current,\n      ...mode,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      return console.warn('📋 Field is missing `name` prop.');\n    }\n\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n      if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  }, [fieldsRef, rules, name, onFocusRef, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (\n      readFormStateRef.current.touched &&\n      !get(touchedFieldsRef.current, name)\n    ) {\n      set(touchedFieldsRef.current, name, true);\n      reRender();\n    }\n\n    if (shouldValidate(true)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n        name,\n      })\n    : null;\n};\n\nexport { Controller };\n","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`Material-UI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`Material-UI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import * as React from 'react';\n/**\n * Private module reserved for @material-ui packages.\n */\n\nexport default function useId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(`mui-${Math.round(Math.random() * 1e5)}`);\n    }\n  }, [defaultId]);\n  return id;\n}","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  let text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n}\n/**\n * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.\n * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\n\nconst MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    autoFocus = false,\n    autoFocusItem = false,\n    children,\n    className,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    onKeyDown,\n    variant = 'selectedMenu'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"]);\n\n  const listRef = React.useRef(null);\n  const textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, () => ({\n    adjustStyleForScrollbar: (containerElement, theme) => {\n      // Let's ignore that piece of logic if users are already overriding the width\n      // of the menu.\n      const noExplicitWidth = !listRef.current.style.width;\n\n      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n        const scrollbarSize = `${getScrollbarSize(ownerDocument(containerElement))}px`;\n        listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;\n      }\n\n      return listRef.current;\n    }\n  }), []);\n\n  const handleKeyDown = event => {\n    const list = listRef.current;\n    const key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    const currentFocus = ownerDocument(list).activeElement;\n\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      const criteria = textCriteriaRef.current;\n      const lowerKey = key.toLowerCase();\n      const currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleRef = useForkRef(listRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      const newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other), items);\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\n   * if `variant=\"selectedMenu\"`.\n   * @default false\n   */\n  autoFocusItem: PropTypes.bool,\n\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the menu items will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { HTMLElementType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport setRef from '../utils/setRef';\nimport useTheme from '../styles/useTheme';\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport const styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\n  const {\n    autoFocus = true,\n    children,\n    classes,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    variant = 'selectedMenu',\n    TransitionProps: {\n      onEntering\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEntering\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const contentAnchorRef = React.useRef(null);\n\n  const getContentAnchorEl = () => contentAnchorRef.current;\n\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant !== \"menu\" && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: instance => {\n          contentAnchorRef.current = instance;\n          setRef(child.ref, instance);\n        }\n      });\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps)\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n    autoFocusItem: autoFocusItem,\n    variant: variant\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A HTML element, or a function that returns it.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the menu is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport PopperJs from 'popper.js';\nimport { chainPropTypes, refType, HTMLElementType } from '@material-ui/utils';\nimport { useTheme } from '@material-ui/styles';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\nfunction flipPlacement(placement, theme) {\n  const direction = theme && theme.direction || 'ltr';\n\n  if (direction === 'ltr') {\n    return placement;\n  }\n\n  switch (placement) {\n    case 'bottom-end':\n      return 'bottom-start';\n\n    case 'bottom-start':\n      return 'bottom-end';\n\n    case 'top-end':\n      return 'top-start';\n\n    case 'top-start':\n      return 'top-end';\n\n    default:\n      return placement;\n  }\n}\n\nfunction getAnchorEl(anchorEl) {\n  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;\n}\n\nconst defaultPopperOptions = {};\n/**\n * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v1/) for positioning.\n */\n\nconst Popper = /*#__PURE__*/React.forwardRef(function Popper(props, ref) {\n  const {\n    anchorEl,\n    children,\n    container,\n    disablePortal = false,\n    keepMounted = false,\n    modifiers,\n    open,\n    placement: initialPlacement = 'bottom',\n    popperOptions = defaultPopperOptions,\n    popperRef: popperRefProp,\n    style,\n    transition = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchorEl\", \"children\", \"container\", \"disablePortal\", \"keepMounted\", \"modifiers\", \"open\", \"placement\", \"popperOptions\", \"popperRef\", \"style\", \"transition\"]);\n\n  const tooltipRef = React.useRef(null);\n  const ownRef = useForkRef(tooltipRef, ref);\n  const popperRef = React.useRef(null);\n  const handlePopperRef = useForkRef(popperRef, popperRefProp);\n  const handlePopperRefRef = React.useRef(handlePopperRef);\n  useEnhancedEffect(() => {\n    handlePopperRefRef.current = handlePopperRef;\n  }, [handlePopperRef]);\n  React.useImperativeHandle(popperRefProp, () => popperRef.current, []);\n  const [exited, setExited] = React.useState(true);\n  const theme = useTheme();\n  const rtlPlacement = flipPlacement(initialPlacement, theme);\n  /**\n   * placement initialized from prop but can change during lifetime if modifiers.flip.\n   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior\n   */\n\n  const [placement, setPlacement] = React.useState(rtlPlacement);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n  const handleOpen = React.useCallback(() => {\n    if (!tooltipRef.current || !anchorEl || !open) {\n      return;\n    }\n\n    if (popperRef.current) {\n      popperRef.current.destroy();\n      handlePopperRefRef.current(null);\n    }\n\n    const handlePopperUpdate = data => {\n      setPlacement(data.placement);\n    };\n\n    const resolvedAnchorEl = getAnchorEl(anchorEl);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {\n        const box = resolvedAnchorEl.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          console.warn(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      }\n    }\n\n    const popper = new PopperJs(getAnchorEl(anchorEl), tooltipRef.current, _extends({\n      placement: rtlPlacement\n    }, popperOptions, {\n      modifiers: _extends({}, disablePortal ? {} : {\n        // It's using scrollParent by default, we can use the viewport when using a portal.\n        preventOverflow: {\n          boundariesElement: 'viewport'\n        }\n      }, modifiers, popperOptions.modifiers),\n      // We could have been using a custom modifier like react-popper is doing.\n      // But it seems this is the best public API for this use case.\n      onCreate: createChainedFunction(handlePopperUpdate, popperOptions.onCreate),\n      onUpdate: createChainedFunction(handlePopperUpdate, popperOptions.onUpdate)\n    }));\n    handlePopperRefRef.current(popper);\n  }, [anchorEl, disablePortal, modifiers, open, rtlPlacement, popperOptions]);\n  const handleRef = React.useCallback(node => {\n    setRef(ownRef, node);\n    handleOpen();\n  }, [ownRef, handleOpen]);\n\n  const handleEnter = () => {\n    setExited(false);\n  };\n\n  const handleClose = () => {\n    if (!popperRef.current) {\n      return;\n    }\n\n    popperRef.current.destroy();\n    handlePopperRefRef.current(null);\n  };\n\n  const handleExited = () => {\n    setExited(true);\n    handleClose();\n  };\n\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, []);\n  React.useEffect(() => {\n    if (!open && !transition) {\n      // Otherwise handleExited will call this.\n      handleClose();\n    }\n  }, [open, transition]);\n\n  if (!keepMounted && !open && (!transition || exited)) {\n    return null;\n  }\n\n  const childProps = {\n    placement\n  };\n\n  if (transition) {\n    childProps.TransitionProps = {\n      in: open,\n      onEnter: handleEnter,\n      onExited: handleExited\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    disablePortal: disablePortal,\n    container: container\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    role: \"tooltip\"\n  }, other, {\n    style: _extends({\n      // Prevents scroll issue, waiting for Popper.js to add this style once initiated.\n      position: 'fixed',\n      // Fix Popper.js display issue\n      top: 0,\n      left: 0,\n      display: !open && keepMounted && !transition ? 'none' : null\n    }, style)\n  }), typeof children === 'function' ? children(childProps) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Popper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A HTML element, [referenceObject](https://popper.js.org/docs/v1/#referenceObject),\n   * or a function that returns either.\n   * It's used to set the position of the popper.\n   * The return value will passed as the reference object of the Popper instance.\n   */\n  anchorEl: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.object, PropTypes.func]), props => {\n    if (props.open) {\n      const resolvedAnchorEl = getAnchorEl(props.anchorEl);\n\n      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {\n        const box = resolvedAnchorEl.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.clientWidth !== 'number' || typeof resolvedAnchorEl.clientHeight !== 'number' || typeof resolvedAnchorEl.getBoundingClientRect !== 'function') {\n        return new Error(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'It should be an HTML element instance or a referenceObject ', '(https://popper.js.org/docs/v1/#referenceObject).'].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Popper.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Popper.js is based on a \"plugin-like\" architecture,\n   * most of its features are fully encapsulated \"modifiers\".\n   *\n   * A modifier is a function that is called each time Popper.js needs to\n   * compute the position of the popper.\n   * For this reason, modifiers should be very performant to avoid bottlenecks.\n   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v1/#modifiers).\n   */\n  modifiers: PropTypes.object,\n\n  /**\n   * If `true`, the popper is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * Popper placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Options provided to the [`popper.js`](https://popper.js.org/docs/v1/) instance.\n   * @default {}\n   */\n  popperOptions: PropTypes.object,\n\n  /**\n   * A ref that points to the used popper instance.\n   */\n  popperRef: refType,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * Help supporting a react-transition-group/Transition component.\n   * @default false\n   */\n  transition: PropTypes.bool\n} : void 0;\nexport default Popper;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\n\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  const {\n    children,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = 'auto',\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const timer = React.useRef();\n  const autoTimeout = React.useRef();\n  const theme = useTheme();\n  const nodeRef = React.useRef(null);\n  const foreignRef = useForkRef(children.ref, ref);\n  const handleRef = useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    textAlign: 'center',\n    flex: '0 0 auto',\n    fontSize: theme.typography.pxToRem(24),\n    padding: 12,\n    borderRadius: '50%',\n    overflow: 'visible',\n    // Explicitly set the default value to solve a bug on IE11.\n    color: theme.palette.action.active,\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      backgroundColor: 'transparent',\n      color: theme.palette.action.disabled\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -12,\n    '$sizeSmall&': {\n      marginLeft: -3\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -12,\n    '$sizeSmall&': {\n      marginRight: -3\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    padding: 3,\n    fontSize: theme.typography.pxToRem(18)\n  },\n\n  /* Styles applied to the children container element. */\n  label: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  }\n});\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  const {\n    edge = false,\n    children,\n    classes,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[`color${capitalize(color)}`], disabled && classes.disabled, size === \"small\" && classes[`size${capitalize(size)}`], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => {\n  const light = theme.palette.mode === 'light';\n  const bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      'label + &': {\n        marginTop: 16\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if color secondary. */\n    colorSecondary: {\n      '&$underline:after': {\n        borderBottomColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the root element if `disableUnderline={false}`. */\n    underline: {\n      '&:after': {\n        borderBottom: `2px solid ${theme.palette.primary.main}`,\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\"',\n        position: 'absolute',\n        right: 0,\n        transform: 'scaleX(0)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&$focused:after': {\n        transform: 'scaleX(1)'\n      },\n      '&$error:after': {\n        borderBottomColor: theme.palette.error.main,\n        transform: 'scaleX(1)' // error is always underlined in red\n\n      },\n      '&:before': {\n        borderBottom: `1px solid ${bottomLineColor}`,\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\\\\00a0\"',\n        position: 'absolute',\n        right: 0,\n        transition: theme.transitions.create('border-bottom-color', {\n          duration: theme.transitions.duration.shorter\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&:hover:not($disabled):before': {\n        borderBottom: `2px solid ${theme.palette.text.primary}`,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          borderBottom: `1px solid ${bottomLineColor}`\n        }\n      },\n      '&$disabled:before': {\n        borderBottomStyle: 'dotted'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {},\n\n    /* Styles applied to the `input` element. */\n    input: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {},\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {},\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {}\n  };\n};\nconst Input = /*#__PURE__*/React.forwardRef(function Input(props, ref) {\n  const {\n    disableUnderline,\n    classes,\n    fullWidth = false,\n    inputComponent = 'input',\n    multiline = false,\n    type = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableUnderline\", \"classes\", \"fullWidth\", \"inputComponent\", \"multiline\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(InputBase, _extends({\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, !disableUnderline && classes.underline),\n      underline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Input.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the input will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiInput'\n})(Input);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => {\n  const light = theme.palette.mode === 'light';\n  const bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  const backgroundColor = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      backgroundColor,\n      borderTopLeftRadius: theme.shape.borderRadius,\n      borderTopRightRadius: theme.shape.borderRadius,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      }),\n      '&:hover': {\n        backgroundColor: light ? 'rgba(0, 0, 0, 0.13)' : 'rgba(255, 255, 255, 0.13)',\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor\n        }\n      },\n      '&$focused': {\n        backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'\n      },\n      '&$disabled': {\n        backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'\n      }\n    },\n\n    /* Styles applied to the root element if color secondary. */\n    colorSecondary: {\n      '&$underline:after': {\n        borderBottomColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the root element if `disableUnderline={false}`. */\n    underline: {\n      '&:after': {\n        borderBottom: `2px solid ${theme.palette.primary.main}`,\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\"',\n        position: 'absolute',\n        right: 0,\n        transform: 'scaleX(0)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&$focused:after': {\n        transform: 'scaleX(1)'\n      },\n      '&$error:after': {\n        borderBottomColor: theme.palette.error.main,\n        transform: 'scaleX(1)' // error is always underlined in red\n\n      },\n      '&:before': {\n        borderBottom: `1px solid ${bottomLineColor}`,\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\\\\00a0\"',\n        position: 'absolute',\n        right: 0,\n        transition: theme.transitions.create('border-bottom-color', {\n          duration: theme.transitions.duration.shorter\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&:hover:not($disabled):before': {\n        borderBottom: `1px solid ${theme.palette.text.primary}`\n      },\n      '&$disabled:before': {\n        borderBottomStyle: 'dotted'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {\n      paddingLeft: 12\n    },\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {\n      paddingRight: 12\n    },\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '25px 12px 8px',\n      '&$marginDense': {\n        paddingTop: 21,\n        paddingBottom: 4\n      },\n      '&$hiddenLabel': {\n        paddingTop: 16,\n        paddingBottom: 17\n      }\n    },\n\n    /* Styles applied to the root element if `hiddenLabel={true}`. */\n    hiddenLabel: {},\n\n    /* Styles applied to the `input` element. */\n    input: {\n      padding: '25px 12px 8px',\n      '&:-webkit-autofill': {\n        WebkitBoxShadow: theme.palette.mode === 'light' ? null : '0 0 0 100px #266798 inset',\n        WebkitTextFillColor: theme.palette.mode === 'light' ? null : '#fff',\n        caretColor: theme.palette.mode === 'light' ? null : '#fff',\n        borderTopLeftRadius: 'inherit',\n        borderTopRightRadius: 'inherit'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 21,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `input` if in `<FormControl hiddenLabel />`. */\n    inputHiddenLabel: {\n      paddingTop: 16,\n      paddingBottom: 17,\n      '&$inputMarginDense': {\n        paddingTop: 8,\n        paddingBottom: 9\n      }\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {\n      paddingLeft: 0\n    },\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {\n      paddingRight: 0\n    }\n  };\n};\nconst FilledInput = /*#__PURE__*/React.forwardRef(function FilledInput(props, ref) {\n  const {\n    disableUnderline,\n    classes,\n    fullWidth = false,\n    inputComponent = 'input',\n    multiline = false,\n    type = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableUnderline\", \"classes\", \"fullWidth\", \"inputComponent\", \"multiline\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(InputBase, _extends({\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, !disableUnderline && classes.underline),\n      underline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FilledInput.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the input will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nFilledInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiFilledInput'\n})(FilledInput);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, elementTypeAcceptingRef, refType, HTMLElementType } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport withStyles from '../styles/withStyles';\nimport Modal from '../Modal';\nimport Grow from '../Grow';\nimport Paper from '../Paper';\nexport function getOffsetTop(rect, vertical) {\n  let offset = 0;\n\n  if (typeof vertical === 'number') {\n    offset = vertical;\n  } else if (vertical === 'center') {\n    offset = rect.height / 2;\n  } else if (vertical === 'bottom') {\n    offset = rect.height;\n  }\n\n  return offset;\n}\nexport function getOffsetLeft(rect, horizontal) {\n  let offset = 0;\n\n  if (typeof horizontal === 'number') {\n    offset = horizontal;\n  } else if (horizontal === 'center') {\n    offset = rect.width / 2;\n  } else if (horizontal === 'right') {\n    offset = rect.width;\n  }\n\n  return offset;\n}\n\nfunction getTransformOriginValue(transformOrigin) {\n  return [transformOrigin.horizontal, transformOrigin.vertical].map(n => typeof n === 'number' ? `${n}px` : n).join(' ');\n} // Sum the scrollTop between two elements.\n\n\nfunction getScrollParent(parent, child) {\n  let element = child;\n  let scrollTop = 0;\n\n  while (element && element !== parent) {\n    element = element.parentElement;\n    scrollTop += element.scrollTop;\n  }\n\n  return scrollTop;\n}\n\nfunction getAnchorEl(anchorEl) {\n  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;\n}\n\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    position: 'absolute',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    // It's most likely on issue on userland.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nconst Popover = /*#__PURE__*/React.forwardRef(function Popover(props, ref) {\n  const {\n    action,\n    anchorEl,\n    anchorOrigin = {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    anchorPosition,\n    anchorReference = 'anchorEl',\n    children,\n    classes,\n    className,\n    container: containerProp,\n    elevation = 8,\n    getContentAnchorEl,\n    marginThreshold = 16,\n    open,\n    PaperProps = {},\n    transformOrigin = {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    TransitionComponent = Grow,\n    transitionDuration: transitionDurationProp = 'auto',\n    TransitionProps: {\n      onEntering\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEntering\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorEl\", \"anchorOrigin\", \"anchorPosition\", \"anchorReference\", \"children\", \"classes\", \"className\", \"container\", \"elevation\", \"getContentAnchorEl\", \"marginThreshold\", \"open\", \"PaperProps\", \"transformOrigin\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const paperRef = React.useRef(); // Returns the top/left offset of the position\n  // to attach to on the anchor element (or body if none is provided)\n\n  const getAnchorOffset = React.useCallback(contentAnchorOffset => {\n    if (anchorReference === 'anchorPosition') {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!anchorPosition) {\n          console.error('Material-UI: You need to provide a `anchorPosition` prop when using ' + '<Popover anchorReference=\"anchorPosition\" />.');\n        }\n      }\n\n      return anchorPosition;\n    }\n\n    const resolvedAnchorEl = getAnchorEl(anchorEl); // If an anchor element wasn't provided, just use the parent body element of this Popover\n\n    const anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : ownerDocument(paperRef.current).body;\n    const anchorRect = anchorElement.getBoundingClientRect();\n\n    if (process.env.NODE_ENV !== 'production') {\n      const box = anchorElement.getBoundingClientRect();\n\n      if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n        console.warn(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n      }\n    }\n\n    const anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';\n    return {\n      top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical),\n      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)\n    };\n  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]); // Returns the vertical offset of inner content to anchor the transform on if provided\n\n  const getContentAnchorOffset = React.useCallback(element => {\n    let contentAnchorOffset = 0;\n\n    if (getContentAnchorEl && anchorReference === 'anchorEl') {\n      const contentAnchorEl = getContentAnchorEl(element);\n\n      if (contentAnchorEl && element.contains(contentAnchorEl)) {\n        const scrollTop = getScrollParent(element, contentAnchorEl);\n        contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;\n      } // != the default value\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (anchorOrigin.vertical !== 'top') {\n          console.error(['Material-UI: You can not change the default `anchorOrigin.vertical` value ', 'when also providing the `getContentAnchorEl` prop to the popover component.', 'Only use one of the two props.', 'Set `getContentAnchorEl` to `null | undefined`' + ' or leave `anchorOrigin.vertical` unchanged.'].join('\\n'));\n        }\n      }\n    }\n\n    return contentAnchorOffset;\n  }, [anchorOrigin.vertical, anchorReference, getContentAnchorEl]); // Return the base transform origin using the element\n  // and taking the content anchor offset into account if in use\n\n  const getTransformOrigin = React.useCallback((elemRect, contentAnchorOffset = 0) => {\n    return {\n      vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,\n      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)\n    };\n  }, [transformOrigin.horizontal, transformOrigin.vertical]);\n  const getPositioningStyle = React.useCallback(element => {\n    // Check if the parent has requested anchoring on an inner content node\n    const contentAnchorOffset = getContentAnchorOffset(element);\n    const elemRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    }; // Get the transform origin point on the element itself\n\n    const elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset);\n\n    if (anchorReference === 'none') {\n      return {\n        top: null,\n        left: null,\n        transformOrigin: getTransformOriginValue(elemTransformOrigin)\n      };\n    } // Get the offset of of the anchoring element\n\n\n    const anchorOffset = getAnchorOffset(contentAnchorOffset); // Calculate element positioning\n\n    let top = anchorOffset.top - elemTransformOrigin.vertical;\n    let left = anchorOffset.left - elemTransformOrigin.horizontal;\n    const bottom = top + elemRect.height;\n    const right = left + elemRect.width; // Use the parent window of the anchorEl if provided\n\n    const containerWindow = ownerWindow(getAnchorEl(anchorEl)); // Window thresholds taking required margin into account\n\n    const heightThreshold = containerWindow.innerHeight - marginThreshold;\n    const widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting\n\n    if (top < marginThreshold) {\n      const diff = top - marginThreshold;\n      top -= diff;\n      elemTransformOrigin.vertical += diff;\n    } else if (bottom > heightThreshold) {\n      const diff = bottom - heightThreshold;\n      top -= diff;\n      elemTransformOrigin.vertical += diff;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (elemRect.height > heightThreshold && elemRect.height && heightThreshold) {\n        console.error(['Material-UI: The popover component is too tall.', `Some part of it can not be seen on the screen (${elemRect.height - heightThreshold}px).`, 'Please consider adding a `max-height` to improve the user-experience.'].join('\\n'));\n      }\n    } // Check if the horizontal axis needs shifting\n\n\n    if (left < marginThreshold) {\n      const diff = left - marginThreshold;\n      left -= diff;\n      elemTransformOrigin.horizontal += diff;\n    } else if (right > widthThreshold) {\n      const diff = right - widthThreshold;\n      left -= diff;\n      elemTransformOrigin.horizontal += diff;\n    }\n\n    return {\n      top: `${Math.round(top)}px`,\n      left: `${Math.round(left)}px`,\n      transformOrigin: getTransformOriginValue(elemTransformOrigin)\n    };\n  }, [anchorEl, anchorReference, getAnchorOffset, getContentAnchorOffset, getTransformOrigin, marginThreshold]);\n  const setPositioningStyles = React.useCallback(() => {\n    const element = paperRef.current;\n\n    if (!element) {\n      return;\n    }\n\n    const positioning = getPositioningStyle(element);\n\n    if (positioning.top !== null) {\n      element.style.top = positioning.top;\n    }\n\n    if (positioning.left !== null) {\n      element.style.left = positioning.left;\n    }\n\n    element.style.transformOrigin = positioning.transformOrigin;\n  }, [getPositioningStyle]);\n\n  const handleEntering = (element, isAppearing) => {\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n\n    setPositioningStyles();\n  };\n\n  React.useEffect(() => {\n    if (open) {\n      setPositioningStyles();\n    }\n  });\n  React.useImperativeHandle(action, () => open ? {\n    updatePosition: () => {\n      setPositioningStyles();\n    }\n  } : null, [open, setPositioningStyles]);\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      setPositioningStyles();\n    });\n    const containerWindow = ownerWindow(anchorEl);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [anchorEl, open, setPositioningStyles]);\n  let transitionDuration = transitionDurationProp;\n\n  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {\n    transitionDuration = undefined;\n  } // If the container prop is provided, use that\n  // If the anchorEl prop is provided, use its parent body element as the container\n  // If neither are provided let the Modal take care of choosing the container\n\n\n  const container = containerProp || (anchorEl ? ownerDocument(getAnchorEl(anchorEl)).body : undefined);\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    container: container,\n    open: open,\n    ref: ref,\n    BackdropProps: {\n      invisible: true\n    },\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEntering: handleEntering\n  }, TransitionProps), /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: elevation,\n    ref: paperRef\n  }, PaperProps, {\n    className: clsx(classes.paper, PaperProps.className)\n  }), children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Popover.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports updatePosition() action.\n   */\n  action: refType,\n\n  /**\n   * A HTML element, or a function that returns it.\n   * It's used to set the position of the popover.\n   */\n  anchorEl: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.func]), props => {\n    if (props.open && (!props.anchorReference || props.anchorReference === 'anchorEl')) {\n      const resolvedAnchorEl = getAnchorEl(props.anchorEl);\n\n      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {\n        const box = resolvedAnchorEl.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else {\n        return new Error(['Material-UI: The `anchorEl` prop provided to the component is invalid.', `It should be an Element instance but it's \\`${resolvedAnchorEl}\\` instead.`].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * This is the point on the anchor where the popover's\n   * `anchorEl` will attach to. This is not used when the\n   * anchorReference is 'anchorPosition'.\n   *\n   * Options:\n   * vertical: [top, center, bottom];\n   * horizontal: [left, center, right].\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'left',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOfType([PropTypes.oneOf(['center', 'left', 'right']), PropTypes.number]).isRequired,\n    vertical: PropTypes.oneOfType([PropTypes.oneOf(['bottom', 'center', 'top']), PropTypes.number]).isRequired\n  }),\n\n  /**\n   * This is the position that may be used\n   * to set the position of the popover.\n   * The coordinates are relative to\n   * the application's client area.\n   */\n  anchorPosition: PropTypes.shape({\n    left: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired\n  }),\n\n  /**\n   * This determines which anchor prop to refer to to set\n   * the position of the popover.\n   * @default 'anchorEl'\n   */\n  anchorReference: PropTypes.oneOf(['anchorEl', 'anchorPosition', 'none']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will passed to the Modal component.\n   *\n   * By default, it uses the body of the anchorEl's top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The elevation of the popover.\n   * @default 8\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * This function is called in order to retrieve the content anchor element.\n   * It's the opposite of the `anchorEl` prop.\n   * The content anchor element should be an element inside the popover.\n   * It's used to correctly scroll and set the position of the popover.\n   * The positioning strategy tries to make the content anchor element just above the\n   * anchor element.\n   */\n  getContentAnchorEl: PropTypes.func,\n\n  /**\n   * Specifies how close to the edge of the window the popover can appear.\n   * @default 16\n   */\n  marginThreshold: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the popover is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: elementTypeAcceptingRef\n  }),\n\n  /**\n   * This is the point on the popover which\n   * will attach to the anchor's origin.\n   *\n   * Options:\n   * vertical: [top, center, bottom, x(px)];\n   * horizontal: [left, center, right, x(px)].\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'left',\n   * }\n   */\n  transformOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOfType([PropTypes.oneOf(['center', 'left', 'right']), PropTypes.number]).isRequired,\n    vertical: PropTypes.oneOfType([PropTypes.oneOf(['bottom', 'center', 'top']), PropTypes.number]).isRequired\n  }),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPopover'\n})(Popover);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '../utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    debug = false,\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    getOptionSelected = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = option => {\n      const optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return optionLabel;\n    };\n  }\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && getOptionSelected(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => getOptionSelected(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => getOptionSelected(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => getOptionSelected(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'select-option', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => getOptionSelected(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`getOptionSelected\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => getOptionSelected(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'remove-option', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && getOptionSelected(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'primary',\n    component: Component = 'div',\n    disabled = false,\n    error = false,\n    fullWidth = false,\n    focused: visuallyFocused,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  const focused = visuallyFocused !== undefined ? visuallyFocused : focusedState;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const onFilled = React.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = React.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[`margin${capitalize(margin)}`], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    transformOrigin: 'top left'\n  },\n\n  /* Pseudo-class applied to the root element if `focused={true}`. */\n  focused: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if `error={true}`. */\n  error: {},\n\n  /* Pseudo-class applied to the root element if `required={true}`. */\n  required: {},\n\n  /* Pseudo-class applied to the asterisk element. */\n  asterisk: {},\n\n  /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n  formControl: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    // slight alteration to spec spacing to match visual spec result\n    transform: 'translate(0, 24px) scale(1)'\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    // Compensation for the `Input.inputDense` style.\n    transform: 'translate(0, 21px) scale(1)'\n  },\n\n  /* Styles applied to the `input` element if `shrink={true}`. */\n  shrink: {\n    transform: 'translate(0, 1.5px) scale(0.75)',\n    transformOrigin: 'top left'\n  },\n\n  /* Styles applied to the `input` element if `disableAnimation={false}`. */\n  animated: {\n    transition: theme.transitions.create(['color', 'transform'], {\n      duration: theme.transitions.duration.shorter,\n      easing: theme.transitions.easing.easeOut\n    })\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    // Chrome's autofill feature gives the input field a yellow background.\n    // Since the input field is behind the label in the HTML tree,\n    // the input field is drawn last and hides the label with an opaque background color.\n    // zIndex: 1 will raise the label above opaque background-colors of input.\n    zIndex: 1,\n    pointerEvents: 'none',\n    transform: 'translate(12px, 20px) scale(1)',\n    '&$marginDense': {\n      transform: 'translate(12px, 17px) scale(1)'\n    },\n    '&$shrink': {\n      transform: 'translate(12px, 10px) scale(0.75)',\n      '&$marginDense': {\n        transform: 'translate(12px, 7px) scale(0.75)'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {\n    // see comment above on filled.zIndex\n    zIndex: 1,\n    pointerEvents: 'none',\n    transform: 'translate(14px, 20px) scale(1)',\n    '&$marginDense': {\n      transform: 'translate(14px, 12px) scale(1)'\n    },\n    '&$shrink': {\n      transform: 'translate(14px, -6px) scale(0.75)'\n    }\n  }\n});\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(props, ref) {\n  const {\n    classes,\n    className,\n    disableAnimation = false,\n    shrink: shrinkProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return /*#__PURE__*/React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({\n    color: theme.palette.text.secondary\n  }, theme.typography.body1, {\n    lineHeight: 1,\n    padding: 0,\n    '&$focused': {\n      color: theme.palette.primary.main\n    },\n    '&$disabled': {\n      color: theme.palette.text.disabled\n    },\n    '&$error': {\n      color: theme.palette.error.main\n    }\n  }),\n\n  /* Styles applied to the root element if the color is secondary. */\n  colorSecondary: {\n    '&$focused': {\n      color: theme.palette.secondary.main\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `focused={true}`. */\n  focused: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if `error={true}`. */\n  error: {},\n\n  /* Pseudo-class applied to the root element if `filled={true}`. */\n  filled: {},\n\n  /* Pseudo-class applied to the root element if `required={true}`. */\n  required: {},\n\n  /* Styles applied to the asterisk element. */\n  asterisk: {\n    '&$error': {\n      color: theme.palette.error.main\n    }\n  }\n});\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'label'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[`color${capitalize(fcs.color || 'primary')}`], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  const styles = {};\n  GRID_SIZES.forEach(size => {\n    const key = `grid-${breakpoint}-${size}`;\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`; // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val, div = 1) {\n  const parse = parseFloat(val);\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGutter(theme, breakpoint) {\n  const styles = {};\n  SPACINGS.forEach(spacing => {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === '0px') {\n      return;\n    }\n\n    styles[`spacing-${breakpoint}-${spacing}`] = {\n      margin: `-${getOffset(themeSpacing, 2)}`,\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport const styles = theme => _extends({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `container={true}`. */\n  container: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `item={true}`. */\n  item: {\n    boxSizing: 'border-box',\n    margin: '0' // For instance, it's useful when used with a `figure` element.\n\n  },\n\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\n  zeroMinWidth: {\n    minWidth: 0\n  },\n\n  /* Styles applied to the root element if `direction=\"column\"`. */\n  'direction-xs-column': {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n  'direction-xs-column-reverse': {\n    flexDirection: 'column-reverse'\n  },\n\n  /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n  'direction-xs-row-reverse': {\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n  'wrap-xs-nowrap': {\n    flexWrap: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\n  'wrap-xs-wrap-reverse': {\n    flexWrap: 'wrap-reverse'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\n  'align-items-xs-center': {\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n  'align-items-xs-flex-start': {\n    alignItems: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n  'align-items-xs-flex-end': {\n    alignItems: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n  'align-items-xs-baseline': {\n    alignItems: 'baseline'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\n  'align-content-xs-center': {\n    alignContent: 'center'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n  'align-content-xs-flex-start': {\n    alignContent: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n  'align-content-xs-flex-end': {\n    alignContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n  'align-content-xs-space-between': {\n    alignContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n  'align-content-xs-space-around': {\n    alignContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"center\"`. */\n  'justify-content-xs-center': {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n  'justify-content-xs-flex-end': {\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n  'justify-content-xs-space-between': {\n    justifyContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n  'justify-content-xs-space-around': {\n    justifyContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n  'justify-content-xs-space-evenly': {\n    justifyContent: 'space-evenly'\n  }\n}, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce((accumulator, key) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(accumulator, theme, key);\n  return accumulator;\n}, {}));\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  const {\n    alignContent = 'stretch',\n    alignItems = 'stretch',\n    classes,\n    className: classNameProp,\n    component: Component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    justifyContent = 'flex-start',\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[`spacing-xs-${String(spacing)}`]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[`direction-xs-${String(direction)}`], wrap !== 'wrap' && classes[`wrap-xs-${String(wrap)}`], alignItems !== 'stretch' && classes[`align-items-xs-${String(alignItems)}`], alignContent !== 'stretch' && classes[`align-content-xs-${String(alignContent)}`], justifyContent !== 'flex-start' && classes[`justify-content-xs-${String(justifyContent)}`], xs !== false && classes[`grid-xs-${String(xs)}`], sm !== false && classes[`grid-sm-${String(sm)}`], md !== false && classes[`grid-md-${String(md)}`], lg !== false && classes[`grid-lg-${String(lg)}`], xl !== false && classes[`grid-xl-${String(xl)}`]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   * @default 'stretch'\n   */\n  alignContent: PropTypes.oneOf(['center', 'flex-end', 'flex-start', 'space-around', 'space-between', 'stretch']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   * @default 'stretch'\n   */\n  alignItems: PropTypes.oneOf(['baseline', 'center', 'flex-end', 'flex-start', 'stretch']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @default 'flex-start'\n   */\n  justifyContent: PropTypes.oneOf(['center', 'flex-end', 'flex-start', 'space-around', 'space-between', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nconst StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayNode.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [displayNode, value]);\n  React.useEffect(() => {\n    if (autoFocus && displayNode) {\n      displayNode.focus();\n    }\n  }, [autoFocus, displayNode]);\n  React.useEffect(() => {\n    if (displayNode) {\n      const label = ownerDocument(displayNode).getElementById(labelId);\n\n      if (label) {\n        const handler = () => {\n          if (getSelection().isCollapsed) {\n            displayNode.focus();\n          }\n        };\n\n        label.addEventListener('click', handler);\n        return () => {\n          label.removeEventListener('click', handler);\n        };\n      }\n    }\n\n    return undefined;\n  }, [labelId, displayNode]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayNode.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        event.persist(); // Preact support, target is read only property on a native event.\n\n        Object.defineProperty(event, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(event, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),\n    ref: setDisplayNode,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    // The id is required for proper a11y\n    id: buttonId\n  }), isEmpty(display) ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), /*#__PURE__*/React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    \"aria-hidden\": true,\n    onChange: handleChange,\n    tabIndex: -1,\n    className: classes.nativeInput,\n    autoFocus: autoFocus\n  }, other)), /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n  }), /*#__PURE__*/React.createElement(Menu, _extends({\n    id: `menu-${name || ''}`,\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\n/**\n * @ignore - internal component.\n */\n\nconst NativeSelectInput = /*#__PURE__*/React.forwardRef(function NativeSelectInput(props, ref) {\n  const {\n    classes,\n    className,\n    disabled,\n    IconComponent,\n    inputRef,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"disabled\", \"IconComponent\", \"inputRef\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes[variant], className, disabled && classes.disabled),\n    disabled: disabled,\n    ref: inputRef || ref\n  }, other)), props.multiple ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], disabled && classes.disabled)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelectInput.propTypes = {\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Use that prop to pass a ref to the native select element.\n   * @deprecated\n   */\n  inputRef: refType,\n\n  /**\n   * @ignore\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default NativeSelectInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport NativeSelectInput from './NativeSelectInput';\nimport withStyles from '../styles/withStyles';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nexport const styles = theme => ({\n  /* Styles applied to the select component `root` class. */\n  root: {},\n\n  /* Styles applied to the select component `select` class. */\n  select: {\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    // When interacting quickly, the text can end up selected.\n    // Native select can't be selected either.\n    userSelect: 'none',\n    borderRadius: 0,\n    // Reset\n    minWidth: 16,\n    // So it doesn't collapse.\n    cursor: 'pointer',\n    '&:focus': {\n      // Show that it's not an text input\n      backgroundColor: theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',\n      borderRadius: 0 // Reset Chrome style\n\n    },\n    // Remove IE11 arrow\n    '&::-ms-expand': {\n      display: 'none'\n    },\n    '&$disabled': {\n      cursor: 'default'\n    },\n    '&[multiple]': {\n      height: 'auto'\n    },\n    '&:not([multiple]) option, &:not([multiple]) optgroup': {\n      backgroundColor: theme.palette.background.paper\n    },\n    '&&': {\n      paddingRight: 24\n    }\n  },\n\n  /* Styles applied to the select component if `variant=\"filled\"`. */\n  filled: {\n    '&&': {\n      paddingRight: 32\n    }\n  },\n\n  /* Styles applied to the select component if `variant=\"outlined\"`. */\n  outlined: {\n    borderRadius: theme.shape.borderRadius,\n    '&&': {\n      paddingRight: 32\n    }\n  },\n\n  /* Styles applied to the select component `selectMenu` class. */\n  selectMenu: {\n    height: 'auto',\n    // Resets for multpile select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n\n  /* Pseudo-class applied to the select component `disabled` class. */\n  disabled: {},\n\n  /* Styles applied to the icon component. */\n  icon: {\n    // We use a position absolute over a flexbox in order to forward the pointer events\n    // to the input and to support wrapping tags..\n    position: 'absolute',\n    right: 0,\n    top: 'calc(50% - 12px)',\n    // Center vertically\n    pointerEvents: 'none',\n    // Don't block pointer events on the select under the icon.\n    color: theme.palette.action.active,\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  },\n\n  /* Styles applied to the icon component if the popup is open. */\n  iconOpen: {\n    transform: 'rotate(180deg)'\n  },\n\n  /* Styles applied to the icon component if `variant=\"filled\"`. */\n  iconFilled: {\n    right: 7\n  },\n\n  /* Styles applied to the icon component if `variant=\"outlined\"`. */\n  iconOutlined: {\n    right: 7\n  },\n\n  /* Styles applied to the underlying native input component. */\n  nativeInput: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    opacity: 0,\n    pointerEvents: 'none',\n    width: '100%'\n  }\n});\nconst defaultInput = /*#__PURE__*/React.createElement(Input, null);\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\n\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(props, ref) {\n  const {\n    children,\n    classes,\n    IconComponent = ArrowDropDownIcon,\n    input = defaultInput,\n    inputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  return /*#__PURE__*/React.cloneElement(input, _extends({\n    // Most of the logic is implemented in `NativeSelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: NativeSelectInput,\n    inputProps: _extends({\n      children,\n      classes,\n      IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, inputProps, input ? input.props.inputProps : {}),\n    ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n\n  /**\n   * Attributes applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default withStyles(styles, {\n  name: 'MuiNativeSelect'\n})(NativeSelect);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { mergeClasses } from '@material-ui/styles';\nimport SelectInput from './SelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport { styles as nativeSelectStyles } from '../NativeSelect/NativeSelect';\nimport NativeSelectInput from '../NativeSelect/NativeSelectInput';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nexport const styles = nativeSelectStyles;\n\nvar _ref = /*#__PURE__*/React.createElement(Input, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(FilledInput, null);\n\nconst Select = /*#__PURE__*/React.forwardRef(function Select(props, ref) {\n  const {\n    autoWidth = false,\n    children,\n    classes,\n    displayEmpty = false,\n    IconComponent = ArrowDropDownIcon,\n    id,\n    input,\n    inputProps,\n    label,\n    labelId,\n    labelWidth = 0,\n    MenuProps,\n    multiple = false,\n    native = false,\n    onClose,\n    onOpen,\n    open,\n    renderValue,\n    SelectDisplayProps,\n    variant: variantProps = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"id\", \"input\", \"inputProps\", \"label\", \"labelId\", \"labelWidth\", \"MenuProps\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\", \"variant\"]);\n\n  const inputComponent = native ? NativeSelectInput : SelectInput;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  const variant = fcs.variant || variantProps;\n  const InputComponent = input || {\n    standard: _ref,\n    outlined: /*#__PURE__*/React.createElement(OutlinedInput, {\n      label: label,\n      labelWidth: labelWidth\n    }),\n    filled: _ref2\n  }[variant];\n  return /*#__PURE__*/React.cloneElement(InputComponent, _extends({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent,\n    inputProps: _extends({\n      children,\n      IconComponent,\n      variant,\n      type: undefined,\n      // We render a select. We can ignore the type provided by the `Input`.\n      multiple\n    }, native ? {\n      id\n    } : {\n      autoWidth,\n      displayEmpty,\n      labelId,\n      MenuProps,\n      onClose,\n      onOpen,\n      open,\n      renderValue,\n      SelectDisplayProps: _extends({\n        id\n      }, SelectDisplayProps)\n    }, inputProps, {\n      classes: inputProps ? mergeClasses({\n        baseClasses: classes,\n        newClasses: inputProps.classes,\n        Component: Select\n      }) : classes\n    }, input ? input.props.inputProps : {}),\n    ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Select.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   * @default false\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   *\n   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, a value is displayed even if no items are selected.\n   *\n   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which\n   * returns the value to be displayed when no items are selected.\n   *\n   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.\n   * The label should either be hidden or forced to a shrunk state.\n   * @default false\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * The `id` of the wrapper element or the `select` element when `native`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: PropTypes.element,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * When `native` is `true`, the attributes are applied on the `select` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * See [OutlinedInput#label](/api/outlined-input/#props)\n   */\n  label: PropTypes.node,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * See [OutlinedInput#label](/api/outlined-input/#props)\n   * @default 0\n   */\n  labelWidth: PropTypes.number,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   * @default false\n   */\n  native: PropTypes.bool,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` prop is `false` (default).\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * The input value. Providing an empty string will select no options.\n   * This prop is required when the `native` prop is `false` (default).\n   * Set to an empty string `''` if you don't want any of the available options to be selected.\n   *\n   * If the value is an object it must have reference equality with the option in order to be selected.\n   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nSelect.muiName = 'Select';\nexport default withStyles(styles, {\n  name: 'MuiSelect'\n})(Select);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    lineHeight: '48px',\n    listStyle: 'none',\n    color: theme.palette.text.secondary,\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(14)\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 72\n  },\n\n  /* Styles applied to the root element if `disableSticky={false}`. */\n  sticky: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    backgroundColor: 'inherit'\n  }\n});\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'default',\n    component: Component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[`color${capitalize(color)}`], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   * @default false\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '../styles';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '&$focused $clearIndicatorDirty': {\n      visibility: 'visible'\n    },\n\n    /* Avoid double tap issue on iOS */\n    '@media (pointer: fine)': {\n      '&:hover $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  },\n\n  /* Pseudo-class applied to the root element if focused. */\n  focused: {},\n\n  /* Styles applied to the tag elements, e.g. the chips. */\n  tag: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  },\n\n  /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n  tagSizeSmall: {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  },\n\n  /* Styles applied when the popup icon is rendered. */\n  hasPopupIcon: {},\n\n  /* Styles applied when the clear icon is rendered. */\n  hasClearIcon: {},\n\n  /* Styles applied to the Input element. */\n  inputRoot: {\n    flexWrap: 'wrap',\n    '$hasPopupIcon &, $hasClearIcon &': {\n      paddingRight: 26 + 4\n    },\n    '$hasPopupIcon$hasClearIcon &': {\n      paddingRight: 52 + 4\n    },\n    '& $input': {\n      width: 0,\n      minWidth: 30\n    },\n    '&[class*=\"MuiInput-root\"]': {\n      paddingBottom: 1,\n      '& $input': {\n        padding: 4\n      },\n      '& $input:first-child': {\n        padding: '6px 0'\n      }\n    },\n    '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n      '& $input': {\n        padding: '2px 4px 3px'\n      },\n      '& $input:first-child': {\n        padding: '1px 0 4px'\n      }\n    },\n    '&[class*=\"MuiOutlinedInput-root\"]': {\n      padding: 9,\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4 + 9\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4 + 9\n      },\n      '& $input': {\n        padding: '7.5px 4px'\n      },\n      '& $input:first-child': {\n        paddingLeft: 6\n      },\n      '& $endAdornment': {\n        right: 9\n      }\n    },\n    '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n      padding: 6,\n      '& $input': {\n        padding: '2.5px 4px'\n      }\n    },\n    '&[class*=\"MuiFilledInput-root\"]': {\n      paddingTop: 19,\n      paddingLeft: 8,\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4 + 9\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4 + 9\n      },\n      '& $input': {\n        padding: '7px 4px'\n      },\n      '& $endAdornment': {\n        right: 9\n      }\n    },\n    '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n      paddingBottom: 1,\n      '& $input': {\n        padding: '2.5px 4px'\n      }\n    }\n  },\n\n  /* Styles applied to the input element. */\n  input: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  },\n\n  /* Styles applied to the input element if tag focused. */\n  inputFocused: {\n    opacity: 1\n  },\n\n  /* Styles applied to the endAdornment element. */\n  endAdornment: {\n    // We use a position absolute to support wrapping tags.\n    position: 'absolute',\n    right: 0,\n    top: 'calc(50% - 14px)' // Center vertically\n\n  },\n\n  /* Styles applied to the clear indicator. */\n  clearIndicator: {\n    marginRight: -2,\n    padding: 4,\n    visibility: 'hidden'\n  },\n\n  /* Styles applied to the clear indicator if the input is dirty. */\n  clearIndicatorDirty: {},\n\n  /* Styles applied to the popup indicator. */\n  popupIndicator: {\n    padding: 2,\n    marginRight: -2\n  },\n\n  /* Styles applied to the popup indicator if the popup is open. */\n  popupIndicatorOpen: {\n    transform: 'rotate(180deg)'\n  },\n\n  /* Styles applied to the popper element. */\n  popper: {\n    zIndex: theme.zIndex.modal\n  },\n\n  /* Styles applied to the popper element if `disablePortal={true}`. */\n  popperDisablePortal: {\n    position: 'absolute'\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: _extends({}, theme.typography.body1, {\n    overflow: 'auto',\n    margin: '4px 0'\n  }),\n\n  /* Styles applied to the `listbox` component. */\n  listbox: {\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto'\n  },\n\n  /* Styles applied to the loading wrapper. */\n  loading: {\n    color: theme.palette.text.secondary,\n    padding: '14px 16px'\n  },\n\n  /* Styles applied to the no option wrapper. */\n  noOptions: {\n    color: theme.palette.text.secondary,\n    padding: '14px 16px'\n  },\n\n  /* Styles applied to the option elements. */\n  option: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '&[data-focus=\"true\"]': {\n      backgroundColor: theme.palette.action.hover\n    },\n    '&:active': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }\n  },\n\n  /* Styles applied to the group's label elements. */\n  groupLabel: {\n    backgroundColor: theme.palette.background.paper,\n    top: -8\n  },\n\n  /* Styles applied to the group's ul elements. */\n  groupUl: {\n    padding: 0,\n    '& $option': {\n      paddingLeft: 24\n    }\n  }\n});\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  const other = _objectWithoutPropertiesLoose(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    classes,\n    className,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeIcon = _ref,\n    closeText = 'Close',\n    debug = false,\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent: PopperComponentProp = Popper,\n    popupIcon = _ref2,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/React.createElement(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/React.createElement(\"li\", {\n    key: params.key\n  }, /*#__PURE__*/React.createElement(ListSubheader, {\n    className: classes.groupLabel,\n    component: \"div\"\n  }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.groupUl\n  }, params.children));\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/React.createElement(\"li\", props2, getOptionLabel(option));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  const hasClearIcon = !disableClearable && !disabled;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id,\n    disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map((option, index) => {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   * @default <CloseIcon fontSize=\"small\" />\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   * @default false\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * The `Popper` content will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"remove-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport ownerWindow from '../utils/ownerWindow';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nconst styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(ref, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({});\n  const syncHeight = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input);\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    const boxSizing = computedStyle['box-sizing'];\n    const padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    const border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(prevState => {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow,\n          outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0;\n      syncHeight();\n    });\n    const containerWindow = ownerWindow(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n\n  const handleChange = event => {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport const styles = theme => {\n  const light = theme.palette.mode === 'light';\n  const placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  const placeholderHidden = {\n    opacity: '0 !important'\n  };\n  const placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.4375em',\n      // 23px\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '4px 0 5px',\n      '&$marginDense': {\n        paddingTop: 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `hiddenLabel={true}`. */\n    hiddenLabel: {},\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: '4px 0 5px',\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.4375em',\n      // Reset 23pxthe native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nconst InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    autoComplete,\n    autoFocus,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    endAdornment,\n    fullWidth = false,\n    id,\n    inputComponent = 'input',\n    inputProps: inputPropsProp = {},\n    inputRef: inputRefProp,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    placeholder,\n    readOnly,\n    renderSuffix,\n    rows,\n    startAdornment,\n    type = 'text',\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"startAdornment\", \"type\", \"value\"]);\n\n  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef();\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  const handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  const handleInputRef = useForkRef(inputRef, handleInputRefProp);\n  const [focused, setFocused] = React.useState(false);\n  const muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  const onFilled = muiFormControl && muiFormControl.onFilled;\n  const onEmpty = muiFormControl && muiFormControl.onEmpty;\n  const checkDirty = React.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  const handleFocus = event => {\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: Expected valid input target. Did you use a custom \\`inputComponent\\` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(() => {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  let InputComponent = inputComponent;\n\n  let inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows) {\n      InputComponent = 'textarea';\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (minRows || maxRows) {\n          console.warn('Material-UI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n    } else {\n      inputProps = _extends({\n        maxRows,\n        minRows\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type\n    }, inputProps);\n  }\n\n  const handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`color${capitalize(fcs.color || 'primary')}`], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.hiddenLabel && classes.hiddenLabel, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'left',\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      top: -5,\n      left: 0,\n      margin: 0,\n      padding: '0 8px',\n      pointerEvents: 'none',\n      borderRadius: 'inherit',\n      borderStyle: 'solid',\n      borderWidth: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the legend element when `labelWidth` is provided. */\n    legend: {\n      padding: 0,\n      lineHeight: '11px',\n      // sync with `height` in `legend` styles\n      transition: theme.transitions.create('width', {\n        duration: 150,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the legend element. */\n    legendLabelled: {\n      display: 'block',\n      width: 'auto',\n      padding: 0,\n      height: 11,\n      // sync with `lineHeight` in `legend` styles\n      fontSize: '0.75em',\n      visibility: 'hidden',\n      maxWidth: 0.01,\n      transition: theme.transitions.create('max-width', {\n        duration: 50,\n        easing: theme.transitions.easing.easeOut\n      }),\n      '& > span': {\n        paddingLeft: 5,\n        paddingRight: 5,\n        display: 'inline-block'\n      }\n    },\n\n    /* Styles applied to the legend element is notched. */\n    legendNotched: {\n      maxWidth: 1000,\n      transition: theme.transitions.create('max-width', {\n        duration: 100,\n        easing: theme.transitions.easing.easeOut,\n        delay: 50\n      })\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nconst NotchedOutline = /*#__PURE__*/React.forwardRef(function NotchedOutline(props, ref) {\n  const {\n    classes,\n    className,\n    label,\n    labelWidth: labelWidthProp,\n    notched,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"label\", \"labelWidth\", \"notched\", \"style\"]);\n\n  const theme = useTheme();\n  const align = theme.direction === 'rtl' ? 'right' : 'left';\n\n  if (label !== undefined) {\n    return /*#__PURE__*/React.createElement(\"fieldset\", _extends({\n      \"aria-hidden\": true,\n      className: clsx(classes.root, className),\n      ref: ref,\n      style: style\n    }, other), /*#__PURE__*/React.createElement(\"legend\", {\n      className: clsx(classes.legendLabelled, notched && classes.legendNotched)\n    }, label ? /*#__PURE__*/React.createElement(\"span\", null, label) : /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    })));\n  }\n\n  const labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;\n  return /*#__PURE__*/React.createElement(\"fieldset\", _extends({\n    \"aria-hidden\": true,\n    style: _extends({\n      [`padding${capitalize(align)}`]: 8\n    }, style),\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"legend\", {\n    className: classes.legend,\n    style: {\n      // IE11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateNotchedOutline'\n})(NotchedOutline);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport NotchedOutline from './NotchedOutline';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => {\n  const borderColor = theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      '&:hover $notchedOutline': {\n        borderColor: theme.palette.text.primary\n      },\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        '&:hover $notchedOutline': {\n          borderColor\n        }\n      },\n      '&$focused $notchedOutline': {\n        borderColor: theme.palette.primary.main,\n        borderWidth: 2\n      },\n      '&$error $notchedOutline': {\n        borderColor: theme.palette.error.main\n      },\n      '&$disabled $notchedOutline': {\n        borderColor: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused $notchedOutline': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {\n      paddingLeft: 14\n    },\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {\n      paddingRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '16.5px 14px',\n      '&$marginDense': {\n        paddingTop: 10.5,\n        paddingBottom: 10.5\n      }\n    },\n\n    /* Styles applied to the `NotchedOutline` element. */\n    notchedOutline: {\n      borderColor\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      padding: '16.5px 14px',\n      '&:-webkit-autofill': {\n        WebkitBoxShadow: theme.palette.mode === 'light' ? null : '0 0 0 100px #266798 inset',\n        WebkitTextFillColor: theme.palette.mode === 'light' ? null : '#fff',\n        caretColor: theme.palette.mode === 'light' ? null : '#fff',\n        borderRadius: 'inherit'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 8.5,\n      paddingBottom: 8.5\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {\n      paddingLeft: 0\n    },\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {\n      paddingRight: 0\n    }\n  };\n};\nconst OutlinedInput = /*#__PURE__*/React.forwardRef(function OutlinedInput(props, ref) {\n  const {\n    classes,\n    fullWidth = false,\n    inputComponent = 'input',\n    label,\n    labelWidth = 0,\n    multiline = false,\n    notched,\n    type = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"fullWidth\", \"inputComponent\", \"label\", \"labelWidth\", \"multiline\", \"notched\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(InputBase, _extends({\n    renderSuffix: state => /*#__PURE__*/React.createElement(NotchedOutline, {\n      className: classes.notchedOutline,\n      label: label,\n      labelWidth: labelWidth,\n      notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)\n    }),\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, classes.underline),\n      notchedOutline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? OutlinedInput.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label of the input. It is only used for layout. The actual labelling\n   * is handled by `InputLabel`. If specified `labelWidth` is ignored.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The width of the label. Is ignored if `label` is provided. Prefer `label`\n   * if the input label appears with a strike through.\n   * @default 0\n   */\n  labelWidth: PropTypes.number,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nOutlinedInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiOutlinedInput'\n})(OutlinedInput);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport const styles = theme => {\n  const backgroundColor = theme.palette.mode === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &$focusVisible': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &$focusVisible': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &$focusVisible': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&$focusVisible': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&$focusVisible': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&$focusVisible': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n      '&$focusVisible, $clickable&:hover': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {},\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: `1px solid ${theme.palette.primary.main}`,\n      '&$focusVisible, $clickable&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: `1px solid ${theme.palette.secondary.main}`,\n      '&$focusVisible, $clickable&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"filled\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"filled\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if keyboard focused. */\n    focusVisible: {}\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  const {\n    avatar: avatarProp,\n    classes,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const Component = ComponentProp || (clickable || onDelete ? ButtonBase : 'div');\n  const moreProps = Component === ButtonBase ? {\n    component: 'div',\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: Boolean(onDelete)\n  } : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[`avatarColor${capitalize(color)}`])\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[`iconColor${capitalize(color)}`])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    clickable,\n    color,\n    disabled,\n    size,\n    variant\n  }), 'MuiChip');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, color !== 'default' && [classes[`color${capitalize(color)}`], clickable && classes[`clickableColor${capitalize(color)}`], onDelete && classes[`deletableColor${capitalize(color)}`]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable, variant === 'outlined' && {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({\n    color: theme.palette.text.secondary\n  }, theme.typography.caption, {\n    textAlign: 'left',\n    marginTop: 3,\n    margin: 0,\n    '&$disabled': {\n      color: theme.palette.text.disabled\n    },\n    '&$error': {\n      color: theme.palette.error.main\n    }\n  }),\n\n  /* Pseudo-class applied to the root element if `error={true}`. */\n  error: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 4\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n  contained: {\n    marginLeft: 14,\n    marginRight: 14\n  },\n\n  /* Pseudo-class applied to the root element if `focused={true}`. */\n  focused: {},\n\n  /* Pseudo-class applied to the root element if `filled={true}`. */\n  filled: {},\n\n  /* Pseudo-class applied to the root element if `required={true}`. */\n  required: {}\n});\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    classes,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && '\\u00a0*');\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element will be required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);"],"sourceRoot":""}