{"version":3,"sources":["components/PaddedContainer.tsx","components/form/TextField.tsx","components/Card.tsx","components/form/DisplayField.tsx","pages/accounts/BusinessDetails.tsx"],"names":["PaddedContainer","styled","div","TextFieldStyle","css","TextField","props","name","control","label","error","rules","multiline","minRows","placeholder","disabled","autoFocus","transform","render","onChange","onBlur","value","id","fullWidth","event","target","InputLabelProps","shrink","helperText","message","Title","Head","Root","Card","children","title","ariaLabel","aria-label","DisplayFieldStyle","DisplayField","defaultValues","ABN","ACN","TradingName","WebSite","TradingAddress","Notes","BusinessDetails","methods","useForm","mode","handleSubmit","onSubmit","Grid","container","spacing","item","xs","lg","sm"],"mappings":"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","file":"static/js/11.e5f5acf4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst PaddedContainer = styled.div`\n  padding: 16px;\n`;\n\nexport default PaddedContainer\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Control, Controller, FieldError } from 'react-hook-form';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport { FieldRules } from 'types/FieldRules';\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\ninterface Props<T> {\n  name: keyof T;\n  control: Control<T>;\n  label?: string;\n  className?: string;\n  error?: FieldError;\n  rules?: FieldRules;\n  placeholder?: string;\n  multiline?: boolean;\n  minRows?: number;\n  // type?: 'text' | 'number' | 'password';\n  disabled?: boolean;\n  autoFocus?: boolean;\n  transform?: (value: string) => any;\n}\n\nconst TextField = <T extends object>(props: Props<T>) => {\n  const {\n    name,\n    control,\n    label,\n    error,\n    rules,\n    multiline,\n    minRows,\n    // type,\n    placeholder,\n    disabled,\n    autoFocus,\n    transform\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      rules={rules}\n      render={({ onChange, onBlur, value, name }) => (\n        <MuiTextField\n          id={name}\n          fullWidth\n          autoFocus={autoFocus}\n          css={TextFieldStyle}\n          multiline={multiline}\n          minRows={minRows}\n          // type={ type }\n          label={label}\n          placeholder={placeholder}\n          onChange={ (event) => {\n            if (transform) {\n              onChange(transform(event.target.value));\n            } else {\n              onChange(event.target.value);\n            }\n          }}\n          onBlur={onBlur}\n          value={value}\n          error={!!error}\n          InputLabelProps={{ shrink: true }}\n          helperText={error?.message ?? ''}\n          disabled={disabled}\n        />\n      )}\n    />\n  );\n};\n\nexport default TextField;\n","import styled from '@emotion/styled';\nimport React, { PropsWithChildren } from 'react';\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 16px;\n  flex-grow: 1;\n`;\n\nconst Head = styled.div`\n  display: flex;\n`;\n\nconst Root = styled.div`\n\n  @media (min-width: 600px) {\n    border: 2px solid rgba(0,0,0,0.12);\n    padding: 16px;\n  }\n  @media (max-width: 599.95px) {\n    padding: 0;\n    border-bottom: 2px solid rgba(0,0,0,0.12);\n  }\n`;\n\ninterface CardProps {\n  title?: string;\n  ariaLabel?: string;\n  actionMenu?: React.ReactNode;\n}\n\n// const Card: React.ForwardRefRenderFunction<PropsWithChildren<CardProps>, HTMLDivElement | null | any> = ({\nfunction Card({\n  children,\n  title,\n  ariaLabel,\n  // actionMenu,\n}: PropsWithChildren<CardProps>) {\n// }, ref) => {\n  return (\n    <Root aria-label={ariaLabel}>\n      {\n      title &&\n        <Head>\n          <Title>{title}</Title>\n        </Head>\n      }\n      {children}</Root>\n  )\n}\n\nexport default Card;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst DisplayFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    /* background-color: #fafafa; */\n  }\n  .MuiInput-input {\n    padding: 2px 0;\n    font-size: 14px;\n  }\n`;\ninterface Props {\n  label: string;\n  className?: string;\n  // type?: 'text' | 'number' | 'password';\n  disabled?: boolean;\n  value: string;\n  transform?: (value: string) => any;\n}\n\nconst DisplayField = (props: Props) => {\n  const {\n    label,\n    disabled,\n    value,\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      css={DisplayFieldStyle}\n      // type={ type }\n      label={label}\n      value={value}\n      InputLabelProps={{ shrink: true }}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default DisplayField;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\n// import styled from '@emotion/styled';\n// import { GoCheck } from 'react-icons/go';\n// import { MdEdit, MdEmail, MdLocalPhone, MdSend } from 'react-icons/md';\n// import { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Grid } from '@material-ui/core';\n// import AutoCompleteField, { SelectOption } from 'components/form/AutoCompleteField';\nimport TextField from 'components/form/TextField';\nimport PaddedContainer from 'components/PaddedContainer';\nimport DisplayField from 'components/form/DisplayField';\nimport Card from 'components/Card';\n\n// const ContactDetails = styled.div`\n//   padding: 16px 16px 1px 16px;\n//   background-color: #eee;\n//   margin-top: 1px;\n//   font-size: 14px;\n//   position: relative;\n// `;\n\n// const ContactLineIcon = styled.div`\n//   display: inline-block;\n//   margin-right: 10px;\n//   vertical-align: middle;\n// `;\n\n// const ContactDetailLine = styled.div`\n//   margin-bottom: 16px;\n// `;\n\n// const ContactEditClass = css`\n//   position: absolute;\n//   right: 2px;\n//   top: 2px;\n// `\n\n// const contactOptions: SelectOption<string>[] = [\n//   { label: \"Walter White\", value: \"123\" },\n//   { label: \"Saul Goodman\", value: \"456\" },\n//   { label: \"Kim Wexler\", value: \"789\" }\n// ];\n\ninterface BusinessDetailsForm {\n  // LegalName: string;\n  ABN: string;\n  ACN: string;\n  TradingName: string;\n  TradingAddress: string;\n  WebSite: string;\n  Notes: string;\n  // Abn: string;\n  // PrimaryContact: SelectOption<string> | undefined;\n  // SecondaryContact: SelectOption<string> | undefined;\n}\n\nconst defaultValues: BusinessDetailsForm = {\n  // LegalName: 'Breaking Bad Pty Ltd',\n  ABN: '',\n  ACN: '',\n  TradingName: '',\n  WebSite: '',\n  TradingAddress: '',\n  Notes: '',\n  // Abn: '12 345 678 901',\n  // PrimaryContact: contactOptions.find(option => option.value === '123'),\n  // SecondaryContact: undefined,\n}\n\nfunction BusinessDetails() {\n  // const history = useHistory();\n  const methods = useForm<BusinessDetailsForm>({\n    defaultValues,\n    mode: 'onChange',\n  });\n\n  const {\n    handleSubmit,\n    // formState,\n    // watch,\n    control,\n  } = methods;\n\n  // const primaryContact = watch('PrimaryContact');\n  // const secondaryContact = watch('SecondaryContact');\n\n  return (\n    <PaddedContainer>\n      <form onSubmit={handleSubmit(() => {})}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} lg={6}>\n            <Card title=\"Details\">\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    name=\"ABN\"\n                    control={control}\n                    label=\"ABN\"\n                    placeholder=\"Find by name or ABN\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <DisplayField\n                    label=\"Legal Name\"\n                    value=\"\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    name=\"ACN\"\n                    label=\"ACN\"\n                    control={control}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"TradingName\"\n                    control={control}\n                    label=\"Trading Name\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"TradingAddress\"\n                    control={control}\n                    label=\"Trading Address\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"WebSite\"\n                    control={control}\n                    label=\"Web Site\"\n                    placeholder=\"https://\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"Notes\"\n                    control={control}\n                    multiline\n                    minRows={3}\n                    label=\"Notes\"\n                  />\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n          {/* <Grid item xs={12} lg={6}>\n            <Card title=\"Contacts\">\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <AutoCompleteField\n                    name=\"PrimaryContact\"\n                    control={control}\n                    label=\"Primary Contact\"\n                    options={[\n                      { label: \"Walter White\", value: \"123\" },\n                      { label: \"Saul Goodman\", value: \"456\" },\n                      { label: \"Kim Wexler\", value: \"789\" }\n                    ]}\n                    placeholder=\"Select contact\"\n                    rules={ { required: 'Required' } }\n                  />\n                  {\n                    primaryContact &&\n                    <ContactDetails>\n                      <IconButton\n                        css={ContactEditClass}\n                        onClick={() => history.push('./directory/100')}\n                      >\n                        <MdEdit />\n                      </IconButton>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdLocalPhone /></ContactLineIcon>+61 400 123 456\n                      </ContactDetailLine>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdEmail /></ContactLineIcon>walter.white@bb.com\n                        <Tooltip title=\"Joined\"><InviteStatusIcon css={Joined}><GoCheck /></InviteStatusIcon></Tooltip>\n                      </ContactDetailLine>\n                    </ContactDetails>\n                  }\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <AutoCompleteField\n                    name=\"SecondaryContact\"\n                    control={control}\n                    label=\"Secondary Contact\"\n                    options={[\n                      { label: \"Walter White\", value: \"123\" },\n                      { label: \"Saul Goodman\", value: \"456\" },\n                      { label: \"Kim Wexler\", value: \"789\" }\n                    ]}\n                    placeholder=\"Select contact\"\n                    rules={ { required: 'Required' } }\n                  />\n                  {\n                    secondaryContact &&\n                    <ContactDetails>\n                      <IconButton\n                        css={ContactEditClass}\n                        onClick={() => history.push('./directory/200')}\n                      >\n                        <MdEdit />\n                      </IconButton>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdLocalPhone /></ContactLineIcon>+61 444 555 666\n                      </ContactDetailLine>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdEmail /></ContactLineIcon>kim.wexler@wm.com\n                        <Tooltip title=\"Invited\"><InviteStatusIcon css={Invited}><MdSend /></InviteStatusIcon></Tooltip>\n                      </ContactDetailLine>\n                    </ContactDetails>\n                  }\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid> */}\n        </Grid>\n      </form>\n    </PaddedContainer>\n  )\n}\n\nexport default BusinessDetails;\n"],"sourceRoot":""}