{"version":3,"sources":["../node_modules/@material-ui/core/utils/createSvgIcon.js","components/PaddedContainer.tsx","utils/isArray.ts","components/LazyDialog.tsx","components/Card.tsx","types/AccountType.ts","components/table/FilterDrawer.tsx","utils/isNullOrUndefined.ts","utils/isObject.ts","utils/isEmptyObject.ts","components/table/Table.tsx","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/Fab/Fab.js","../node_modules/@material-ui/core/Dialog/Dialog.js","pages/accounts/List.tsx"],"names":["createSvgIcon","path","displayName","Component","props","ref","React","createElement","SvgIcon","_extends","muiName","memo","forwardRef","PaddedContainer","styled","div","isArray","value","Array","LazyDialog","isOpen","children","useState","isOpenState","setOpenState","useEffect","timeoutId","setTimeout","clearTimeout","Suspense","fallback","open","Title","Head","Root","Card","title","ariaLabel","aria-label","AccountType","AccountTypeLabels","Map","InvoiceFinance","Instalments","useStyles","makeStyles","theme","createStyles","filterDrawer","filterHeading","padding","spacing","margin","borderBottom","borderBottomColor","palette","grey","filters","minHeight","filterDrawerContent","minWidth","display","height","gridTemplateRows","filterDrawerBackdrop","background","filteredCount","fontSize","color","marginLeft","filterFooter","borderTop","borderTopColor","FilterDrawer","onClose","onClearFilters","topicName","classes","handleClear","useCallback","evt","handleApply","Drawer","anchor","className","ModalProps","BackdropProps","toLowerCase","DialogActions","Button","size","onClick","variant","isNullOrUndefined","isObject","isObjectType","Date","isEmptyObject","Object","keys","length","TableLoaderContainer","TableHeadCellStyles","css","TableCellStyles","TableRowClickableStyles","TableHeadCellInnerStyles","defaultPaginationState","total","current","pageSize","Table","frozenHeader","columns","data","onPaginationChange","onSortChange","onRowClick","pagination","sort","filterable","isLoading","rowsPerPageOptions","topic","sortState","setSortState","paginationState","setPaginationState","filtersDrawerOpen","setFiltersDrawerOpen","handleChangePage","_evt","newPage","newPaginationState","handleChangeRowsPerPage","target","handleRowClick","record","rowClassName","useMemo","undefined","tableHeaders","TableRow","map","column","index","columnSortState","dataIndex","columnDataIndex","TableCell","root","width","sortable","TableSortLabel","active","direction","newSortState","rowCells","row","i","render","filterComponents","filterComponent","Fragment","hasFilters","Toolbar","Tooltip","IconButton","DelayedLoader","TableContainer","style","maxHeight","stickyHeader","TableHead","TableBody","TablePagination","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","d","Fab","component","disabled","disableFocusRipple","focusVisibleClassName","other","_objectWithoutPropertiesLoose","themeVariantsClasses","useThemeVariants","ButtonBase","clsx","capitalize","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","typography","button","transition","transitions","create","duration","short","borderRadius","boxShadow","shadows","getContrastText","backgroundColor","A100","textDecoration","action","disabledBackground","alignItems","justifyContent","contrastText","main","dark","extended","circular","sizeSmall","sizeMedium","name","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","disableBackdropClick","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","PaperComponent","Paper","PaperProps","scroll","TransitionComponent","Fade","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","backdropClick","Modal","BackdropComponent","Backdrop","closeAfterTransition","event","appear","in","timeout","role","container","onMouseDown","currentTarget","elevation","paper","String","paperFullScreen","paperFullWidth","position","scrollPaper","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","outline","paperScrollPaper","flexDirection","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","NewAccountDialog","lazy","Img","img","src","alt","get","NewButtonStyle","AccountsList","push","useHistory","isNewAccountModalOpen","setIsNewAccountModalOpen","id","avatar","type","onSubmit"],"mappings":"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","file":"static/js/12.d3a6dfa7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  const Component = (props, ref) => /*#__PURE__*/React.createElement(SvgIcon, _extends({\n    \"data-testid\": `${displayName}Icon`,\n    ref: ref\n  }, props), path);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import styled from '@emotion/styled';\n\nconst PaddedContainer = styled.div`\n  padding: 16px;\n`;\n\nexport default PaddedContainer\n","const isArray = <T>(value: unknown): value is T[] => Array.isArray(value);\n\nexport default isArray;","\nimport { Dialog } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nexport interface LazyDialogProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n}\n\nconst dialogCloseAnimationDuration = 500;\n\nfunction LazyDialog({ isOpen, children }: LazyDialogProps) {\n  const [isOpenState, setOpenState] = useState(isOpen);\n  // Defer close of the dialog for the animation to complete\n  useEffect(\n    () => {\n      let timeoutId: NodeJS.Timeout;\n      if (isOpenState !== isOpen) {\n        if (!isOpen) {\n          timeoutId = setTimeout(() => {\n            setOpenState(isOpen);\n          }, dialogCloseAnimationDuration);\n        } else {\n          setOpenState(isOpen);\n        }\n      }\n      return () => clearTimeout(timeoutId);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isOpen],\n  );\n\n  return (\n    <React.Suspense fallback={<Dialog open />}>\n      {isOpenState && children}\n    </React.Suspense>\n  )\n}\n\nexport default LazyDialog;\n","import styled from '@emotion/styled';\nimport React, { PropsWithChildren } from 'react';\n\nconst Title = styled.div`\n  font-size: 18px;\n  margin-bottom: 16px;\n  flex-grow: 1;\n`;\n\nconst Head = styled.div`\n  display: flex;\n`;\n\nconst Root = styled.div`\n  @media (min-width: 600px) {\n    border: 2px solid rgba(0,0,0,0.12);\n    padding: 16px;\n  }\n  @media (max-width: 599.95px) {\n    /* padding: 0 0 16px 0; */\n    padding: 0;\n    /* border-bottom: 2px solid rgba(0,0,0,0.12); */\n  }\n`;\n\ninterface CardProps {\n  title?: string;\n  ariaLabel?: string;\n  actionMenu?: React.ReactNode;\n}\n\n// const Card: React.ForwardRefRenderFunction<PropsWithChildren<CardProps>, HTMLDivElement | null | any> = ({\nfunction Card({\n  children,\n  title,\n  ariaLabel,\n  // actionMenu,\n}: PropsWithChildren<CardProps>) {\n// }, ref) => {\n  return (\n    <Root aria-label={ariaLabel}>\n      {\n        title &&\n        <Head>\n          <Title>{title}</Title>\n        </Head>\n      }\n      {children}</Root>\n  )\n}\n\nexport default Card;\n","export enum AccountType {\n  None = 0,\n  InvoiceFinance = 1,\n  Instalments = 3,\n}\n\nexport const AccountTypeLabels = new Map<AccountType, string>([\n  [AccountType.InvoiceFinance, 'Invoice Finance'],\n  [AccountType.Instalments, 'Instalments'],\n]);\n\n","import React, { PropsWithChildren, useCallback } from 'react';\nimport {\n  Button,\n  createStyles,\n  DialogActions,\n  Drawer,\n  // Grid,\n  makeStyles,\n  ModalProps\n  } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterDrawer: {\n    },\n    filterHeading: {\n      padding: theme.spacing(2),\n      margin: 0,\n      borderBottom: '1px solid',\n      borderBottomColor: theme.palette.grey[200]\n    },\n    filters: {\n      padding: theme.spacing(2),\n      minHeight: '100%',\n    },\n    filterDrawerContent: {\n      minWidth: 250,\n      display: 'grid',\n      height: '100%',\n      gridTemplateRows: 'auto 1fr auto',\n    },\n    filterDrawerBackdrop: {\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    filteredCount: {\n      fontSize: '0.8em',\n      color: theme.palette.grey[400],\n      marginLeft: theme.spacing(1)\n    },\n    filterFooter: {\n      borderTop: '1px solid',\n      borderTopColor: theme.palette.grey[200]\n    },\n  }),\n);\n\ninterface FilterDrawerProps {\n  isOpen: boolean;\n  filteredCount: number;\n  topicName?: string;\n  isLoading?: boolean;\n  onClose: ModalProps['onClose'];\n  onClearFilters: () => void;\n}\n\nconst FilterDrawer: React.FC<PropsWithChildren<FilterDrawerProps>> = ({\n  isOpen,\n  onClose,\n  onClearFilters,\n  children,\n  topicName,\n  // isLoading,\n  filteredCount,\n}) => {\n  const classes = useStyles()\n\n  const handleClear = useCallback((evt: any) => {\n    if (onClearFilters) {\n      onClearFilters();\n    }\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClearFilters, onClose]);\n\n  const handleApply = useCallback((evt: any) => {\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClose]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.filterDrawer}\n      open={isOpen}\n      onClose={onClose}\n      // transitionDuration={100}\n      ModalProps={{\n        BackdropProps: {\n          className: classes.filterDrawerBackdrop\n        }\n      }}\n    >\n      <div className={classes.filterDrawerContent}>\n        <h2 className={classes.filterHeading}>Filter <span className={classes.filteredCount}>{filteredCount} {topicName?.toLowerCase()}</span></h2>\n        <div className={classes.filters}>{children}</div>\n        <div className={classes.filterFooter}>\n          <DialogActions>\n            {/* <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <Button size=\"large\" autoFocus color=\"primary\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Grid>\n              <Grid item xs={6} className>\n                <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n                  Apply\n                </Button>\n              </Grid>\n            </Grid> */}\n            <Button size=\"large\" color=\"primary\" onClick={handleClear}>\n              Clear\n            </Button>\n            <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n              Apply\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default FilterDrawer;\n","const isNullOrUndefined = (value: unknown): value is null | undefined => value == null;\n\nexport default isNullOrUndefined;","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nconst isObject = <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n\n export default isObject;\n ","import { EmptyObject } from 'types/resolvers';\nimport isObject from './isObject';\n\nconst isEmptyObject = (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n\nexport default isEmptyObject;","import DelayedLoader from '../DelayedLoader';\nimport FilterDrawer from './FilterDrawer';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n  } from 'react';\nimport {\n  // makeStyles,\n  // createStyles,\n  TableContainer,\n  Table as MuiTable,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  TablePagination,\n  Toolbar,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport isEmptyObject from 'utils/isEmptyObject';\n\nexport declare type CompareFn<T> = ((a: T, b: T, sortOrder?: 'ascend' | 'descend') => number);\n\nconst TableLoaderContainer = styled.div`\n  height: 4px;\n`\n\nconst TableHeadCellStyles = css`\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n`;\n\nconst TableCellStyles = css`\n  padding: 10px 0;\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n  font-size: 14px;\n`;\n\nconst TableRowClickableStyles = css`\n  cursor: pointer;\n  &:hover {\n    td {\n      background-color: rgba(0, 0, 0, 0.04);\n    }\n  }\n`;\n\nconst TableHeadCellInnerStyles = css`\n  padding: 10px 0;\n  width: 100%;\n  color: #777;\n  font-weight: normal;\n  display: inline-flex;\n  align-items: center;\n  flex-direction: inherit;\n  justify-content: flex-start;\n  font-size: 11px;\n`;\n\nexport interface ColumnProps<T> {\n  title?: React.ReactNode;\n  dataIndex: keyof T;\n  render?: (value: any, record: T, index: number) => React.ReactNode;\n  align?: 'left' | 'right' | 'center';\n  // filters?: ColumnFilterItem[];\n  // onFilter?: (value: any, record: T) => boolean;\n  // filterMultiple?: boolean;\n  // filterDropdown?: React.ReactNode | ((props: Object) => React.ReactNode);\n  // filterDropdownVisible?: boolean;\n  // onFilterDropdownVisibleChange?: (visible: boolean) => void;\n  sortable?: boolean;\n  // sorter?: boolean | CompareFn<T>;\n  // defaultSortOrder?: 'ascend' | 'descend';\n  // colSpan?: number;\n  width?: string | number;\n  className?: string;\n  // fixed?: boolean | ('left' | 'right');\n  // filterIcon?: React.ReactNode;\n  // filteredValue?: any[];\n  filterComponent?: React.ReactNode;\n  // sortOrder?: SortOrder;\n  // children?: ColumnProps<T>[];\n  // onCellClick?: (record: T, event: any) => void;\n  // onCell?: (record: T) => any;\n  // onHeaderCell?: (props: ColumnProps<T>) => any;\n}\n\nexport declare type SortOrder = 'descend' | 'ascend';\n\nexport interface ListRequest<T> {\n  sort?: SortState<T>\n  // sortField?: string;\n  // sortOrder?: SortOrder;\n  filters?: FilterState<T>;\n  pageSize: number;\n  pageNumber: number;\n}\n\nexport const defaultListRequest: ListRequest<any> = {\n  pageNumber: 1,\n  pageSize: 1000,\n};\n\n\nexport interface ListItems<I extends object> {\n  isLoading: boolean;\n  items: I[];\n  hasRequested?: boolean;\n  totalCount: number;\n}\n\nexport interface PaginationProps {\n  total: number;\n  current: number;\n  pageSize: number;\n  // defaultCurrent?: number;\n  // defaultPageSize?: number;\n  // onChange?: (page: number, pageSize?: number) => void;\n  // hideOnSinglePage?: boolean;\n  // showSizeChanger?: boolean;\n  // pageSizeOptions?: string[];\n  // onShowSizeChange?: (current: number, size: number) => void;\n  // showQuickJumper?: boolean;\n  // showTotal?: (total: number, range: [number, number]) => React.ReactNode;\n  // size?: string;\n  // simple?: boolean;\n  // style?: CSSProperties;\n  // locale?: Object;\n  // className?: string;\n  // prefixCls?: string;\n  // selectPrefixCls?: string;\n  // itemRender?: (page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next') => React.ReactNode;\n  // role?: string;\n}\n\nexport interface SorterResult<T> {\n  column: ColumnProps<T>;\n  order: SortOrder;\n  field: string;\n  columnKey: string;\n}\n\nexport type SortState<T> = Partial<Record<keyof T, SortOrder>>;\nexport type FilterState<T> = Partial<Record<keyof T, string>>;\nexport type FilterKey<T> = keyof T;\n\nexport const defaultPaginationState: PaginationProps = {\n  total: 0,\n  current: 1,\n  pageSize: 10,\n}\nexport const defaultTableState: TableState<any> = {\n  pagination: defaultPaginationState,\n  filters: {},\n  sort: {}\n}\n\nexport interface TableState<T> {\n  pagination: PaginationProps;\n  filters: FilterState<T>;\n  sort: SortState<T>;\n};\n\nexport interface TableProps<T extends object> {\n  // localStorageStateKey: string;\n  height?: number;\n  frozenHeader?: boolean;\n  columns: ColumnProps<T>[];\n  data?: T[];\n  filterable?: boolean;\n  sort?: SortState<T>;\n  filters?: FilterState<T>;\n  isLoading?: boolean;\n  pagination?: PaginationProps;\n  onPaginationChange?: (paginationState: PaginationProps) => void;\n  onFilterChange?: (filterState: FilterState<T>) => void;\n  onSortChange?: (sortState: SortState<T>) => void;\n  onRowClick?: (record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => void;\n  rowClassName?: (record: T) => string;\n  onClearFilters?: () => void; \n  rowsPerPageOptions?: Array<number | { value: number; label: string }>\n  title?: string;\n  topic?: string;\n}\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n    // tableContainer: {\n    //   position: relative\n    // },\n    // tableLoader: {\n    //   // height: '4px',\n    // },\n    // tableToolbar: {\n      // paddingRight: theme.spacing(1),\n    // },\n    // tableTitle: {\n      // flex: '1 1 100%',\n      // margin: 0,\n    // },\n    // tableHeadCell: {\n      // padding: 0,\n      // textTransform: 'uppercase',\n      // backgroundColor: '#f2f2f2',\n      // fontSize: '10px',\n      // color: '#111',\n      // fontWeight: 'bold',\n    // },\n    // tableHeadCellInner: {\n      // padding: '6px 10px',\n      // width: '100%',\n      // display: 'inline-flex',\n      // alignItems: 'center',\n      // flexDirection: 'inherit',\n      // justifyContent: 'flex-start',\n    // },\n    // tableHeadCellSortable: {\n      // '&:hover': {\n      //   cursor: 'pointer',\n      //   backgroundColor: '#ddd',\n      // }\n    // },\n    // tableRowClickable: {\n      // cursor: 'pointer',\n      // '&:hover > td': {\n      //   backgroundColor: '#e7f6ff',\n      // }\n    // },\n//   }),\n// );\n\nexport function Table<T extends object>(props: TableProps<T>): React.ReactElement {\n  const {\n    // localStorageStateKey,\n    frozenHeader,\n    height,\n    columns,\n    data,\n    onPaginationChange,\n    onSortChange,\n    onRowClick,\n    pagination,\n    sort,\n    filters,\n    filterable,\n    isLoading,\n    rowsPerPageOptions = [10, 15, 20, 25],\n    title,\n    topic,\n    onClearFilters,\n    // onClick,\n  } = props\n\n  // const classes = useStyles()\n  // const initialSortState = columns.map(column => )\n  const [sortState, setSortState] = useState<SortState<T>>(sort || {});\n  // const [filterState, setFilterState] = useState<FilterState<T>>(filters || {});\n  const [paginationState, setPaginationState] = useState<PaginationProps>(pagination || defaultPaginationState);\n  const [filtersDrawerOpen, setFiltersDrawerOpen]= useState(false);\n\n  useEffect(() => {\n    if (pagination) {\n      setPaginationState(pagination)\n    }\n  }, [pagination])\n\n  const handleChangePage = useCallback((_evt: unknown, newPage: number) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      current: newPage + 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState)\n  }, [paginationState, onPaginationChange]);\n\n  const handleChangeRowsPerPage = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      pageSize: +evt.target.value,\n      current: 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState);\n  }, [paginationState, onPaginationChange]);;\n\n  const handleRowClick = useCallback((record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n    if (onRowClick) {\n      onRowClick(record, evt);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick]);\n\n  const handleFilterClick = () => {\n    setFiltersDrawerOpen(true);\n  };\n\n  const rowClassName = useMemo(() => {\n    return !!onRowClick ? TableRowClickableStyles : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick])\n\n  const tableHeaders = useMemo(() => (\n    <TableRow>\n      {columns.map((column, index) => {\n        const columnSortState = sortState[column.dataIndex];\n        const columnDataIndex = column.dataIndex;\n        return (\n          <TableCell\n            classes={{\n              root: TableHeadCellStyles,\n            }}\n            // className={clsx(\n            //   // classes.tableHeadCell,\n            //   {[classes.tableHeadCellSortable]: column.sortable},\n            // )}\n            width={column.width}\n            key={index}\n          >\n            {\n              column.sortable ?\n              <TableSortLabel\n                className={TableHeadCellInnerStyles}\n                active={!!columnSortState}\n                direction={columnSortState ? columnSortState === 'descend' ? 'desc' : 'asc' : undefined}\n                onClick={() => {\n                  let newSortState: SortState<T> = {};\n                  if (columnSortState !== 'descend') {\n                    newSortState = {\n                      [columnDataIndex]: !columnSortState ? 'ascend' : 'descend',\n                    } as SortState<T>;\n                  }\n                  setSortState(newSortState)\n                  onSortChange && onSortChange(newSortState)\n                }}\n              >\n                {column.title}\n              </TableSortLabel> :\n              <span className={TableHeadCellInnerStyles}>{column.title}</span>\n            }\n          </TableCell>\n          )\n        }\n      )}\n    </TableRow>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [columns, onSortChange, sortState]);\n\n  const rowCells = useMemo(\n    () =>\n      data?.map((row: T, i) => {\n        return (\n          <TableRow\n            key={i}\n            onClick={(evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n              handleRowClick(row, evt);\n            }}\n            className={rowClassName}\n          >\n            {columns.map((column, index) => \n              <TableCell className={TableCellStyles} key={index}>\n                {column.render ? column.render(((row as any)[column.dataIndex]), row, index) : ((row as any)[column.dataIndex])}\n              </TableCell>\n            )}\n          </TableRow>\n        )\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columns, data, handleRowClick, rowClassName]\n  );\n\n  const filterComponents = useMemo(\n    () => (\n      columns.map((column, index) => (\n        column.filterComponent &&\n        <React.Fragment key={index}>{column.filterComponent}</React.Fragment>\n      ))\n    ),\n    [columns],\n  )\n\n  const hasFilters = useMemo(\n    () => !isEmptyObject(filters),\n    [filters],\n  )\n\n  return (\n    <>\n      {\n        (title || filterable) &&\n        <Toolbar variant=\"dense\">\n          <h2>{title}</h2>\n          {\n            filterable &&\n            <Tooltip title=\"Filter\">\n              <IconButton\n                onClick={handleFilterClick}\n                aria-label=\"filter list\"\n                color={hasFilters ? \"primary\" : undefined}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        </Toolbar>\n      }\n      <TableLoaderContainer>{ isLoading && <DelayedLoader />}</TableLoaderContainer>\n      <TableContainer style={{ maxHeight: height }}>\n        <MuiTable stickyHeader={frozenHeader}>\n          <TableHead>{tableHeaders}</TableHead>\n          <TableBody>\n            {rowCells}\n          </TableBody>\n        </MuiTable>\n      </TableContainer>\n      {\n        (!!pagination) &&\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          count={pagination.total}\n          rowsPerPage={pagination.pageSize}\n          page={pagination.current - 1}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      }\n      {\n        (filterable && onClearFilters) &&\n        <FilterDrawer\n          filteredCount={pagination?.total || 0}\n          topicName={topic}\n          isOpen={filtersDrawerOpen}\n          onClose={() => setFiltersDrawerOpen(false)}\n          onClearFilters={onClearFilters}\n        >\n          {filterComponents}\n        </FilterDrawer>\n      }\n    </>\n  )\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    boxShadow: theme.shadows[6],\n    '&:active': {\n      boxShadow: theme.shadows[12]\n    },\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      textDecoration: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // assure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  primary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  secondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"extended\"`. */\n  extended: {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48,\n    '&$sizeSmall': {\n      width: 'auto',\n      padding: '0 8px',\n      borderRadius: 34 / 2,\n      minWidth: 34,\n      height: 34\n    },\n    '&$sizeMedium': {\n      width: 'auto',\n      padding: '0 16px',\n      borderRadius: 40 / 2,\n      minWidth: 40,\n      height: 40\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"circular\"`. */\n  circular: {},\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"``. */\n  sizeSmall: {\n    width: 40,\n    height: 40\n  },\n\n  /* Styles applied to the root element if `size=\"medium\"``. */\n  sizeMedium: {\n    width: 48,\n    height: 48\n  }\n});\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableFocusRipple = false,\n    focusVisibleClassName,\n    size = 'large',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  }), 'MuiFab');\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, size !== 'large' && classes[`size${capitalize(size)}`], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '@media print': {\n      // Use !important to override the Modal inline-style.\n      position: 'absolute !important'\n    }\n  },\n\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the container element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    '@media print': {\n      height: 'auto'\n    },\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    margin: 32,\n    position: 'relative',\n    overflowY: 'auto',\n    // Fix IE11 issue, to remove at some point.\n    '@media print': {\n      overflowY: 'visible',\n      boxShadow: 'none'\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=false`. */\n  paperWidthFalse: {\n    maxWidth: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  }\n});\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  const {\n    BackdropProps,\n    children,\n    classes,\n    className,\n    disableBackdropClick = false,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    onEscapeKeyDown,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","\nimport PaddedContainer from 'components/PaddedContainer'\nimport { ColumnProps, Table } from 'components/table/Table'\nimport Card from 'components/Card'\nimport React from 'react'\nimport Account from 'types/Account';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport { Fab } from '@material-ui/core';\nimport { MdAdd } from 'react-icons/md';\nimport { useHistory } from 'react-router';\nimport { AccountTypeLabels } from 'types/AccountType';\nimport LazyDialog from 'components/LazyDialog';\n\nconst NewAccountDialog = React.lazy(() => import('components/organisms/NewAccountDialog'))\n\nconst Img = styled.img`\n  width: 48px;\n  vertical-align: bottom;\n`;\n\nconst columns: ColumnProps<Account>[] = [\n  {\n    title: '',\n    dataIndex: 'avatar',\n    width: 100,\n    render: (value, record) => <Img src={`/avatars/${value}`} alt={record.name} />\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    width: 200,\n    render: (value, record) => AccountTypeLabels.get(value)\n  },\n];\n\nconst NewButtonStyle = css`\n  font-size: 2em;\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`;\n\nconst AccountsList = () => {\n  const { push } = useHistory();\n  const [isNewAccountModalOpen, setIsNewAccountModalOpen] = React.useState(false);\n\n  const handleRowClick = (row: Account) => {\n    push(`/accounts/${row.id}`);\n  };\n\n  const onNewButtonClick = () => {\n    setIsNewAccountModalOpen(true);\n  }\n\n  const onNewAccountModalClose = () => {\n    setIsNewAccountModalOpen(false);\n  }\n\n  const onNewAccountModalOK = () => {\n    setIsNewAccountModalOpen(false);\n    push(`/accounts/4`);\n  }\n\n  return (\n    <>\n      <PaddedContainer>\n        <Card title=\"Accounts\">\n          <Table<Account>\n            height={720}\n            frozenHeader\n            // localStorageStateKey='client'\n            // data={data?.items}\n            data={[\n              {\n                id: 1,\n                avatar: 'marvel.png',\n                name: 'Marvel Cinematic Universe',\n                type: 1,\n              },\n              {\n                id: 2,\n                avatar: 'amc.jpg',\n                name: 'Breaking Bad',\n                type: 1,\n              },\n              {\n                id: 3,\n                avatar: 'black-noir.jpg',\n                name: 'The Boys',\n                type: 3,\n              }\n            ]}\n            columns={columns}\n            // sort={sortState}\n            // filters={filterState}\n            // pagination={paginationState}\n            onRowClick={handleRowClick}\n            // onPaginationChange={setPaginationState}\n            // onSortChange={setSortState}\n            // onFilterChange={setFilterState}\n          />\n        </Card>\n      </PaddedContainer>\n      <LazyDialog isOpen={isNewAccountModalOpen}>\n        <NewAccountDialog\n          isOpen={isNewAccountModalOpen}\n          onClose={onNewAccountModalClose}\n          onSubmit={onNewAccountModalOK}\n        />\n      </LazyDialog>\n      <Fab aria-label=\"add\" color=\"primary\" className={NewButtonStyle} onClick={onNewButtonClick}>\n        <MdAdd />\n      </Fab>\n    </>\n  );\n}\n\nexport default AccountsList;\n"],"sourceRoot":""}