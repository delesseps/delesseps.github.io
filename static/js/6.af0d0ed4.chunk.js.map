{"version":3,"sources":["../node_modules/@material-ui/core/utils/createSvgIcon.js","components/PaddedContainer.tsx","components/form/TextField.tsx","components/form/AutoCompleteField.tsx","components/Card.tsx","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js","components/table/FilterDrawer.tsx","utils/isNullOrUndefined.ts","utils/isArray.ts","utils/isObject.ts","utils/isEmptyObject.ts","components/table/Table.tsx","types/Account.ts","components/organisms/NewAccountDialog.tsx","pages/accounts/List.tsx"],"names":["createSvgIcon","path","displayName","Component","props","ref","React","createElement","SvgIcon","_extends","muiName","memo","forwardRef","PaddedContainer","styled","div","TextFieldStyle","css","TextField","name","control","label","error","rules","multiline","minRows","placeholder","disabled","autoFocus","transform","render","onChange","onBlur","value","id","fullWidth","event","target","InputLabelProps","shrink","helperText","message","AutoCompleteField","creatable","getOptionLabel","option","disableClearable","renderOption","options","autoHighlight","freeSolo","getOptionSelected","selectOnFocus","clearOnBlur","evt","newValue","renderInput","InputProps","rest","Title","Head","Root","Card","children","title","ariaLabel","aria-label","d","useStyles","makeStyles","theme","createStyles","filterDrawer","filterHeading","padding","spacing","margin","borderBottom","borderBottomColor","palette","grey","filters","minHeight","filterDrawerContent","minWidth","display","height","gridTemplateRows","filterDrawerBackdrop","background","filteredCount","fontSize","color","marginLeft","filterFooter","borderTop","borderTopColor","FilterDrawer","isOpen","onClose","onClearFilters","topicName","classes","handleClear","useCallback","handleApply","Drawer","anchor","className","open","ModalProps","BackdropProps","toLowerCase","DialogActions","Button","size","onClick","variant","isNullOrUndefined","isArray","Array","isObject","isObjectType","Date","isEmptyObject","Object","keys","length","TableLoaderContainer","TableHeadCellStyles","TableCellStyles","TableRowClickableStyles","TableHeadCellInnerStyles","defaultPaginationState","total","current","pageSize","Table","frozenHeader","columns","data","onPaginationChange","onSortChange","onRowClick","pagination","sort","filterable","isLoading","rowsPerPageOptions","topic","useState","sortState","setSortState","paginationState","setPaginationState","filtersDrawerOpen","setFiltersDrawerOpen","useEffect","handleChangePage","_evt","newPage","newPaginationState","handleChangeRowsPerPage","handleRowClick","record","rowClassName","useMemo","undefined","tableHeaders","TableRow","map","column","index","columnSortState","dataIndex","columnDataIndex","TableCell","root","width","key","sortable","TableSortLabel","active","direction","newSortState","rowCells","row","i","filterComponents","filterComponent","Fragment","hasFilters","Toolbar","Tooltip","IconButton","DelayedLoader","TableContainer","style","maxHeight","stickyHeader","TableHead","TableBody","TablePagination","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","AccountType","AccountTypeLabels","Map","InvoiceFinance","Installments","ContentStyle","defaultValues","FindAbn","accountTypeOptions","entries","accountType","NewAccountDialog","onSubmit","useTheme","fullScreen","useMediaQuery","breakpoints","down","methods","useForm","mode","handleSubmit","onAbnModalClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Grid","container","item","xs","required","Img","img","src","alt","get","NewButtonStyle","AccountsPage","push","useHistory","isNewAccountModalOpen","setIsNewAccountModalOpen","avatar","type","Fab"],"mappings":"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","file":"static/js/6.af0d0ed4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  const Component = (props, ref) => /*#__PURE__*/React.createElement(SvgIcon, _extends({\n    \"data-testid\": `${displayName}Icon`,\n    ref: ref\n  }, props), path);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import styled from '@emotion/styled';\n\nconst PaddedContainer = styled.div`\n  padding: 16px;\n`;\n\nexport default PaddedContainer\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Control, Controller, FieldError } from 'react-hook-form';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport { FieldRules } from 'types/FieldRules';\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\ninterface Props<T> {\n  name: keyof T;\n  control: Control<T>;\n  label?: string;\n  className?: string;\n  error?: FieldError;\n  rules?: FieldRules;\n  placeholder?: string;\n  multiline?: boolean;\n  minRows?: number;\n  // type?: 'text' | 'number' | 'password';\n  disabled?: boolean;\n  autoFocus?: boolean;\n  transform?: (value: string) => any;\n}\n\nconst TextField = <T extends object>(props: Props<T>) => {\n  const {\n    name,\n    control,\n    label,\n    error,\n    rules,\n    multiline,\n    minRows,\n    // type,\n    placeholder,\n    disabled,\n    autoFocus,\n    transform\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      rules={rules}\n      render={({ onChange, onBlur, value, name }) => (\n        <MuiTextField\n          id={name}\n          fullWidth\n          autoFocus={autoFocus}\n          css={TextFieldStyle}\n          multiline={multiline}\n          minRows={minRows}\n          // type={ type }\n          label={label}\n          placeholder={placeholder}\n          onChange={ (event) => {\n            if (transform) {\n              onChange(transform(event.target.value));\n            } else {\n              onChange(event.target.value);\n            }\n          }}\n          onBlur={onBlur}\n          value={value}\n          error={!!error}\n          InputLabelProps={{ shrink: true }}\n          helperText={error?.message ?? ''}\n          disabled={disabled}\n        />\n      )}\n    />\n  );\n};\n\nexport default TextField;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Control, Controller, FieldError } from 'react-hook-form';\nimport MuiAutocomplete from '@material-ui/lab/Autocomplete';\nimport { AutocompleteRenderOptionState, InputLabelProps, TextField } from '@material-ui/core';\nimport { FieldRules } from 'types/FieldRules';\nimport { FieldName } from 'react-hook-form/dist/types/form';\n\nexport interface SelectOption<R> {\n  label: string;\n  value: R;\n}\n\ninterface Props<T,R> {\n  name: keyof T;\n  control: Control<T>;\n  error?: FieldError;\n  rules?: FieldRules;\n  label?: string;\n  options: Array<SelectOption<R>>;\n  placeholder?: string;\n  getOptionLabel?: (option: SelectOption<R>) => string;\n  renderOption?: (\n    props: React.HTMLAttributes<HTMLLIElement>,\n    option: SelectOption<R>,\n    state: AutocompleteRenderOptionState\n  ) => React.ReactNode;\n  autoFocus?: boolean;\n  creatable?: boolean;\n  InputLabelProps?: Partial<InputLabelProps>;\n  disableClearable?: boolean | undefined;\n}\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\nconst AutoCompleteField = <T extends Record<string, any>, R extends any>(props: Props<T,R>) => {\n  const {\n    name,\n    control,\n    error,\n    rules,\n    label,\n    placeholder,\n    creatable,\n    getOptionLabel = (option: SelectOption<R>) => option?.label || '',\n    disableClearable,\n    renderOption,\n    autoFocus,\n    options,\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      rules={rules}\n      render={({ onChange, onBlur, value, name }) => {\n        // const selectedValueWithLabel = options.find(option => option?.value === value);\n\n        return (\n          <MuiAutocomplete\n            id={name}\n            autoHighlight\n            freeSolo={creatable}\n            disableClearable={disableClearable}\n            options={options}\n            getOptionSelected={(option: SelectOption<R>, value: SelectOption<R>) => { \n              return value ? option.value === value.value : false;\n            }}\n            renderOption={renderOption}\n            selectOnFocus={creatable}\n            clearOnBlur={creatable}\n            getOptionLabel={getOptionLabel}\n            value={value}\n            // value={selectedValueWithLabel}\n            onChange={(evt, newValue) => onChange(newValue)}\n            onBlur={onBlur}\n            renderInput={({ InputLabelProps, InputProps, ...rest }) => \n              <TextField\n                autoFocus={autoFocus}\n                css={TextFieldStyle}\n                label={label}\n                error={!!error}\n                InputLabelProps={{ shrink: true, ...InputLabelProps }}\n                InputProps={{ placeholder: placeholder, ...InputProps }}\n                helperText={ error?.message ?? '' }\n                {...rest}\n              />\n            }\n          />\n        )\n      }}\n    />\n  )\n};\n\nexport default AutoCompleteField;\n","import styled from '@emotion/styled';\nimport React, { PropsWithChildren } from 'react';\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 16px;\n  flex-grow: 1;\n`;\n\nconst Head = styled.div`\n  display: flex;\n`;\n\nconst Root = styled.div`\n\n  @media (min-width: 600px) {\n    border: 2px solid rgba(0,0,0,0.12);\n    padding: 16px;\n  }\n  @media (max-width: 599.95px) {\n    padding: 0;\n    border-bottom: 2px solid rgba(0,0,0,0.12);\n  }\n`;\n\ninterface CardProps {\n  title?: string;\n  ariaLabel?: string;\n  actionMenu?: React.ReactNode;\n}\n\n// const Card: React.ForwardRefRenderFunction<PropsWithChildren<CardProps>, HTMLDivElement | null | any> = ({\nfunction Card({\n  children,\n  title,\n  ariaLabel,\n  // actionMenu,\n}: PropsWithChildren<CardProps>) {\n// }, ref) => {\n  return (\n    <Root aria-label={ariaLabel}>\n      {\n      title &&\n        <Head>\n          <Title>{title}</Title>\n        </Head>\n      }\n      {children}</Root>\n  )\n}\n\nexport default Card;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React, { PropsWithChildren, useCallback } from 'react';\nimport {\n  Button,\n  createStyles,\n  DialogActions,\n  Drawer,\n  // Grid,\n  makeStyles,\n  ModalProps\n  } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterDrawer: {\n    },\n    filterHeading: {\n      padding: theme.spacing(2),\n      margin: 0,\n      borderBottom: '1px solid',\n      borderBottomColor: theme.palette.grey[200]\n    },\n    filters: {\n      padding: theme.spacing(2),\n      minHeight: '100%',\n    },\n    filterDrawerContent: {\n      minWidth: 250,\n      display: 'grid',\n      height: '100%',\n      gridTemplateRows: 'auto 1fr auto',\n    },\n    filterDrawerBackdrop: {\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    filteredCount: {\n      fontSize: '0.8em',\n      color: theme.palette.grey[400],\n      marginLeft: theme.spacing(1)\n    },\n    filterFooter: {\n      borderTop: '1px solid',\n      borderTopColor: theme.palette.grey[200]\n    },\n  }),\n);\n\ninterface FilterDrawerProps {\n  isOpen: boolean;\n  filteredCount: number;\n  topicName?: string;\n  isLoading?: boolean;\n  onClose: ModalProps['onClose'];\n  onClearFilters: () => void;\n}\n\nconst FilterDrawer: React.FC<PropsWithChildren<FilterDrawerProps>> = ({\n  isOpen,\n  onClose,\n  onClearFilters,\n  children,\n  topicName,\n  // isLoading,\n  filteredCount,\n}) => {\n  const classes = useStyles()\n\n  const handleClear = useCallback((evt: any) => {\n    if (onClearFilters) {\n      onClearFilters();\n    }\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClearFilters, onClose]);\n\n  const handleApply = useCallback((evt: any) => {\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClose]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.filterDrawer}\n      open={isOpen}\n      onClose={onClose}\n      // transitionDuration={100}\n      ModalProps={{\n        BackdropProps: {\n          className: classes.filterDrawerBackdrop\n        }\n      }}\n    >\n      <div className={classes.filterDrawerContent}>\n        <h2 className={classes.filterHeading}>Filter <span className={classes.filteredCount}>{filteredCount} {topicName?.toLowerCase()}</span></h2>\n        <div className={classes.filters}>{children}</div>\n        <div className={classes.filterFooter}>\n          <DialogActions>\n            {/* <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <Button size=\"large\" autoFocus color=\"primary\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Grid>\n              <Grid item xs={6} className>\n                <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n                  Apply\n                </Button>\n              </Grid>\n            </Grid> */}\n            <Button size=\"large\" color=\"primary\" onClick={handleClear}>\n              Clear\n            </Button>\n            <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n              Apply\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default FilterDrawer;\n","const isNullOrUndefined = (value: unknown): value is null | undefined => value == null;\n\nexport default isNullOrUndefined;","const isArray = <T>(value: unknown): value is T[] => Array.isArray(value);\n\nexport default isArray;","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nconst isObject = <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n\n export default isObject;\n ","import { EmptyObject } from 'types/resolvers';\nimport isObject from './isObject';\n\nconst isEmptyObject = (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n\nexport default isEmptyObject;","import DelayedLoader from '../DelayedLoader';\nimport FilterDrawer from './FilterDrawer';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n  } from 'react';\nimport {\n  // makeStyles,\n  // createStyles,\n  TableContainer,\n  Table as MuiTable,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  TablePagination,\n  Toolbar,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport isEmptyObject from 'utils/isEmptyObject';\n\nexport declare type CompareFn<T> = ((a: T, b: T, sortOrder?: 'ascend' | 'descend') => number);\n\nconst TableLoaderContainer = styled.div`\n  height: 4px;\n`\n\nconst TableHeadCellStyles = css`\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n`;\n\nconst TableCellStyles = css`\n  padding: 10px 5px;\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n  font-size: 14px;\n`;\n\nconst TableRowClickableStyles = css`\n  cursor: pointer;\n  &:hover {\n    td {\n      background-color: rgba(0, 0, 0, 0.04);\n    }\n  }\n`;\n\nconst TableHeadCellInnerStyles = css`\n  padding: 10px 5px;\n  width: 100%;\n  color: #777;\n  font-weight: normal;\n  display: inline-flex;\n  align-items: center;\n  flex-direction: inherit;\n  justify-content: flex-start;\n`;\n\nexport interface ColumnProps<T> {\n  title?: React.ReactNode;\n  dataIndex: keyof T;\n  render?: (value: any, record: T, index: number) => React.ReactNode;\n  align?: 'left' | 'right' | 'center';\n  // filters?: ColumnFilterItem[];\n  // onFilter?: (value: any, record: T) => boolean;\n  // filterMultiple?: boolean;\n  // filterDropdown?: React.ReactNode | ((props: Object) => React.ReactNode);\n  // filterDropdownVisible?: boolean;\n  // onFilterDropdownVisibleChange?: (visible: boolean) => void;\n  sortable?: boolean;\n  // sorter?: boolean | CompareFn<T>;\n  // defaultSortOrder?: 'ascend' | 'descend';\n  // colSpan?: number;\n  width?: string | number;\n  className?: string;\n  // fixed?: boolean | ('left' | 'right');\n  // filterIcon?: React.ReactNode;\n  // filteredValue?: any[];\n  filterComponent?: React.ReactNode;\n  // sortOrder?: SortOrder;\n  // children?: ColumnProps<T>[];\n  // onCellClick?: (record: T, event: any) => void;\n  // onCell?: (record: T) => any;\n  // onHeaderCell?: (props: ColumnProps<T>) => any;\n}\n\nexport declare type SortOrder = 'descend' | 'ascend';\n\nexport interface ListRequest<T> {\n  sort?: SortState<T>\n  // sortField?: string;\n  // sortOrder?: SortOrder;\n  filters?: FilterState<T>;\n  pageSize: number;\n  pageNumber: number;\n}\n\nexport const defaultListRequest: ListRequest<any> = {\n  pageNumber: 1,\n  pageSize: 1000,\n};\n\n\nexport interface ListItems<I extends object> {\n  isLoading: boolean;\n  items: I[];\n  hasRequested?: boolean;\n  totalCount: number;\n}\n\nexport interface PaginationProps {\n  total: number;\n  current: number;\n  pageSize: number;\n  // defaultCurrent?: number;\n  // defaultPageSize?: number;\n  // onChange?: (page: number, pageSize?: number) => void;\n  // hideOnSinglePage?: boolean;\n  // showSizeChanger?: boolean;\n  // pageSizeOptions?: string[];\n  // onShowSizeChange?: (current: number, size: number) => void;\n  // showQuickJumper?: boolean;\n  // showTotal?: (total: number, range: [number, number]) => React.ReactNode;\n  // size?: string;\n  // simple?: boolean;\n  // style?: CSSProperties;\n  // locale?: Object;\n  // className?: string;\n  // prefixCls?: string;\n  // selectPrefixCls?: string;\n  // itemRender?: (page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next') => React.ReactNode;\n  // role?: string;\n}\n\nexport interface SorterResult<T> {\n  column: ColumnProps<T>;\n  order: SortOrder;\n  field: string;\n  columnKey: string;\n}\n\nexport type SortState<T> = Partial<Record<keyof T, SortOrder>>;\nexport type FilterState<T> = Partial<Record<keyof T, string>>;\nexport type FilterKey<T> = keyof T;\n\nexport const defaultPaginationState: PaginationProps = {\n  total: 0,\n  current: 1,\n  pageSize: 10,\n}\nexport const defaultTableState: TableState<any> = {\n  pagination: defaultPaginationState,\n  filters: {},\n  sort: {}\n}\n\nexport interface TableState<T> {\n  pagination: PaginationProps;\n  filters: FilterState<T>;\n  sort: SortState<T>;\n};\n\nexport interface TableProps<T extends object> {\n  // localStorageStateKey: string;\n  height?: number;\n  frozenHeader?: boolean;\n  columns: ColumnProps<T>[];\n  data?: T[];\n  filterable?: boolean;\n  sort?: SortState<T>;\n  filters?: FilterState<T>;\n  isLoading?: boolean;\n  pagination?: PaginationProps;\n  onPaginationChange?: (paginationState: PaginationProps) => void;\n  onFilterChange?: (filterState: FilterState<T>) => void;\n  onSortChange?: (sortState: SortState<T>) => void;\n  onRowClick?: (record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => void;\n  rowClassName?: (record: T) => string;\n  onClearFilters?: () => void; \n  rowsPerPageOptions?: Array<number | { value: number; label: string }>\n  title?: string;\n  topic?: string;\n}\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n    // tableContainer: {\n    //   position: relative\n    // },\n    // tableLoader: {\n    //   // height: '4px',\n    // },\n    // tableToolbar: {\n      // paddingRight: theme.spacing(1),\n    // },\n    // tableTitle: {\n      // flex: '1 1 100%',\n      // margin: 0,\n    // },\n    // tableHeadCell: {\n      // padding: 0,\n      // textTransform: 'uppercase',\n      // backgroundColor: '#f2f2f2',\n      // fontSize: '10px',\n      // color: '#111',\n      // fontWeight: 'bold',\n    // },\n    // tableHeadCellInner: {\n      // padding: '6px 10px',\n      // width: '100%',\n      // display: 'inline-flex',\n      // alignItems: 'center',\n      // flexDirection: 'inherit',\n      // justifyContent: 'flex-start',\n    // },\n    // tableHeadCellSortable: {\n      // '&:hover': {\n      //   cursor: 'pointer',\n      //   backgroundColor: '#ddd',\n      // }\n    // },\n    // tableRowClickable: {\n      // cursor: 'pointer',\n      // '&:hover > td': {\n      //   backgroundColor: '#e7f6ff',\n      // }\n    // },\n//   }),\n// );\n\nexport function Table<T extends object>(props: TableProps<T>): React.ReactElement {\n  const {\n    // localStorageStateKey,\n    frozenHeader,\n    height,\n    columns,\n    data,\n    onPaginationChange,\n    onSortChange,\n    onRowClick,\n    pagination,\n    sort,\n    filters,\n    filterable,\n    isLoading,\n    rowsPerPageOptions = [10, 15, 20, 25],\n    title,\n    topic,\n    onClearFilters,\n    // onClick,\n  } = props\n\n  // const classes = useStyles()\n  // const initialSortState = columns.map(column => )\n  const [sortState, setSortState] = useState<SortState<T>>(sort || {});\n  // const [filterState, setFilterState] = useState<FilterState<T>>(filters || {});\n  const [paginationState, setPaginationState] = useState<PaginationProps>(pagination || defaultPaginationState);\n  const [filtersDrawerOpen, setFiltersDrawerOpen]= useState(false);\n\n  useEffect(() => {\n    if (pagination) {\n      setPaginationState(pagination)\n    }\n  }, [pagination])\n\n  const handleChangePage = useCallback((_evt: unknown, newPage: number) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      current: newPage + 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState)\n  }, [paginationState, onPaginationChange]);\n\n  const handleChangeRowsPerPage = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      pageSize: +evt.target.value,\n      current: 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState);\n  }, [paginationState, onPaginationChange]);;\n\n  const handleRowClick = useCallback((record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n    if (onRowClick) {\n      onRowClick(record, evt);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick]);\n\n  const handleFilterClick = () => {\n    setFiltersDrawerOpen(true);\n  };\n\n  const rowClassName = useMemo(() => {\n    return !!onRowClick ? TableRowClickableStyles : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick])\n\n  const tableHeaders = useMemo(() => (\n    <TableRow>\n      {columns.map((column, index) => {\n        const columnSortState = sortState[column.dataIndex];\n        const columnDataIndex = column.dataIndex;\n        return (\n          <TableCell\n            classes={{\n              root: TableHeadCellStyles,\n            }}\n            // className={clsx(\n            //   // classes.tableHeadCell,\n            //   {[classes.tableHeadCellSortable]: column.sortable},\n            // )}\n            width={column.width}\n            key={index}\n          >\n            {\n              column.sortable ?\n              <TableSortLabel\n                className={TableHeadCellInnerStyles}\n                active={!!columnSortState}\n                direction={columnSortState ? columnSortState === 'descend' ? 'desc' : 'asc' : undefined}\n                onClick={() => {\n                  let newSortState: SortState<T> = {};\n                  if (columnSortState !== 'descend') {\n                    newSortState = {\n                      [columnDataIndex]: !columnSortState ? 'ascend' : 'descend',\n                    } as SortState<T>;\n                  }\n                  setSortState(newSortState)\n                  onSortChange && onSortChange(newSortState)\n                }}\n              >\n                {column.title}\n              </TableSortLabel> :\n              <span className={TableHeadCellInnerStyles}>{column.title}</span>\n            }\n          </TableCell>\n          )\n        }\n      )}\n    </TableRow>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [columns, onSortChange, sortState]);\n\n  const rowCells = useMemo(\n    () =>\n      data?.map((row: T, i) => {\n        return (\n          <TableRow\n            key={i}\n            onClick={(evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n              handleRowClick(row, evt);\n            }}\n            className={rowClassName}\n          >\n            {columns.map((column, index) => \n              <TableCell className={TableCellStyles} key={index}>\n                {column.render ? column.render(((row as any)[column.dataIndex]), row, index) : ((row as any)[column.dataIndex])}\n              </TableCell>\n            )}\n          </TableRow>\n        )\n      }),\n    [columns, data, handleRowClick, rowClassName]\n  );\n\n  const filterComponents = useMemo(\n    () => (\n      columns.map((column, index) => (\n        column.filterComponent &&\n        <React.Fragment key={index}>{column.filterComponent}</React.Fragment>\n      ))\n    ),\n    [columns],\n  )\n\n  const hasFilters = useMemo(\n    () => !isEmptyObject(filters),\n    [filters],\n  )\n\n  return (\n    <>\n      {\n        (title || filterable) &&\n        <Toolbar variant=\"dense\">\n          <h2>{title}</h2>\n          {\n            filterable &&\n            <Tooltip title=\"Filter\">\n              <IconButton\n                onClick={handleFilterClick}\n                aria-label=\"filter list\"\n                color={hasFilters ? \"primary\" : undefined}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        </Toolbar>\n      }\n      <TableLoaderContainer>{ isLoading && <DelayedLoader />}</TableLoaderContainer>\n      <TableContainer style={{ maxHeight: height }}>\n        <MuiTable stickyHeader={frozenHeader}>\n          <TableHead>{tableHeaders}</TableHead>\n          <TableBody>\n            {rowCells}\n          </TableBody>\n        </MuiTable>\n      </TableContainer>\n      {\n        (!!pagination) &&\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          count={pagination.total}\n          rowsPerPage={pagination.pageSize}\n          page={pagination.current - 1}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      }\n      {\n        (filterable && onClearFilters) &&\n        <FilterDrawer\n          filteredCount={pagination?.total || 0}\n          topicName={topic}\n          isOpen={filtersDrawerOpen}\n          onClose={() => setFiltersDrawerOpen(false)}\n          onClearFilters={onClearFilters}\n        >\n          {filterComponents}\n        </FilterDrawer>\n      }\n    </>\n  )\n}\n","\n\n\nexport enum AccountType {\n  None = 0,\n  InvoiceFinance = 1,\n  Installments = 3,\n}\n\nexport const AccountTypeLabels = new Map<AccountType, string>([\n  [AccountType.InvoiceFinance, 'Invoice Finance'],\n  [AccountType.Installments, 'Installments'],\n]);\n\ninterface Account {\n  id: number;\n  avatar: string;\n  name: string;\n  type: AccountType;\n}\n\nexport default Account;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, useMediaQuery, useTheme } from '@material-ui/core';\nimport AutoCompleteField from 'components/form/AutoCompleteField';\nimport TextField from 'components/form/TextField';\nimport { useForm } from 'react-hook-form';\nimport { AccountTypeLabels } from 'types/Account';\n\nconst ContentStyle = css`\n  min-width: 350px;\n`\n\ninterface NewAccountForm {\n  FindAbn: string;\n  AccountType: string;\n}\n\nconst defaultValues: NewAccountForm = {\n  FindAbn: '',\n  AccountType: '',\n}\n\nconst accountTypeOptions = [...AccountTypeLabels.entries()].map(([accountType, label]) => \n  ({ label: label, value: accountType })\n);\n\nexport interface NewAccountDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (newAccount: NewAccountForm) => void;\n}\n\nfunction NewAccountDialog({ isOpen, onClose, onSubmit }: NewAccountDialogProps) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const methods = useForm<NewAccountForm>({\n    defaultValues,\n    mode: 'onChange',\n  });\n\n  const {\n    handleSubmit,\n    control,\n    // getValues,\n  } = methods;\n\n  function onAbnModalClose() {\n    onClose();\n  }\n\n  function onAbnModalOK() {\n  }\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={isOpen}\n      onClose={onAbnModalClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        New Account\n      </DialogTitle>\n      <DialogContent css={ContentStyle}>\n        <form onSubmit={handleSubmit(() => {})}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <AutoCompleteField\n                name=\"AccountType\"\n                control={control}\n                label=\"Type\"\n                options={accountTypeOptions}\n                rules={ { required: 'Required' } }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"FindAbn\"\n                control={control}\n                autoFocus\n                label=\"Name\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onAbnModalClose}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" onClick={onAbnModalOK}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default NewAccountDialog;\n","\nimport PaddedContainer from 'components/PaddedContainer'\nimport { ColumnProps, Table } from 'components/table/Table'\nimport Card from 'components/Card'\nimport React from 'react'\nimport Account, { AccountTypeLabels } from 'types/Account';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport { Fab } from '@material-ui/core';\nimport { MdAdd } from 'react-icons/md';\nimport NewAccountDialog from 'components/organisms/NewAccountDialog';\nimport { useHistory } from 'react-router';\n\nconst Img = styled.img`\n  width: 48px;\n  vertical-align: bottom;\n`;\n\nconst columns: ColumnProps<Account>[] = [\n  {\n    title: '',\n    dataIndex: 'avatar',\n    width: 100,\n    render: (value, record) => <Img src={`/avatars/${value}`} alt={record.name} />\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    width: 200,\n    render: (value, record) => AccountTypeLabels.get(value)\n  },\n];\n\nconst NewButtonStyle = css`\n  font-size: 2em;\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`;\n\nconst AccountsPage = () => {\n  const { push } = useHistory();\n  const [isNewAccountModalOpen, setIsNewAccountModalOpen] = React.useState(false);\n\n  const handleRowClick = (row: Account) => {\n    push(`/accounts/${row.id}`);\n  };\n\n  const onNewButtonClick = () => {\n    setIsNewAccountModalOpen(true);\n  }\n\n  const onNewAccountModalClose = () => {\n    setIsNewAccountModalOpen(false);\n  }\n\n  const onNewAccountModalOK = () => {\n    setIsNewAccountModalOpen(false);\n    push(`/accounts/4`);\n  }\n\n  return (\n    <>\n      <PaddedContainer>\n        <Card title=\"Accounts\">\n          <Table<Account>\n            height={720}\n            frozenHeader\n            // localStorageStateKey='client'\n            // data={data?.items}\n            data={[\n              {\n                id: 1,\n                avatar: 'marvel.png',\n                name: 'Marvel Cinematic Universe',\n                type: 1,\n              },\n              {\n                id: 2,\n                avatar: 'amc.jpg',\n                name: 'Breaking Bad',\n                type: 1,\n              },\n              {\n                id: 3,\n                avatar: 'black-noir.jpg',\n                name: 'The Boys',\n                type: 3,\n              }\n            ]}\n            columns={columns}\n            // sort={sortState}\n            // filters={filterState}\n            // pagination={paginationState}\n            onRowClick={handleRowClick}\n            // onPaginationChange={setPaginationState}\n            // onSortChange={setSortState}\n            // onFilterChange={setFilterState}\n          />\n        </Card>\n      </PaddedContainer>\n      <NewAccountDialog\n        isOpen={isNewAccountModalOpen}\n        onClose={onNewAccountModalClose}\n        onSubmit={onNewAccountModalOK}\n      />\n      <Fab aria-label=\"add\" color=\"primary\" className={NewButtonStyle} onClick={onNewButtonClick}>\n        <MdAdd />\n      </Fab>\n    </>\n  );\n}\n\nexport default AccountsPage\n"],"sourceRoot":""}