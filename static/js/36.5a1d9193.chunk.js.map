{"version":3,"sources":["pages/accounts/Customer.tsx"],"names":["CustomerName","styled","div","TabListStyle","css","TabPanelContainer","TabListContainer","Customer","params","useParams","history","useHistory","accountFromRoute","accountId","itemTabFromRoute","itemTab","itemIdFromRoute","itemId","React","useState","activeTab","setActiveTab","useEffect","value","className","variant","scrollButtons","indicatorColor","onChange","evt","newTab","push","label","Suspense","fallback"],"mappings":"m4BAUA,IAAMA,EAAeC,IAAOC,IAAV,KAKZC,EAAeC,YAAH,KAYZC,EAAoBJ,IAAOC,IAAV,KAGjBI,EAAmBL,IAAOC,IAAV,KA0DPK,UA7Cf,WACE,IAAMC,EAASC,cACTC,EAAUC,cACVC,EAA4BJ,EAAeK,UAC3CC,EAA4BN,EAAeO,QAC3CC,EAA2BR,EAAeS,OAL9B,EAMgBC,IAAMC,SAAiBL,GANvC,mBAMXM,EANW,KAMAC,EANA,KAgBlB,OAPAC,qBACE,WACED,EAAaP,KAEf,CAACA,EAAkBO,IAInB,qCACE,cAACrB,EAAD,gCACA,cAACM,EAAD,UACE,eAAC,IAAD,CAAYiB,MAAOH,EAAnB,UACE,eAAC,IAAD,CACEI,UAAWrB,EACXsB,QAAQ,aACRC,cAAc,OACdC,eAAe,UACfC,SAAU,SAACC,EAAKC,GACdpB,EAAQqB,KAAR,oBAA0BnB,EAA1B,sBAAwDI,EAAxD,YAA2Ec,KAN/E,UASE,cAAC,IAAD,CAAKE,MAAM,UAAUT,MAAM,YAC3B,cAAC,IAAD,CAAKS,MAAM,SAAST,MAAM,WAC1B,cAAC,IAAD,CAAKS,MAAM,YAAYT,MAAM,iBAE/B,eAAClB,EAAD,WACE,cAAC,IAAD,CAAUkB,MAAM,UAAhB,SAA0B,cAAC,IAAMU,SAAP,CAAgBC,SAAU,cAAC,IAAD,IAA1B,uBAC1B,cAAC,IAAD,CAAUX,MAAM,SAAhB,SAAyB,cAAC,IAAMU,SAAP,CAAgBC,SAAU,cAAC,IAAD,IAA1B,sBACzB,cAAC,IAAD,CAAUX,MAAM,YAAhB,SAA4B,cAAC,IAAMU,SAAP,CAAgBC,SAAU,cAAC,IAAD,IAA1B","file":"static/js/36.5a1d9193.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Tab } from '@material-ui/core';\nimport { TabPanel } from '@material-ui/lab';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport DelayedLoader from 'components/DelayedLoader';\nimport { css } from 'emotion';\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst CustomerName = styled.div`\n  font-size: 18px;\n  padding: 16px;\n`;\n\nconst TabListStyle = css`\n  .MuiTabs-indicator {\n    height: 4px;\n  }\n  .MuiTab-root {\n    padding: 6px 20px;\n    &.Mui-selected {\n      background-color: rgba(0, 0, 0, 0.08);\n    }\n  }\n`;\n\nconst TabPanelContainer = styled.div`\n`;\n\nconst TabListContainer = styled.div`\n  position: relative;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 47px;\n    left: 0;\n    right: 0;\n    border-bottom: 1px solid rgba(0,0,0,0.12);\n  }\n`;\n\nfunction Customer() {\n  const params = useParams();\n  const history = useHistory();\n  const accountFromRoute: string = (params as any).accountId;\n  const itemTabFromRoute: string = (params as any).itemTab;\n  const itemIdFromRoute: string = (params as any).itemId;\n  const [activeTab, setActiveTab] = React.useState<string>(itemTabFromRoute);\n\n  // Tab Route Change\n  useEffect(\n    () => {\n      setActiveTab(itemTabFromRoute);\n    },\n    [itemTabFromRoute, setActiveTab],\n  );\n\n  return (\n    <>\n      <CustomerName>Kettleman Pty Ltd</CustomerName>\n      <TabListContainer>\n        <TabContext value={activeTab}>\n          <TabList\n            className={TabListStyle}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            indicatorColor=\"primary\"\n            onChange={(evt, newTab) => {\n              history.push(`/accounts/${accountFromRoute}/customers/${itemIdFromRoute}/${newTab}`);\n            }}\n          >\n            <Tab label=\"Summary\" value=\"summary\" />\n            <Tab label=\"Limits\" value=\"limits\" />\n            <Tab label=\"Insurance\" value=\"insurance\" />\n          </TabList>\n          <TabPanelContainer>\n            <TabPanel value=\"summary\"><React.Suspense fallback={<DelayedLoader />}>Summary</React.Suspense></TabPanel>\n            <TabPanel value=\"limits\"><React.Suspense fallback={<DelayedLoader />}>Limits</React.Suspense></TabPanel>\n            <TabPanel value=\"insurance\"><React.Suspense fallback={<DelayedLoader />}>Insurance</React.Suspense></TabPanel>\n          </TabPanelContainer>\n        </TabContext>\n      </TabListContainer>\n    </>\n  )\n}\n\nexport default Customer;\n"],"sourceRoot":""}