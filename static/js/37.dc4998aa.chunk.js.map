{"version":3,"sources":["pages/accounts/Detail.tsx"],"names":["BusinessDetails","React","lazy","Users","Facility","Customers","Customer","Invoices","InsurancePolicies","TabListStyle","css","TabPanelContainer","styled","div","TabListContainer","Account","params","useParams","history","useHistory","tabFromRoute","tab","itemIdFromRoute","itemId","accountFromRoute","accountId","useState","activeTab","setActiveTab","useRecoilState","headerTitleState","setHeaderTitle","useEffect","undefined","Fragment","value","className","variant","scrollButtons","indicatorColor","onChange","evt","newTab","push","label","onClick","Suspense","fallback"],"mappings":"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","file":"static/js/37.dc4998aa.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Tab } from '@material-ui/core';\nimport TabContext from '@material-ui/lab/TabContext/TabContext';\nimport TabList from \"@material-ui/lab/TabList/TabList\";\nimport TabPanel from '@material-ui/lab/TabPanel/TabPanel';\nimport DelayedLoader from 'components/DelayedLoader';\nimport { css } from 'emotion';\nimport React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useRecoilState } from 'recoil';\nimport { headerTitleState } from 'state/HeaderTitleState';\n\nconst BusinessDetails = React.lazy(() => import('./BusinessDetails'))\nconst Users = React.lazy(() => import('./Users'))\nconst Facility = React.lazy(() => import('./Facility'))\nconst Customers = React.lazy(() => import('./Customers'))\nconst Customer = React.lazy(() => import('./Customer'))\nconst Invoices = React.lazy(() => import('./Invoices'))\nconst InsurancePolicies = React.lazy(() => import('./InsurancePolicies'))\n\nconst TabListStyle = css`\n  .MuiTabs-indicator {\n    height: 4px;\n  }\n  .MuiTab-root {\n    padding: 6px 20px;\n    &.Mui-selected {\n      background-color: rgba(0, 0, 0, 0.08);\n    }\n  }\n`;\n\nconst TabPanelContainer = styled.div`\n`;\n\nconst TabListContainer = styled.div`\n  position: relative;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 47px;\n    left: 0;\n    right: 0;\n    border-bottom: 1px solid rgba(0,0,0,0.12);\n  }\n`;\n\nfunction Account() {\n  const params = useParams();\n  const history = useHistory();\n  const tabFromRoute: string = (params as any).tab;\n  const itemIdFromRoute: string = (params as any).itemId;\n  const accountFromRoute: string = (params as any).accountId;\n  const [activeTab, setActiveTab] = React.useState<string>(tabFromRoute);\n  const [, setHeaderTitle] = useRecoilState(headerTitleState);\n\n  // Tab Route Change\n  useEffect(\n    () => {\n      setActiveTab(tabFromRoute);\n    },\n    [tabFromRoute, setActiveTab],\n  );\n\n  useEffect(\n    () => {\n      setHeaderTitle('Breaking Bad - Invoice Finance');\n\n      return () => setHeaderTitle(undefined);\n    },\n    [setHeaderTitle],\n  )\n\n  const onTabClick = (evt: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (itemIdFromRoute) {\n      history.push(`/accounts/${accountFromRoute}/${tabFromRoute}`);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <TabListContainer>\n        <TabContext value={activeTab}>\n          <TabList\n            className={TabListStyle}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            indicatorColor=\"primary\"\n            onChange={(evt, newTab) => {\n              history.push(`/accounts/${accountFromRoute}/${newTab}`);\n            }}\n          >\n            <Tab label=\"Business\" value=\"business\" />\n            {/* <Tab label=\"Corporate Structure\" value=\"structure\" /> */}\n            {/* <Tab label=\"Financials\" value=\"financials\" /> */}\n            <Tab label=\"Facility\" value=\"facility\" />\n            <Tab label=\"Customers\" value=\"customers\" onClick={onTabClick} />\n            <Tab label=\"Insurance\" value=\"insurance\" />\n            <Tab label=\"Invoices\" value=\"invoices\" />\n            <Tab label=\"Users\" value=\"users\" />\n            <Tab label=\"Xero\" value=\"xero\" />\n            <Tab label=\"Requests\" value=\"requests\" />\n          </TabList>\n          <TabPanelContainer>\n            <TabPanel value=\"business\"><React.Suspense fallback={<DelayedLoader />}><BusinessDetails /></React.Suspense></TabPanel>\n            <TabPanel value=\"structure\"><React.Suspense fallback={<DelayedLoader />}>Corporate Structure</React.Suspense></TabPanel>\n            <TabPanel value=\"financials\"><React.Suspense fallback={<DelayedLoader />}>Financials</React.Suspense></TabPanel>\n            <TabPanel value=\"facility\"><React.Suspense fallback={<DelayedLoader />}><Facility /></React.Suspense></TabPanel>\n            <TabPanel value=\"customers\"><React.Suspense fallback={<DelayedLoader />}>{ itemIdFromRoute ? <Customer /> : <Customers /> }</React.Suspense></TabPanel>\n            <TabPanel value=\"insurance\"><React.Suspense fallback={<DelayedLoader />}><InsurancePolicies /></React.Suspense></TabPanel>\n            <TabPanel value=\"invoices\"><React.Suspense fallback={<DelayedLoader />}><Invoices /></React.Suspense></TabPanel>\n            <TabPanel value=\"users\"><React.Suspense fallback={<DelayedLoader />}><Users /></React.Suspense></TabPanel>\n            <TabPanel value=\"xero\"><React.Suspense fallback={<DelayedLoader />}>Xero</React.Suspense></TabPanel>\n            <TabPanel value=\"requests\"><React.Suspense fallback={<DelayedLoader />}>Requests</React.Suspense></TabPanel>\n          </TabPanelContainer>\n        </TabContext>\n      </TabListContainer>\n    </React.Fragment>\n  )\n}\n\nexport default Account;\n"],"sourceRoot":""}