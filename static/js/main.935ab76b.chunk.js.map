{"version":3,"sources":["hooks/useDelayedRender.ts","components/DelayedLoader.tsx","App.tsx","serviceWorker.ts","theme/index.ts","theme/Emotion.tsx","index.tsx"],"names":["useDelayedRender","delay","useState","delayed","setDelayed","useEffect","timeout","setTimeout","clearTimeout","callBackFn","DelayedLoader","LinearProgress","NotFound","React","lazy","Home","Account","App","Suspense","fallback","exact","path","component","render","props","to","match","params","accountId","Boolean","window","location","hostname","baseTheme","createMuiTheme","typography","fontFamily","join","fontSize","palette","background","default","primary","main","secondary","theme","components","MuiCssBaseline","styleOverrides","MuiFilledInput","root","backgroundColor","undefined","input","padding","MuiFormLabel","color","filled","MuiOutlinedInput","position","borderRadius","MuiInput","underline","left","right","bottom","content","transform","transition","borderBottom","pointerEvents","formControl","marginTop","MuiInputLabel","transformOrigin","shrink","outlined","zIndex","top","MuiInputBase","MuiTabs","MuiTab","minWidth","textTransform","breakpoints","up","textColorInherit","opacity","MuiTabPanel","MuiButton","MuiAutocomplete","inputRoot","paddingBottom","paddingRight","MuiTableCell","verticalAlign","head","fontWeight","body","MuiIconButton","MuiDropzoneArea","width","minHeight","border","borderColor","boxSizing","overflow","active","animation","backgroundImage","backgroundSize","invalid","text","marginBottom","icon","height","cache","createCache","key","prefix","EmotionProvider","children","value","ReactDOM","StrictMode","Emotion","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qIAceA,EAZU,SAACC,GAAmB,IAAD,EACZC,oBAAS,GADG,mBACnCC,EADmC,KAC1BC,EAD0B,KAS1C,OAPAC,qBACE,WACE,IAAMC,EAAUC,YAAW,kBAAMH,GAAW,KAAQH,GACpD,OAAO,kBAAMO,aAAaF,MAE5B,CAACL,IAEI,SAACQ,GAAD,OAAsBN,GAAWM,M,QCC3BC,IAJqC,SAAC,GAAqB,IAAD,IAAlBT,MACrD,OAAOD,OADgE,MAAV,IAAU,EAChEA,EAAwB,kBAAM,kBAACW,EAAA,EAAD,W,2GCLjCC,EAAWC,IAAMC,MAAK,kBAAM,kCAC5BC,EAAOF,IAAMC,MAAK,kBAAM,+DACxBE,EAAUH,IAAMC,MAAK,kBAAM,gEAgBlBG,MAdf,WACE,OACE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAACT,EAAA,EAAD,OACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWP,IAEjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,sBAAsBE,OAAQ,SAAAC,GAAK,OAAI,kBAAC,IAAD,eAAUC,GAAE,mBAAeD,EAAME,MAAMC,OAAeC,UAA1C,cAAoEJ,OACzI,kBAAC,IAAD,CAAOH,KAAK,oCAAoCC,UAAWN,IAC3D,kBAAC,IAAD,CAAOM,UAAWV,OCJNiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASN,MACvB,2D,4BChBAO,EAAYC,YAAe,CAC/BC,WAAY,CACVC,WAAY,CACV,OACA,QACA,cACAC,KAAK,KACPC,SAAU,IAEZC,QAAS,CACPC,WAAY,CACVC,QAAS,QAEXC,QAAS,CAEPC,KAAM,QAQRC,UAAW,CAGTD,KAAM,WAOCE,EAAQX,YAAe,2BAC/BD,GAD8B,IAEjCa,WAAY,CACVC,eAAgB,CACdC,eAAgB,CACd,UAAW,KAIfC,eAAgB,CACdD,eAAgB,CACdE,KAAM,CACJC,qBAAiBC,EACjB,UAAW,CACTD,qBAAiBC,GAEnB,YAAa,CACXD,qBAAiBC,IAGrBC,MAAO,CACLC,aAASF,KAIfG,aAAc,CACZP,eAAgB,CACdE,KAAM,CACJI,aAASF,EACTI,WAAOJ,EACP,YAAa,CACXI,WAAOJ,IAGXK,OAAQ,KAIZC,iBAAkB,CAChBV,eAAgB,CACdE,KAAM,CACJS,cAAUP,EACVQ,kBAAcR,KAIpBS,SAAU,CACRb,eAAgB,CACdc,UAAW,CACT,WAAY,CACVC,UAAMX,EACNY,WAAOZ,EACPa,YAAQb,EACRc,aAASd,EACTO,cAAUP,EACVe,eAAWf,EACXgB,gBAAYhB,EACZiB,kBAAcjB,EACdkB,mBAAelB,GAEjB,UAAW,CACTW,UAAMX,EACNY,WAAOZ,EACPa,YAAQb,EACRc,aAASd,EACTO,cAAUP,EACVe,eAAWf,EACXgB,gBAAYhB,EACZiB,kBAAcjB,EACdkB,mBAAelB,IAGnBmB,YAAa,CACX,YAAa,CACXC,eAAWpB,MAKnBqB,cAAe,CACbzB,eAAgB,CACdE,KAAM,CACJwB,qBAAiBtB,GAEnBuB,OAAQ,CACNR,eAAWf,EACXsB,qBAAiBtB,GAEnBwB,SAAU,CACRN,mBAAelB,EACfyB,YAAQzB,EACRe,eAAWf,EACX,WAAY,CACVe,eAAWf,IAGfK,OAAQ,CACNa,mBAAelB,EACfyB,YAAQzB,EACRe,eAAWf,EACX,WAAY,CACVe,eAAWf,IAGfmB,YAAa,CACXJ,eAAWf,EACX0B,SAAK1B,EACLW,UAAMX,EACNO,cAAUP,KAIhB2B,aAAc,CACZ/B,eAAgB,CACdK,MAAO,CACLC,QAAS,KAIf0B,QAAS,CACPhC,eAAgB,CACdE,KAAM,KAIV+B,OAAQ,CACNjC,eAAgB,CACdE,KAAK,aACHI,QAAS,WACT4B,cAAU9B,EACVd,cAAUc,EACV+B,mBAAe/B,GACdnB,EAAUmD,YAAYC,GAAG,MAAQ,CAChCH,cAAU9B,IAGdkC,iBAAkB,CAChBC,aAASnC,KAIfoC,YAAa,CACXxC,eAAgB,CACdE,KAAM,CACJI,aAASF,KAIfqC,UAAW,CACTzC,eAAgB,CACdE,KAAM,CACJiC,mBAAe/B,KAIrBsC,gBAAiB,CACf1C,eAAgB,CAEd2C,UAAW,CACT,4BAA6B,CAC3BC,mBAAexC,EACf,WAAY,CACVE,aAASF,GAEX,uBAAwB,CACtBE,aAASF,IAGb,+BAAgC,CAC9ByC,kBAAczC,MAKtB0C,aAAc,CACZ9C,eAAgB,CACdE,KAAM,CACJI,QAAS,WACTyC,mBAAe3C,GAEjB4C,KAAM,CACJ1D,SAAU,GAEVkB,MAAO,OACPyC,gBAAY7C,GAEd8C,KAAM,CACJ5D,SAAU,MAIhB6D,cAAe,CACbnD,eAAgB,CACdE,KAAM,CACJM,WAAOJ,KAIbgD,gBAAiB,CACfpD,eAAgB,CACdE,KAAM,CACJS,cAAUP,EACViD,WAAOjD,EACPkD,eAAWlD,EACXD,qBAAiBC,EACjBmD,YAAQnD,EACRoD,iBAAapD,EACbQ,kBAAcR,EACdqD,eAAWrD,EAEXsD,cAAUtD,GAEZuD,OAAQ,CACNC,eAAWxD,EACXyD,qBAAiBzD,EACjB0D,oBAAgB1D,EAChBmD,YAAQnD,EACRoD,iBAAapD,GAEf2D,QAAS,CACPF,qBAAiBzD,EACjBoD,iBAAapD,GAEf4D,KAAM,CACJC,kBAAc7D,EACdoB,eAAWpB,EACXd,SAAU,WAEZ4E,KAAM,CACJb,WAAOjD,EACP+D,YAAQ/D,EACRI,WAAOJ,S,wBCrQXgE,EAAQC,YAAY,CACxBC,IAAK,IAILC,QAAQ,IAQKC,MAJf,YAAgE,IAArCC,EAAoC,EAApCA,SACzB,OAAO,kBAAC,IAAD,CAAeC,MAAON,GAAQK,ICLvCE,IAASpG,OACP,kBAAC,IAAMqG,WAAP,KACE,kBAAC,IAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAejF,MAAOA,GACpB,kBAACkF,EAAA,EAAD,MACA,kBAAC,EAAD,UAKRC,SAASC,eAAe,SHsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.935ab76b.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useDelayedRender = (delay: number) => {\n  const [delayed, setDelayed] = useState(true);\n  useEffect(\n    () => {\n      const timeout = setTimeout(() => setDelayed(false), delay);\n      return () => clearTimeout(timeout);\n    },\n    [delay],\n  );\n  return (callBackFn: any) => !delayed && callBackFn();\n};\n\nexport default useDelayedRender;","import React from 'react'\nimport useDelayedRender from 'hooks/useDelayedRender';\nimport { LinearProgress } from '@material-ui/core';\n\ninterface DelayedLoaderProps {\n  delay?: number;\n}\n\nconst DelayedLoader: React.FC<DelayedLoaderProps> = ({ delay = 300 }) => {\n  return useDelayedRender(delay)(() => <LinearProgress />);\n}\n\nexport default DelayedLoader;","import DelayedLoader from 'components/DelayedLoader';\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst NotFound = React.lazy(() => import('pages/NotFound'))\nconst Home = React.lazy(() => import('pages/Home'))\nconst Account = React.lazy(() => import('pages/AccountContainer'))\n\nfunction App() {\n  return (\n    <React.Suspense fallback={<DelayedLoader />}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        {/*<PrivateRoute exact path=\"/profile\" render={props => <Profile {...props} />} />*/}\n        <Route exact path=\"/account/:accountId\" render={props => <Redirect to={`/account/${(props.match.params as any).accountId}/business`} {...props} />} />\n        <Route path=\"/account/:accountId/:tab/:itemId?\" component={Account} />\n        <Route component={NotFound}/>\n      </Switch>\n    </React.Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst baseTheme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Lato',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    fontSize: 12,\n  },\n  palette: {\n    background: {\n      default: '#fff'\n    },\n    primary: {\n      // light: \"#fff\",\n      main: \"#000\",\n      // main: \"#0075c0\",\n      // dark: \"#00548a\",\n      // contrastText: \"#fff\",\n    },\n    // action: {\n    //   selected: \"#f2f2f2\",\n    // }\n    secondary: {\n    //   light: \"#fff\",\n      // main: \"#0075c0\",\n      main: \"#000\",\n    //   dark: \"#ad0009\",\n    //   contrastText: \"#fff\",\n    },\n  }\n});\n\nexport const theme = createMuiTheme({\n  ...baseTheme,\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        '@global': {\n        }\n      }\n    },\n    MuiFilledInput: {\n      styleOverrides: {\n        root: {\n          backgroundColor: undefined,\n          '&:hover': {\n            backgroundColor: undefined\n          },\n          '&$focused': {\n            backgroundColor: undefined\n          }\n        },\n        input: {\n          padding: undefined,\n        }\n      }\n    },\n    MuiFormLabel: {\n      styleOverrides: {\n        root: {\n          padding: undefined,\n          color: undefined,\n          '&$focused': {\n            color: undefined,\n          }\n        },\n        filled: {\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          position: undefined,\n          borderRadius: undefined,\n        }\n      }\n    },\n    MuiInput: {\n      styleOverrides: {\n        underline: {\n          '&:before': {\n            left: undefined,\n            right: undefined,\n            bottom: undefined,\n            content: undefined,\n            position: undefined,\n            transform: undefined,\n            transition: undefined,\n            borderBottom: undefined,\n            pointerEvents: undefined,\n          },\n          '&:after': {\n            left: undefined,\n            right: undefined,\n            bottom: undefined,\n            content: undefined,\n            position: undefined,\n            transform: undefined,\n            transition: undefined,\n            borderBottom: undefined,\n            pointerEvents: undefined,\n          }\n        },\n        formControl: {\n          'label + &': {\n            marginTop: undefined\n          }\n        }\n      }\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          transformOrigin: undefined,\n        },\n        shrink: {\n          transform: undefined,\n          transformOrigin: undefined,\n        },\n        outlined: {\n          pointerEvents: undefined,\n          zIndex: undefined,\n          transform: undefined,\n          '&$shrink': {\n            transform: undefined\n          }\n        },\n        filled: {\n          pointerEvents: undefined,\n          zIndex: undefined,\n          transform: undefined,\n          '&$shrink': {\n            transform: undefined\n          }\n        },\n        formControl: {\n          transform: undefined,\n          top: undefined,\n          left: undefined,\n          position: undefined,\n        }\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        input: {\n          padding: 0,\n        }\n      }\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: {\n        }\n      }\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          padding: '6px 15px',\n          minWidth: undefined,\n          fontSize: undefined,\n          textTransform: undefined,\n          [baseTheme.breakpoints.up('sm')]: {\n            minWidth: undefined\n          }\n        },\n        textColorInherit: {\n          opacity: undefined\n        }\n      }\n    },\n    MuiTabPanel: {\n      styleOverrides: {\n        root: {\n          padding: undefined\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: undefined\n        }\n      }\n    },\n    MuiAutocomplete: {\n      styleOverrides: {\n        // @material-ui/lab/Autocomplete/Autocomplete.js\n        inputRoot: {\n          '&[class*=\"MuiInput-root\"]': {\n            paddingBottom: undefined,\n            '& $input': {\n              padding: undefined\n            },\n            '& $input:first-child': {\n              padding: undefined\n            }\n          },\n          '$hasPopupIcon$hasClearIcon &': {\n            paddingRight: undefined\n          }\n        }\n      }\n    },\n    MuiTableCell: {\n      styleOverrides: {\n        root: {\n          padding: '10px 5px',\n          verticalAlign: undefined\n        },\n        head: {\n          fontSize: 11,\n          // textTransform: 'uppercase',\n          color: '#777',\n          fontWeight: undefined\n        },\n        body: {\n          fontSize: 14,\n        }\n      }\n    },\n    MuiIconButton: {\n      styleOverrides: {\n        root: {\n          color: undefined\n        }\n      }\n    },\n    MuiDropzoneArea: {\n      styleOverrides: {\n        root: {\n          position: undefined,\n          width: undefined,\n          minHeight: undefined,\n          backgroundColor: undefined,\n          border: undefined,\n          borderColor: undefined,\n          borderRadius: undefined,\n          boxSizing: undefined,\n          // cursor: 'pointer',\n          overflow: undefined\n        },\n        active: {\n          animation: undefined,\n          backgroundImage: undefined,\n          backgroundSize: undefined,\n          border: undefined,\n          borderColor: undefined\n        },\n        invalid: {\n          backgroundImage: undefined,\n          borderColor: undefined\n        },\n        text: {\n          marginBottom: undefined,\n          marginTop: undefined,\n          fontSize: 'inherit' // force h5 to inherit\n        },\n        icon: {\n          width: undefined,\n          height: undefined,\n          color: undefined\n        }\n      }\n    }\n\n    // MuiDrawer: {\n    //   styleOverrides: {\n    //     paperAnchorDockedLeft: {\n    //       borderRight: 0\n    //     }\n    //   }\n    // },\n    // MuiTableCell: {\n    //   styleOverrides: {\n    //     sizeSmall: {\n    //       padding: '8px 10px'\n    //     }\n    //   }\n    // },\n    // MuiTableSortLabel: {\n    //   styleOverrides: {\n    //     root: {\n    //       width: '100%',\n    //       '&:hover': {\n    //         color: 'inherit'\n    //       }\n    //     }\n    //   }\n    // },\n    // MuiToolbar: {\n    //   styleOverrides: {\n    //     regular: {\n    //       minHeight: 56\n    //     }\n    //   }\n    // },\n    // MuiFormLabel: {\n    //   styleOverrides: {\n    //     root: {\n    //       color: 'rgba(0, 0, 0, 0.64)'\n    //     }\n    //   }\n    // },\n    // MuiInputLabel: {\n    //   styleOverrides: {\n    //     shrink: {\n    //       transform: 'translate(0, 1.5px) scale(0.80)'\n    //     }\n    //   }\n    // },\n    // MuiTypography: {\n    //   styleOverrides: {\n    //     gutterBottom: {\n    //       marginBottom: '0.8em',\n    //     }\n    //   }\n    // },\n    // MuiInput: {\n    //   styleOverrides: {\n    //     underline: {\n    //       \"&:before\": {\n    //         borderBottomColor: 'rgb(0 0 0 / 9%)'\n    //       }\n    //     }\n    //   }\n    // },\n    // MuiInputBase: {\n    //   styleOverrides: {\n    //     input: {\n    //       '&::placeholder': {\n    //         opacity: 0.3\n    //       }\n    //     }\n    //   }\n    // }\n  }\n  // palette: { primary },\n  // typography: { useNextVariants: true },\n  // overrides: overrides,\n  // variables,\n  // props\n});\n","import { CacheProvider } from '@emotion/core'\nimport createCache from '@emotion/cache'\nimport { PropsWithChildren } from 'react'\nimport React from 'react'\n\nconst cache = createCache({\n  key: 'a',\n  // stylisPlugins: [\n  //   /* your plugins here */\n  // ],\n  prefix: false\n})\n\n\nfunction EmotionProvider({ children }: PropsWithChildren<any>) {\n  return <CacheProvider value={cache}>{children}</CacheProvider>\n}\n\nexport default EmotionProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { theme } from 'theme';\nimport { CssBaseline } from '@material-ui/core';\nimport EmotionProvider from 'theme/Emotion';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <EmotionProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <App />\n        </ThemeProvider>\n      </EmotionProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}