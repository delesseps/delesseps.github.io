{"version":3,"sources":["components/Card.tsx","components/PaddedContainer.tsx","components/form/TextField.tsx","components/AccountStatus.tsx","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js","components/form/AutoCompleteField.tsx","components/form/DisplayField.tsx","pages/account/BusinessDetails.tsx"],"names":["Title","styled","div","Head","Root","Card","children","title","ariaLabel","actionMenu","aria-label","PaddedContainer","TextFieldStyle","css","TextField","props","name","control","label","error","rules","placeholder","disabled","autoFocus","transform","render","onChange","onBlur","value","id","fullWidth","event","target","InputLabelProps","shrink","helperText","message","InviteStatusIcon","Joined","Invited","createSvgIcon","React","d","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_option$label","_props$getOptionSelec","getOptionSelected","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","_useControlled3","state","_useControlled4","setInputValueState","_React$useState3","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","tagToFocus","current","focus","querySelector","concat","setHighlightedIndex","_ref2","index","_ref2$reason","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart","DisablePortal","_objectWithoutProperties","CloseIcon","fontSize","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","classes","className","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","size","_useAutocomplete","getCustomizedTagProps","params","clsx","tag","tagSizeSmall","map","Chip","ListSubheader","groupLabel","component","groupUl","props2","renderListOption","optionProps","hasClearIcon","hasPopupIcon","root","InputProps","inputRoot","endAdornment","IconButton","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","width","clientWidth","paper","noOptions","listbox","option2","index2","withStyles","theme","_option","visibility","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","paddingLeft","right","paddingTop","flexGrow","textOverflow","opacity","position","top","marginRight","zIndex","modal","typography","body1","overflow","listStyle","maxHeight","color","palette","text","secondary","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","_defineProperty","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","background","AutoCompleteField","evt","rest","DisplayFieldStyle","DisplayField","ContactDetails","ContactLineIcon","ContactDetailLine","ContactEditClass","defaultValues","TradingName","WebSite","TradingAddress","PrimaryContact","find","SecondaryContact","BusinessDetails","history","useHistory","methods","useForm","mode","handleSubmit","watch","primaryContact","secondaryContact","onSubmit","Grid","container","spacing","item","xs","lg","sm","required","Tooltip"],"mappings":"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","file":"static/js/14.a8a8ce51.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport React, { PropsWithChildren } from 'react';\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 16px;\n  flex-grow: 1;\n`;\n\nconst Head = styled.div`\n  display: flex;\n`;\n\nconst Root = styled.div`\n\n  @media (min-width: 600px) {\n    border: 2px solid #eee;\n    padding: 16px;\n  }\n  @media (max-width: 599.95px) {\n    padding: 0;\n    border-bottom: 2px solid #eee;\n  }\n`;\n\ninterface CardProps {\n  title?: string;\n  ariaLabel?: string;\n  actionMenu?: React.ReactNode;\n}\n\n// const Card: React.ForwardRefRenderFunction<PropsWithChildren<CardProps>, HTMLDivElement | null | any> = ({\nfunction Card({\n  children,\n  title,\n  ariaLabel,\n  actionMenu,\n}: PropsWithChildren<CardProps>) {\n// }, ref) => {\n  return (\n    <Root aria-label={ariaLabel}>\n      {\n      title &&\n        <Head>\n          <Title>{title}</Title>\n        </Head>\n      }\n      {children}</Root>\n  )\n}\n\nexport default Card;","import styled from '@emotion/styled';\n\nconst PaddedContainer = styled.div`\n  padding: 16px;\n`;\n\nexport default PaddedContainer;","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Control, Controller, FieldError } from 'react-hook-form';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { FieldName } from 'react-hook-form/dist/types/form';\nimport { FieldRules } from 'types/FieldRules';\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\ninterface Props<T> {\n  name?: keyof T;\n  control?: Control<T>;\n  label: string;\n  className?: string;\n  error?: FieldError;\n  rules?: FieldRules;\n  placeholder?: string;\n  // type?: 'text' | 'number' | 'password';\n  disabled?: boolean;\n  autoFocus?: boolean;\n  transform?: (value: string) => any;\n}\n\nconst TextField = <T extends object>(props: Props<T>) => {\n  const {\n    name,\n    control,\n    label,\n    error,\n    rules,\n    // type,\n    placeholder,\n    disabled,\n    autoFocus,\n    transform\n  } = props;\n\n  return (\n    <Controller\n      control={ control }\n      name={ name as FieldName<T> }\n      rules={ rules }\n      render={ ({ onChange, onBlur, value, name }) => (\n        <MuiTextField\n          id={name}\n          fullWidth\n          autoFocus={autoFocus}\n          css={TextFieldStyle}\n          // type={ type }\n          label={label}\n          placeholder={placeholder}\n          onChange={ (event) => {\n            if (transform) {\n              onChange(transform(event.target.value));\n            } else {\n              onChange(event.target.value);\n            }\n          }}\n          onBlur={onBlur}\n          value={value}\n          error={!!error}\n          InputLabelProps={{ shrink: true }}\n          helperText={error?.message ?? ''}\n          disabled={disabled}\n        />\n      ) }\n    />\n  );\n};\n\nexport default TextField;\n","import { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nexport const InviteStatusIcon = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: 10px;\n  font-size: 14px;\n`\n\nexport const Joined = css`\n  color: #009a00;\n`\n\nexport const Invited = css`\n  color: #f09d00;\n`\n\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    var _option$label;\n\n    return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = function getOptionLabel(option) {\n      var optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n        console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return optionLabel;\n    };\n  }\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValueState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValueState = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n  var listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            var newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? \"\".concat(id, \"-listbox\") : null,\n        role: 'combobox',\n        'aria-expanded': listboxAvailable\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': listboxAvailable ? \"\".concat(id, \"-listbox\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-listbox\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '2px 4px 3px'\n        },\n        '& $input:first-child': {\n          padding: '1px 0 4px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '7.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '2.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '7px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '2.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (option) {\n    var _option$label;\n\n    return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    return /*#__PURE__*/React.createElement(\"li\", props2, getOptionLabel(option));\n  };\n\n  var renderOption = renderOptionProp || defaultRenderOption;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    });\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   * @default <CloseIcon fontSize=\"small\" />\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   * @default false\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * The `Popper` content will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"remove-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Control, Controller, FieldError } from 'react-hook-form';\nimport MuiAutocomplete from '@material-ui/lab/Autocomplete';\nimport { InputLabelProps, TextField } from '@material-ui/core';\nimport { FieldRules } from 'types/FieldRules';\nimport { FieldName } from 'react-hook-form/dist/types/form';\n\nexport interface SelectOption<R> {\n  label: string;\n  value: R;\n}\n\ninterface Props<T,R> {\n  name: keyof T;\n  control: Control<T>;\n  error?: FieldError;\n  rules?: FieldRules;\n  label: string;\n  options: Array<SelectOption<R>>;\n  placeholder?: string;\n  autoFocus?: boolean;\n  InputLabelProps?: Partial<InputLabelProps>;\n  disableClearable?: boolean | undefined;\n}\n\nconst TextFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    background-color: #eee;\n  }\n  .MuiInput-input {\n    padding: 6px 5px;\n    font-size: 14px;\n  }\n`;\n\nconst AutoCompleteField = <T extends Record<string, any>, R extends any>(props: Props<T,R>) => {\n  const {\n    name,\n    control,\n    error,\n    rules,\n    label,\n    placeholder,\n    disableClearable,\n    autoFocus,\n    options,\n  } = props;\n\n  return (\n    <Controller\n      control={control}\n      name={name as FieldName<T>}\n      rules={rules}\n      render={({ onChange, onBlur, value, name }) => {\n        // const selectedValueWithLabel = options.find(option => option?.value === value);\n\n        return (\n          <MuiAutocomplete\n            id={name}\n            autoHighlight\n            disableClearable={disableClearable}\n            options={options}\n            getOptionSelected={(option: SelectOption<R>, value: SelectOption<R>) => { \n              return value ? option.value === value.value : false;\n            }}\n            getOptionLabel={(option) => option?.label || ''}\n            value={value}\n            // value={selectedValueWithLabel}\n            onChange={(evt, newValue) => onChange(newValue)}\n            onBlur={onBlur}\n            renderInput={({ InputLabelProps, InputProps, ...rest }) => \n              <TextField\n                autoFocus={autoFocus}\n                css={TextFieldStyle}\n                label={label}\n                error={!!error}\n                InputLabelProps={{ shrink: true, ...InputLabelProps }}\n                InputProps={{ placeholder: placeholder, ...InputProps }}\n                helperText={ error?.message ?? '' }\n                {...rest}\n              />\n            }\n          />\n        )\n      }}\n    />\n  )\n};\n\nexport default AutoCompleteField;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst DisplayFieldStyle = css`\n  .MuiFormLabel-root {\n    font-size: 11px;\n    color: #777;\n    /* text-transform: uppercase; */\n    line-height: 2em;\n  }\n  .MuiInput-root {\n    /* background-color: #fafafa; */\n  }\n  .MuiInput-input {\n    padding: 2px 0;\n    font-size: 14px;\n  }\n`;\ninterface Props {\n  label: string;\n  className?: string;\n  // type?: 'text' | 'number' | 'password';\n  disabled?: boolean;\n  value: string;\n  transform?: (value: string) => any;\n}\n\nconst DisplayField = (props: Props) => {\n  const {\n    label,\n    disabled,\n    value,\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      css={DisplayFieldStyle}\n      // type={ type }\n      label={label}\n      value={value}\n      InputLabelProps={{ shrink: true }}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default DisplayField;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { GoCheck } from 'react-icons/go';\nimport { MdEdit, MdEmail, MdLocalPhone, MdSend } from 'react-icons/md';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Grid, IconButton, Tooltip } from '@material-ui/core';\nimport AutoCompleteField, { SelectOption } from 'components/form/AutoCompleteField';\nimport TextField from 'components/form/TextField';\nimport PaddedContainer from 'components/PaddedContainer';\nimport { Invited, InviteStatusIcon, Joined } from 'components/AccountStatus';\nimport DisplayField from 'components/form/DisplayField';\nimport Card from 'components/Card';\n\nconst ContactDetails = styled.div`\n  padding: 16px 16px 1px 16px;\n  background-color: #eee;\n  margin-top: 1px;\n  font-size: 14px;\n  position: relative;\n`;\n\nconst ContactLineIcon = styled.div`\n  display: inline-block;\n  margin-right: 10px;\n  vertical-align: middle;\n`;\n\nconst ContactDetailLine = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst ContactEditClass = css`\n  position: absolute;\n  right: 2px;\n  top: 2px;\n`\n\nconst contactOptions: SelectOption<string>[] = [\n  { label: \"Walter White\", value: \"123\" },\n  { label: \"Saul Goodman\", value: \"456\" },\n  { label: \"Kim Wexler\", value: \"789\" }\n];\n\ninterface BusinessDetailsForm {\n  // LegalName: string;\n  TradingName: string;\n  TradingAddress: string;\n  WebSite: string;\n  // Abn: string;\n  PrimaryContact: SelectOption<string> | undefined;\n  SecondaryContact: SelectOption<string> | undefined;\n}\n\nconst defaultValues: BusinessDetailsForm = {\n  // LegalName: 'Breaking Bad Pty Ltd',\n  TradingName: 'Breaking Bad Widgets',\n  WebSite: 'https://breakingbadwidgets.com',\n  TradingAddress: '987 St Kilda Road, Melbourne 3000',\n  // Abn: '12 345 678 901',\n  PrimaryContact: contactOptions.find(option => option.value === '123'),\n  SecondaryContact: undefined,\n}\n\nfunction BusinessDetails() {\n  const history = useHistory();\n  const methods = useForm<BusinessDetailsForm>({\n    defaultValues,\n    mode: 'onChange',\n  });\n\n  const {\n    handleSubmit,\n    // formState,\n    watch,\n    control,\n  } = methods;\n\n  const primaryContact = watch('PrimaryContact');\n  const secondaryContact = watch('SecondaryContact');\n\n  return (\n    <PaddedContainer>\n      <form onSubmit={handleSubmit(() => {})}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} lg={6}>\n            <Card title=\"Overview\">\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <DisplayField\n                    label=\"Legal Name\"\n                    value=\"Breaking Bad Pty Ltd\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <DisplayField\n                    label=\"ABN\"\n                    value=\"12 345 678 901\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <DisplayField\n                    label=\"ACN\"\n                    value=\"345 678 901\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"TradingName\"\n                    control={control}\n                    label=\"Trading Name\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"TradingAddress\"\n                    control={control}\n                    label=\"Trading Address\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"WebSite\"\n                    control={control}\n                    label=\"Web Site\"\n                    placeholder=\"https://\"\n                  />\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Card title=\"Contacts\">\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <AutoCompleteField\n                    name=\"PrimaryContact\"\n                    control={control}\n                    label=\"Primary Contact\"\n                    options={[\n                      { label: \"Walter White\", value: \"123\" },\n                      { label: \"Saul Goodman\", value: \"456\" },\n                      { label: \"Kim Wexler\", value: \"789\" }\n                    ]}\n                    placeholder=\"Select contact\"\n                    rules={ { required: 'Required' } }\n                  />\n                  {\n                    primaryContact &&\n                    <ContactDetails>\n                      <IconButton\n                        css={ContactEditClass}\n                        onClick={() => history.push('./directory/100')}\n                      >\n                        <MdEdit />\n                      </IconButton>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdLocalPhone /></ContactLineIcon>+61 400 123 456\n                      </ContactDetailLine>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdEmail /></ContactLineIcon>walter.white@bb.com\n                        <Tooltip title=\"Joined\"><InviteStatusIcon css={Joined}><GoCheck /></InviteStatusIcon></Tooltip>\n                      </ContactDetailLine>\n                    </ContactDetails>\n                  }\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <AutoCompleteField\n                    name=\"SecondaryContact\"\n                    control={control}\n                    label=\"Secondary Contact\"\n                    options={[\n                      { label: \"Walter White\", value: \"123\" },\n                      { label: \"Saul Goodman\", value: \"456\" },\n                      { label: \"Kim Wexler\", value: \"789\" }\n                    ]}\n                    placeholder=\"Select contact\"\n                    rules={ { required: 'Required' } }\n                  />\n                  {\n                    secondaryContact &&\n                    <ContactDetails>\n                      <IconButton\n                        css={ContactEditClass}\n                        onClick={() => history.push('./directory/200')}\n                      >\n                        <MdEdit />\n                      </IconButton>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdLocalPhone /></ContactLineIcon>+61 456 789 012\n                      </ContactDetailLine>\n                      <ContactDetailLine>\n                        <ContactLineIcon><MdEmail /></ContactLineIcon>kim.wexler@wm.com\n                        <Tooltip title=\"Invited\"><InviteStatusIcon css={Invited}><MdSend /></InviteStatusIcon></Tooltip>\n                      </ContactDetailLine>\n                    </ContactDetails>\n                  }\n                </Grid>\n              </Grid>\n            </Card>\n            {/* <div>Default Values:</div>\n              <pre>{\n                JSON.stringify(defaultValues, null, 2)\n              }</pre>\n              <div>Form State:</div>\n              <pre>{\n                JSON.stringify(formState, null, 2)\n              }</pre> */}\n          </Grid>\n        </Grid>\n      </form>\n    </PaddedContainer>\n  )\n}\n\nexport default BusinessDetails;\n"],"sourceRoot":""}