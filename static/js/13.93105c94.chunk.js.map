{"version":3,"sources":["components/PaddedContainer.tsx","utils/string.ts","utils/isArray.ts","components/LazyDialog.tsx","utils/color.ts","types/AccountAccessType.ts","components/table/FilterDrawer.tsx","utils/isNullOrUndefined.ts","utils/isObject.ts","utils/isEmptyObject.ts","components/table/Table.tsx","../node_modules/@material-ui/core/Fab/Fab.js","types/AccountInviteStatus.ts","../node_modules/@material-ui/core/Dialog/Dialog.js","../node_modules/@material-ui/core/ListItemAvatar/ListItemAvatar.js","pages/accounts/Users.tsx"],"names":["PaddedContainer","styled","div","initials","value","split","map","parts","charAt","join","noSpaces","replace","isArray","Array","LazyDialog","isOpen","children","useState","isOpenState","setOpenState","useEffect","timeoutId","setTimeout","clearTimeout","Suspense","fallback","open","colorHash","ColorHash","lightness","avatarColor","hex","AccountAccessType","AccountAccessTypeLabels","Map","View","Editor","Admin","useStyles","makeStyles","theme","createStyles","filterDrawer","filterHeading","padding","spacing","margin","borderBottom","borderBottomColor","palette","grey","filters","minHeight","filterDrawerContent","minWidth","display","height","gridTemplateRows","filterDrawerBackdrop","background","filteredCount","fontSize","color","marginLeft","filterFooter","borderTop","borderTopColor","FilterDrawer","onClose","onClearFilters","topicName","classes","handleClear","useCallback","evt","handleApply","Drawer","anchor","className","ModalProps","BackdropProps","toLowerCase","DialogActions","Button","size","onClick","variant","isNullOrUndefined","isObject","isObjectType","Date","isEmptyObject","Object","keys","length","TableLoaderContainer","TableHeadCellStyles","css","TableCellStyles","TableRowClickableStyles","TableHeadCellInnerStyles","defaultPaginationState","total","current","pageSize","Table","props","frozenHeader","columns","data","onPaginationChange","onSortChange","onRowClick","pagination","sort","filterable","isLoading","rowsPerPageOptions","title","topic","sortState","setSortState","paginationState","setPaginationState","filtersDrawerOpen","setFiltersDrawerOpen","handleChangePage","_evt","newPage","newPaginationState","handleChangeRowsPerPage","target","handleRowClick","record","rowClassName","useMemo","undefined","tableHeaders","TableRow","column","index","columnSortState","dataIndex","columnDataIndex","TableCell","root","width","sortable","TableSortLabel","active","direction","newSortState","rowCells","row","i","render","filterComponents","filterComponent","Fragment","hasFilters","Toolbar","Tooltip","IconButton","aria-label","DelayedLoader","TableContainer","style","maxHeight","stickyHeader","TableHead","TableBody","TablePagination","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","Fab","React","ref","component","disabled","disableFocusRipple","focusVisibleClassName","other","_objectWithoutPropertiesLoose","themeVariantsClasses","useThemeVariants","_extends","ButtonBase","clsx","capitalize","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","typography","button","transition","transitions","create","duration","short","borderRadius","boxShadow","shadows","getContrastText","backgroundColor","A100","textDecoration","action","disabledBackground","alignItems","justifyContent","contrastText","main","dark","extended","circular","sizeSmall","sizeMedium","name","AccountInviteStatus","AccountInviteStatusLabels","Invited","Active","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","disableBackdropClick","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","PaperComponent","Paper","PaperProps","scroll","TransitionComponent","Fade","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","backdropClick","Modal","BackdropComponent","Backdrop","closeAfterTransition","event","appear","in","timeout","role","container","onMouseDown","currentTarget","elevation","paper","String","paperFullScreen","paperFullWidth","position","scrollPaper","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","outline","paperScrollPaper","flexDirection","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","ListItemAvatar","context","ListContext","alignItemsFlexStart","flexShrink","marginTop","NewAccountUserDialog","lazy","EditAccountUserDialog","NewButtonStyle","ListItemStyle","SecondaryDetails","Email","Name","Mobile","id","email","mobile","accessType","status","get","Users","isNewAccountUserModalOpen","setIsNewAccountUserModalOpen","isEditAccountUserModalOpen","setIsEditAccountUserModalOpen","selectedAccountUser","setSelectedAccountUser","accountUser","alt","item","avatar","onSubmit"],"mappings":"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","file":"static/js/13.93105c94.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst PaddedContainer = styled.div`\n  padding: 16px;\n`;\n\nexport default PaddedContainer\n","\nexport const initials = (value: string) =>\n  value.split(' ').map(parts => parts.charAt(0)).join('')\n\nexport const noSpaces = (value: string) =>\n  value.replace(/\\s/g, '')","const isArray = <T>(value: unknown): value is T[] => Array.isArray(value);\n\nexport default isArray;","\nimport { Dialog } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nexport interface LazyDialogProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n}\n\nconst dialogCloseAnimationDuration = 500;\n\nfunction LazyDialog({ isOpen, children }: LazyDialogProps) {\n  const [isOpenState, setOpenState] = useState(isOpen);\n  // Defer close of the dialog for the animation to complete\n  useEffect(\n    () => {\n      let timeoutId: NodeJS.Timeout;\n      if (isOpenState !== isOpen) {\n        if (!isOpen) {\n          timeoutId = setTimeout(() => {\n            setOpenState(isOpen);\n          }, dialogCloseAnimationDuration);\n        } else {\n          setOpenState(isOpen);\n        }\n      }\n      return () => clearTimeout(timeoutId);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isOpen],\n  );\n\n  return (\n    <React.Suspense fallback={<Dialog open />}>\n      {isOpenState && children}\n    </React.Suspense>\n  )\n}\n\nexport default LazyDialog;\n","import * as ColorHash from 'color-hash';\n\n// const colorHash = new ColorHash({ lightness: [0.3, 0.45, 0.6] });\n// const colorHash = new ColorHash({ lightness: [0.4, 0.4, 0.6] });\nconst colorHash = new ColorHash({ lightness: 0.45 });\n\nexport const stringToHslColor = (value: string, saturation: number, lightness: number) => {\n  let hash = 0;\n  for (var i = 0; i < value.length; i++) {\n    hash = value.charCodeAt(i) + ((hash << 5) - hash);\n    // hash = value.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  \n  const hex = hash % 360;\n  return `hsl(${hex}, ${saturation}%, ${lightness}%)`;\n}\n\nexport const avatarColor = (value: string) => colorHash.hex(value)\n\n// export const avatarColor = (value: string) => stringToHslColor(value, 50, 50)\n\n// const hslGenerator = (value: string, saturation: number, lightness: number) => {\n//   const [...valueChars] = value;\n//   const hash = valueChars.reduce((a, c) => {\n//     const h = c.charCodeAt(0) + (a << 2) — a)\n//     return h % 360;\n//   }, 0);\n//   return `hsl(${hash}, ${saturation}%, ${lightness}%)`;\n// }\n","\n\n\nexport enum AccountAccessType {\n  None = 0,\n  View = 1,\n  Editor = 3,\n  Admin = 5,\n}\n\nexport const AccountAccessTypeLabels = new Map<AccountAccessType, string>([\n  [AccountAccessType.View, 'Viewer'],\n  [AccountAccessType.Editor, 'Editor'],\n  [AccountAccessType.Admin, 'Owner'],\n]);\n","import React, { PropsWithChildren, useCallback } from 'react';\nimport {\n  Button,\n  createStyles,\n  DialogActions,\n  Drawer,\n  // Grid,\n  makeStyles,\n  ModalProps\n  } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterDrawer: {\n    },\n    filterHeading: {\n      padding: theme.spacing(2),\n      margin: 0,\n      borderBottom: '1px solid',\n      borderBottomColor: theme.palette.grey[200]\n    },\n    filters: {\n      padding: theme.spacing(2),\n      minHeight: '100%',\n    },\n    filterDrawerContent: {\n      minWidth: 250,\n      display: 'grid',\n      height: '100%',\n      gridTemplateRows: 'auto 1fr auto',\n    },\n    filterDrawerBackdrop: {\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    filteredCount: {\n      fontSize: '0.8em',\n      color: theme.palette.grey[400],\n      marginLeft: theme.spacing(1)\n    },\n    filterFooter: {\n      borderTop: '1px solid',\n      borderTopColor: theme.palette.grey[200]\n    },\n  }),\n);\n\ninterface FilterDrawerProps {\n  isOpen: boolean;\n  filteredCount: number;\n  topicName?: string;\n  isLoading?: boolean;\n  onClose: ModalProps['onClose'];\n  onClearFilters: () => void;\n}\n\nconst FilterDrawer: React.FC<PropsWithChildren<FilterDrawerProps>> = ({\n  isOpen,\n  onClose,\n  onClearFilters,\n  children,\n  topicName,\n  // isLoading,\n  filteredCount,\n}) => {\n  const classes = useStyles()\n\n  const handleClear = useCallback((evt: any) => {\n    if (onClearFilters) {\n      onClearFilters();\n    }\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClearFilters, onClose]);\n\n  const handleApply = useCallback((evt: any) => {\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClose]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.filterDrawer}\n      open={isOpen}\n      onClose={onClose}\n      // transitionDuration={100}\n      ModalProps={{\n        BackdropProps: {\n          className: classes.filterDrawerBackdrop\n        }\n      }}\n    >\n      <div className={classes.filterDrawerContent}>\n        <h2 className={classes.filterHeading}>Filter <span className={classes.filteredCount}>{filteredCount} {topicName?.toLowerCase()}</span></h2>\n        <div className={classes.filters}>{children}</div>\n        <div className={classes.filterFooter}>\n          <DialogActions>\n            {/* <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <Button size=\"large\" autoFocus color=\"primary\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Grid>\n              <Grid item xs={6} className>\n                <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n                  Apply\n                </Button>\n              </Grid>\n            </Grid> */}\n            <Button size=\"large\" color=\"primary\" onClick={handleClear}>\n              Clear\n            </Button>\n            <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n              Apply\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default FilterDrawer;\n","const isNullOrUndefined = (value: unknown): value is null | undefined => value == null;\n\nexport default isNullOrUndefined;","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nconst isObject = <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n\n export default isObject;\n ","import { EmptyObject } from 'types/resolvers';\nimport isObject from './isObject';\n\nconst isEmptyObject = (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n\nexport default isEmptyObject;","import DelayedLoader from '../DelayedLoader';\nimport FilterDrawer from './FilterDrawer';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n  } from 'react';\nimport {\n  // makeStyles,\n  // createStyles,\n  TableContainer,\n  Table as MuiTable,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  TablePagination,\n  Toolbar,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport isEmptyObject from 'utils/isEmptyObject';\n\nexport declare type CompareFn<T> = ((a: T, b: T, sortOrder?: 'ascend' | 'descend') => number);\n\nconst TableLoaderContainer = styled.div`\n  height: 4px;\n`\n\nconst TableHeadCellStyles = css`\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n`;\n\nconst TableCellStyles = css`\n  padding: 10px 0;\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n  font-size: 14px;\n`;\n\nconst TableRowClickableStyles = css`\n  cursor: pointer;\n  &:hover {\n    td {\n      background-color: rgba(0, 0, 0, 0.04);\n    }\n  }\n`;\n\nconst TableHeadCellInnerStyles = css`\n  padding: 10px 0;\n  width: 100%;\n  color: #777;\n  font-weight: normal;\n  display: inline-flex;\n  align-items: center;\n  flex-direction: inherit;\n  justify-content: flex-start;\n  font-size: 11px;\n`;\n\nexport interface ColumnProps<T> {\n  title?: React.ReactNode;\n  dataIndex: keyof T;\n  render?: (value: any, record: T, index: number) => React.ReactNode;\n  align?: 'left' | 'right' | 'center';\n  // filters?: ColumnFilterItem[];\n  // onFilter?: (value: any, record: T) => boolean;\n  // filterMultiple?: boolean;\n  // filterDropdown?: React.ReactNode | ((props: Object) => React.ReactNode);\n  // filterDropdownVisible?: boolean;\n  // onFilterDropdownVisibleChange?: (visible: boolean) => void;\n  sortable?: boolean;\n  // sorter?: boolean | CompareFn<T>;\n  // defaultSortOrder?: 'ascend' | 'descend';\n  // colSpan?: number;\n  width?: string | number;\n  className?: string;\n  // fixed?: boolean | ('left' | 'right');\n  // filterIcon?: React.ReactNode;\n  // filteredValue?: any[];\n  filterComponent?: React.ReactNode;\n  // sortOrder?: SortOrder;\n  // children?: ColumnProps<T>[];\n  // onCellClick?: (record: T, event: any) => void;\n  // onCell?: (record: T) => any;\n  // onHeaderCell?: (props: ColumnProps<T>) => any;\n}\n\nexport declare type SortOrder = 'descend' | 'ascend';\n\nexport interface ListRequest<T> {\n  sort?: SortState<T>\n  // sortField?: string;\n  // sortOrder?: SortOrder;\n  filters?: FilterState<T>;\n  pageSize: number;\n  pageNumber: number;\n}\n\nexport const defaultListRequest: ListRequest<any> = {\n  pageNumber: 1,\n  pageSize: 1000,\n};\n\n\nexport interface ListItems<I extends object> {\n  isLoading: boolean;\n  items: I[];\n  hasRequested?: boolean;\n  totalCount: number;\n}\n\nexport interface PaginationProps {\n  total: number;\n  current: number;\n  pageSize: number;\n  // defaultCurrent?: number;\n  // defaultPageSize?: number;\n  // onChange?: (page: number, pageSize?: number) => void;\n  // hideOnSinglePage?: boolean;\n  // showSizeChanger?: boolean;\n  // pageSizeOptions?: string[];\n  // onShowSizeChange?: (current: number, size: number) => void;\n  // showQuickJumper?: boolean;\n  // showTotal?: (total: number, range: [number, number]) => React.ReactNode;\n  // size?: string;\n  // simple?: boolean;\n  // style?: CSSProperties;\n  // locale?: Object;\n  // className?: string;\n  // prefixCls?: string;\n  // selectPrefixCls?: string;\n  // itemRender?: (page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next') => React.ReactNode;\n  // role?: string;\n}\n\nexport interface SorterResult<T> {\n  column: ColumnProps<T>;\n  order: SortOrder;\n  field: string;\n  columnKey: string;\n}\n\nexport type SortState<T> = Partial<Record<keyof T, SortOrder>>;\nexport type FilterState<T> = Partial<Record<keyof T, string>>;\nexport type FilterKey<T> = keyof T;\n\nexport const defaultPaginationState: PaginationProps = {\n  total: 0,\n  current: 1,\n  pageSize: 10,\n}\nexport const defaultTableState: TableState<any> = {\n  pagination: defaultPaginationState,\n  filters: {},\n  sort: {}\n}\n\nexport interface TableState<T> {\n  pagination: PaginationProps;\n  filters: FilterState<T>;\n  sort: SortState<T>;\n};\n\nexport interface TableProps<T extends object> {\n  // localStorageStateKey: string;\n  height?: number;\n  frozenHeader?: boolean;\n  columns: ColumnProps<T>[];\n  data?: T[];\n  filterable?: boolean;\n  sort?: SortState<T>;\n  filters?: FilterState<T>;\n  isLoading?: boolean;\n  pagination?: PaginationProps;\n  onPaginationChange?: (paginationState: PaginationProps) => void;\n  onFilterChange?: (filterState: FilterState<T>) => void;\n  onSortChange?: (sortState: SortState<T>) => void;\n  onRowClick?: (record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => void;\n  rowClassName?: (record: T) => string;\n  onClearFilters?: () => void; \n  rowsPerPageOptions?: Array<number | { value: number; label: string }>\n  title?: string;\n  topic?: string;\n}\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n    // tableContainer: {\n    //   position: relative\n    // },\n    // tableLoader: {\n    //   // height: '4px',\n    // },\n    // tableToolbar: {\n      // paddingRight: theme.spacing(1),\n    // },\n    // tableTitle: {\n      // flex: '1 1 100%',\n      // margin: 0,\n    // },\n    // tableHeadCell: {\n      // padding: 0,\n      // textTransform: 'uppercase',\n      // backgroundColor: '#f2f2f2',\n      // fontSize: '10px',\n      // color: '#111',\n      // fontWeight: 'bold',\n    // },\n    // tableHeadCellInner: {\n      // padding: '6px 10px',\n      // width: '100%',\n      // display: 'inline-flex',\n      // alignItems: 'center',\n      // flexDirection: 'inherit',\n      // justifyContent: 'flex-start',\n    // },\n    // tableHeadCellSortable: {\n      // '&:hover': {\n      //   cursor: 'pointer',\n      //   backgroundColor: '#ddd',\n      // }\n    // },\n    // tableRowClickable: {\n      // cursor: 'pointer',\n      // '&:hover > td': {\n      //   backgroundColor: '#e7f6ff',\n      // }\n    // },\n//   }),\n// );\n\nexport function Table<T extends object>(props: TableProps<T>): React.ReactElement {\n  const {\n    // localStorageStateKey,\n    frozenHeader,\n    height,\n    columns,\n    data,\n    onPaginationChange,\n    onSortChange,\n    onRowClick,\n    pagination,\n    sort,\n    filters,\n    filterable,\n    isLoading,\n    rowsPerPageOptions = [10, 15, 20, 25],\n    title,\n    topic,\n    onClearFilters,\n    // onClick,\n  } = props\n\n  // const classes = useStyles()\n  // const initialSortState = columns.map(column => )\n  const [sortState, setSortState] = useState<SortState<T>>(sort || {});\n  // const [filterState, setFilterState] = useState<FilterState<T>>(filters || {});\n  const [paginationState, setPaginationState] = useState<PaginationProps>(pagination || defaultPaginationState);\n  const [filtersDrawerOpen, setFiltersDrawerOpen]= useState(false);\n\n  useEffect(() => {\n    if (pagination) {\n      setPaginationState(pagination)\n    }\n  }, [pagination])\n\n  const handleChangePage = useCallback((_evt: unknown, newPage: number) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      current: newPage + 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState)\n  }, [paginationState, onPaginationChange]);\n\n  const handleChangeRowsPerPage = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      pageSize: +evt.target.value,\n      current: 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState);\n  }, [paginationState, onPaginationChange]);;\n\n  const handleRowClick = useCallback((record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n    if (onRowClick) {\n      onRowClick(record, evt);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick]);\n\n  const handleFilterClick = () => {\n    setFiltersDrawerOpen(true);\n  };\n\n  const rowClassName = useMemo(() => {\n    return !!onRowClick ? TableRowClickableStyles : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick])\n\n  const tableHeaders = useMemo(() => (\n    <TableRow>\n      {columns.map((column, index) => {\n        const columnSortState = sortState[column.dataIndex];\n        const columnDataIndex = column.dataIndex;\n        return (\n          <TableCell\n            classes={{\n              root: TableHeadCellStyles,\n            }}\n            // className={clsx(\n            //   // classes.tableHeadCell,\n            //   {[classes.tableHeadCellSortable]: column.sortable},\n            // )}\n            width={column.width}\n            key={index}\n          >\n            {\n              column.sortable ?\n              <TableSortLabel\n                className={TableHeadCellInnerStyles}\n                active={!!columnSortState}\n                direction={columnSortState ? columnSortState === 'descend' ? 'desc' : 'asc' : undefined}\n                onClick={() => {\n                  let newSortState: SortState<T> = {};\n                  if (columnSortState !== 'descend') {\n                    newSortState = {\n                      [columnDataIndex]: !columnSortState ? 'ascend' : 'descend',\n                    } as SortState<T>;\n                  }\n                  setSortState(newSortState)\n                  onSortChange && onSortChange(newSortState)\n                }}\n              >\n                {column.title}\n              </TableSortLabel> :\n              <span className={TableHeadCellInnerStyles}>{column.title}</span>\n            }\n          </TableCell>\n          )\n        }\n      )}\n    </TableRow>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [columns, onSortChange, sortState]);\n\n  const rowCells = useMemo(\n    () =>\n      data?.map((row: T, i) => {\n        return (\n          <TableRow\n            key={i}\n            onClick={(evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n              handleRowClick(row, evt);\n            }}\n            className={rowClassName}\n          >\n            {columns.map((column, index) => \n              <TableCell className={TableCellStyles} key={index}>\n                {column.render ? column.render(((row as any)[column.dataIndex]), row, index) : ((row as any)[column.dataIndex])}\n              </TableCell>\n            )}\n          </TableRow>\n        )\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columns, data, handleRowClick, rowClassName]\n  );\n\n  const filterComponents = useMemo(\n    () => (\n      columns.map((column, index) => (\n        column.filterComponent &&\n        <React.Fragment key={index}>{column.filterComponent}</React.Fragment>\n      ))\n    ),\n    [columns],\n  )\n\n  const hasFilters = useMemo(\n    () => !isEmptyObject(filters),\n    [filters],\n  )\n\n  return (\n    <>\n      {\n        (title || filterable) &&\n        <Toolbar variant=\"dense\">\n          <h2>{title}</h2>\n          {\n            filterable &&\n            <Tooltip title=\"Filter\">\n              <IconButton\n                onClick={handleFilterClick}\n                aria-label=\"filter list\"\n                color={hasFilters ? \"primary\" : undefined}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        </Toolbar>\n      }\n      <TableLoaderContainer>{ isLoading && <DelayedLoader />}</TableLoaderContainer>\n      <TableContainer style={{ maxHeight: height }}>\n        <MuiTable stickyHeader={frozenHeader}>\n          <TableHead>{tableHeaders}</TableHead>\n          <TableBody>\n            {rowCells}\n          </TableBody>\n        </MuiTable>\n      </TableContainer>\n      {\n        (!!pagination) &&\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          count={pagination.total}\n          rowsPerPage={pagination.pageSize}\n          page={pagination.current - 1}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      }\n      {\n        (filterable && onClearFilters) &&\n        <FilterDrawer\n          filteredCount={pagination?.total || 0}\n          topicName={topic}\n          isOpen={filtersDrawerOpen}\n          onClose={() => setFiltersDrawerOpen(false)}\n          onClearFilters={onClearFilters}\n        >\n          {filterComponents}\n        </FilterDrawer>\n      }\n    </>\n  )\n}\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    boxShadow: theme.shadows[6],\n    '&:active': {\n      boxShadow: theme.shadows[12]\n    },\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      textDecoration: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // assure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  primary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  secondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"extended\"`. */\n  extended: {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48,\n    '&$sizeSmall': {\n      width: 'auto',\n      padding: '0 8px',\n      borderRadius: 34 / 2,\n      minWidth: 34,\n      height: 34\n    },\n    '&$sizeMedium': {\n      width: 'auto',\n      padding: '0 16px',\n      borderRadius: 40 / 2,\n      minWidth: 40,\n      height: 40\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"circular\"`. */\n  circular: {},\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"``. */\n  sizeSmall: {\n    width: 40,\n    height: 40\n  },\n\n  /* Styles applied to the root element if `size=\"medium\"``. */\n  sizeMedium: {\n    width: 48,\n    height: 48\n  }\n});\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableFocusRipple = false,\n    focusVisibleClassName,\n    size = 'large',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  }), 'MuiFab');\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, size !== 'large' && classes[`size${capitalize(size)}`], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","\n\n\nexport enum AccountInviteStatus {\n  None = 0,\n  Invited = 1,\n  Active = 3,\n}\n\nexport const AccountInviteStatusLabels = new Map<AccountInviteStatus, string>([\n  [AccountInviteStatus.Invited, 'Invited'],\n  [AccountInviteStatus.Active, 'Active'],\n]);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '@media print': {\n      // Use !important to override the Modal inline-style.\n      position: 'absolute !important'\n    }\n  },\n\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the container element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    '@media print': {\n      height: 'auto'\n    },\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    margin: 32,\n    position: 'relative',\n    overflowY: 'auto',\n    // Fix IE11 issue, to remove at some point.\n    '@media print': {\n      overflowY: 'visible',\n      boxShadow: 'none'\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=false`. */\n  paperWidthFalse: {\n    maxWidth: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  }\n});\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  const {\n    BackdropProps,\n    children,\n    classes,\n    className,\n    disableBackdropClick = false,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    onEscapeKeyDown,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  const {\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\"]);\n\n  const context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import styled from '@emotion/styled';\nimport { Avatar, Chip, Fab, Grid, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport PaddedContainer from 'components/PaddedContainer';\nimport { ColumnProps, Table } from 'components/table/Table';\nimport { css } from 'emotion';\nimport React, { useState } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport { AccountAccessType, AccountAccessTypeLabels } from 'types/AccountAccessType';\nimport { AccountInviteStatus, AccountInviteStatusLabels } from 'types/AccountInviteStatus';\nimport AccountUser from 'types/AccountUser';\nimport { avatarColor } from 'utils/color';\nimport { initials } from 'utils/string';\nimport { FiClock } from 'react-icons/fi';\nimport LazyDialog from 'components/LazyDialog';\n\nconst NewAccountUserDialog = React.lazy(() => import('components/organisms/NewAccountUserDialog'))\nconst EditAccountUserDialog = React.lazy(() => import('components/organisms/EditAccountUserDialog'))\n\nconst NewButtonStyle = css`\n  font-size: 2em;\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`;\n\nconst ListItemStyle = css`\n  padding: 16px;\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.04);\n    cursor: pointer;\n  }\n\n  .MuiListItemAvatar-root {\n    min-width: 56px;\n  }\n`;\n\nconst SecondaryDetails = styled.div`\n  font-size: 13px;\n  margin-top: 10px;\n  line-height: 1.7em;\n  color: #777;\n`;\n\nconst Email = styled.div`\n`\n\nconst Name = styled.div`\n  font-size: 18px;\n`\n\nconst Mobile = styled.div`\n`\n\nconst data: AccountUser[] = [\n  {\n    id: 1,\n    name: 'Walter White',\n    email: 'walter.white@bb.com',\n    mobile: '+61 456 789 012',\n    accessType: AccountAccessType.Admin,\n    status: AccountInviteStatus.Active,\n  },\n  {\n    id: 2,\n    name: 'Saul Goodman',\n    email: 'saul.goodman@itsallgoodman.com',\n    mobile: '+61 432 109 876',\n    accessType: AccountAccessType.Editor,\n    status: AccountInviteStatus.Invited,\n  },\n  {\n    id: 3,\n    name: 'Kim Wexler',\n    email: 'kim.wexler@wm.com',\n    mobile: '+61 444 555 666',\n    accessType: AccountAccessType.View,\n    status: AccountInviteStatus.Active,\n  }\n]\n\nconst columns: ColumnProps<AccountUser>[] = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n  {\n    title: 'Mobile',\n    dataIndex: 'mobile',\n  },\n  {\n    title: 'Role',\n    dataIndex: 'accessType',\n    render: (value, record) => AccountAccessTypeLabels.get(value)\n  },\n  {\n    title: '',\n    dataIndex: 'status',\n    render: (value, record) => AccountInviteStatusLabels.get(value)\n  },\n];\n\n\nfunction Users() {\n  const [isNewAccountUserModalOpen, setIsNewAccountUserModalOpen] = useState(false);\n  const [isEditAccountUserModalOpen, setIsEditAccountUserModalOpen] = useState(false);\n  const [selectedAccountUser, setSelectedAccountUser] = useState<AccountUser | undefined>(undefined);\n\n  const onNewButtonClick = () => {\n    setIsNewAccountUserModalOpen(true);\n  }\n\n  const onNewAccountUserModalClose = () => {\n    setIsNewAccountUserModalOpen(false);\n  }\n\n  const onNewAccountUserModalOK = () => {\n    setIsNewAccountUserModalOpen(false);\n  }\n\n  const onEditAccountUserModalClose = () => {\n    setSelectedAccountUser(undefined);\n    setIsEditAccountUserModalOpen(false);\n  }\n\n  const onEditAccountUserModalOK = () => {\n    setSelectedAccountUser(undefined);\n    setIsEditAccountUserModalOpen(false);\n  }\n\n  const handleRowClick = (row: AccountUser) => {\n    setSelectedAccountUser(row);\n    setIsEditAccountUserModalOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <PaddedContainer style={{ display: 'none '}}>\n        <Table<AccountUser>\n          // height={720}\n          // frozenHeader\n          // localStorageStateKey='client'\n          // data={data?.items}\n          data={data}\n          columns={columns}\n          // sort={sortState}\n          // filters={filterState}\n          // pagination={paginationState}\n          onRowClick={handleRowClick}\n          // onPaginationChange={setPaginationState}\n          // onSortChange={setSortState}\n          // onFilterChange={setFilterState}\n        />\n      </PaddedContainer>\n      <List>\n        {\n          data.map((accountUser, index) => \n            <ListItem key={index} alignItems=\"flex-start\" className={ListItemStyle} onClick={() => handleRowClick(accountUser)}>\n              <ListItemAvatar>\n                <Avatar alt={accountUser.name} style={{ backgroundColor: avatarColor(accountUser.name)}}>{initials(accountUser.name)}</Avatar>\n              </ListItemAvatar>\n              <ListItemText>\n                <Grid container spacing={2}>\n                  <Grid item xs={8}>\n                    <Name>{accountUser.name}</Name>\n                    <SecondaryDetails>\n                      <Email>{accountUser.email}</Email>\n                      <Mobile>{accountUser.mobile}</Mobile>\n                    </SecondaryDetails>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Chip\n                      avatar={accountUser.status === AccountInviteStatus.Invited ? <FiClock/> : undefined}\n                      label={AccountAccessTypeLabels.get(accountUser.accessType)}\n                      variant={accountUser.accessType === AccountAccessType.Admin ? \"filled\" : \"outlined\"}\n                      color={accountUser.accessType === AccountAccessType.View ? undefined : \"primary\"}\n                    />\n                  </Grid>\n                </Grid>\n              </ListItemText>\n            </ListItem>,\n          )\n        }\n        {/* {\n          ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'].map((value, index) =>\n            <ListItem button key={index} alignItems=\"flex-start\" className={ListItemStyle}>\n              <Avatar alt={value} style={{ backgroundColor: avatarColor(value)}}>{initials(value)}</Avatar>\n             </ListItem>,\n          )\n        } */}\n      </List>\n      <LazyDialog isOpen={isNewAccountUserModalOpen}>\n        <NewAccountUserDialog\n          isOpen={isNewAccountUserModalOpen}\n          onClose={onNewAccountUserModalClose}\n          onSubmit={onNewAccountUserModalOK}\n        />\n      </LazyDialog>\n      {\n        !!selectedAccountUser &&\n        <LazyDialog isOpen={isEditAccountUserModalOpen}>\n          <EditAccountUserDialog\n            accountUser={selectedAccountUser}\n            isOpen={isEditAccountUserModalOpen}\n            onClose={onEditAccountUserModalClose}\n            onSubmit={onEditAccountUserModalOK}\n          />\n        </LazyDialog>\n      }\n      <Fab aria-label=\"add\" color=\"primary\" className={NewButtonStyle} onClick={onNewButtonClick}>\n        <MdAdd />\n      </Fab>\n    </React.Fragment>\n  )\n}\n\nexport default Users;\n"],"sourceRoot":""}