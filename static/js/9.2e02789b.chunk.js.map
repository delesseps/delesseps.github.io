{"version":3,"sources":["../node_modules/@material-ui/core/utils/createSvgIcon.js","components/PaddedContainer.tsx","components/LazyDialog.tsx","components/Card.tsx","types/AccountType.ts","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js","components/table/FilterDrawer.tsx","utils/isNullOrUndefined.ts","utils/isArray.ts","utils/isObject.ts","utils/isEmptyObject.ts","components/table/Table.tsx","pages/accounts/List.tsx"],"names":["createSvgIcon","path","displayName","Component","props","ref","React","createElement","SvgIcon","_extends","muiName","memo","forwardRef","PaddedContainer","styled","div","LazyDialog","isOpen","children","useState","isOpenState","setOpenState","useEffect","timeoutId","setTimeout","clearTimeout","Suspense","fallback","open","Title","Head","Root","Card","title","ariaLabel","aria-label","AccountType","AccountTypeLabels","Map","InvoiceFinance","Instalments","d","useStyles","makeStyles","theme","createStyles","filterDrawer","filterHeading","padding","spacing","margin","borderBottom","borderBottomColor","palette","grey","filters","minHeight","filterDrawerContent","minWidth","display","height","gridTemplateRows","filterDrawerBackdrop","background","filteredCount","fontSize","color","marginLeft","filterFooter","borderTop","borderTopColor","FilterDrawer","onClose","onClearFilters","topicName","classes","handleClear","useCallback","evt","handleApply","Drawer","anchor","className","ModalProps","BackdropProps","toLowerCase","DialogActions","Button","size","onClick","variant","isNullOrUndefined","value","isArray","Array","isObject","isObjectType","Date","isEmptyObject","Object","keys","length","TableLoaderContainer","TableHeadCellStyles","css","TableCellStyles","TableRowClickableStyles","TableHeadCellInnerStyles","defaultPaginationState","total","current","pageSize","Table","frozenHeader","columns","data","onPaginationChange","onSortChange","onRowClick","pagination","sort","filterable","isLoading","rowsPerPageOptions","topic","sortState","setSortState","paginationState","setPaginationState","filtersDrawerOpen","setFiltersDrawerOpen","handleChangePage","_evt","newPage","newPaginationState","handleChangeRowsPerPage","target","handleRowClick","record","rowClassName","useMemo","undefined","tableHeaders","TableRow","map","column","index","columnSortState","dataIndex","columnDataIndex","TableCell","root","width","sortable","TableSortLabel","active","direction","newSortState","rowCells","row","i","render","filterComponents","filterComponent","Fragment","hasFilters","Toolbar","Tooltip","IconButton","DelayedLoader","TableContainer","style","maxHeight","stickyHeader","TableHead","TableBody","TablePagination","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","NewAccountDialog","lazy","Img","img","src","alt","name","get","NewButtonStyle","AccountsPage","push","useHistory","isNewAccountModalOpen","setIsNewAccountModalOpen","id","avatar","type","onSubmit"],"mappings":"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","file":"static/js/9.2e02789b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  const Component = (props, ref) => /*#__PURE__*/React.createElement(SvgIcon, _extends({\n    \"data-testid\": `${displayName}Icon`,\n    ref: ref\n  }, props), path);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import styled from '@emotion/styled';\n\nconst PaddedContainer = styled.div`\n  padding: 16px;\n`;\n\nexport default PaddedContainer\n","\nimport { Dialog } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nexport interface LazyDialogProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n}\n\nconst dialogCloseAnimationDuration = 300;\n\nfunction LazyDialog({ isOpen, children }: LazyDialogProps) {\n  const [isOpenState, setOpenState] = useState(isOpen);\n  // Defer close of the dialog for the animation to complete\n  useEffect(\n    () => {\n      let timeoutId: NodeJS.Timeout;\n      if (isOpenState !== isOpen) {\n        if (!isOpen) {\n          timeoutId = setTimeout(() => setOpenState(isOpen), dialogCloseAnimationDuration);\n        } else {\n          setOpenState(isOpen);\n        }\n      }\n      return () => clearTimeout(timeoutId);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isOpen],\n  );\n\n  return (\n    <React.Suspense fallback={<Dialog open />}>\n      {isOpenState && children}\n    </React.Suspense>\n  )\n}\n\nexport default LazyDialog;\n","import styled from '@emotion/styled';\nimport React, { PropsWithChildren } from 'react';\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 16px;\n  flex-grow: 1;\n`;\n\nconst Head = styled.div`\n  display: flex;\n`;\n\nconst Root = styled.div`\n\n  @media (min-width: 600px) {\n    border: 2px solid rgba(0,0,0,0.12);\n    padding: 16px;\n  }\n  @media (max-width: 599.95px) {\n    /* padding: 0 0 16px 0; */\n    padding: 0;\n    /* border-bottom: 2px solid rgba(0,0,0,0.12); */\n  }\n`;\n\ninterface CardProps {\n  title?: string;\n  ariaLabel?: string;\n  actionMenu?: React.ReactNode;\n}\n\n// const Card: React.ForwardRefRenderFunction<PropsWithChildren<CardProps>, HTMLDivElement | null | any> = ({\nfunction Card({\n  children,\n  title,\n  ariaLabel,\n  // actionMenu,\n}: PropsWithChildren<CardProps>) {\n// }, ref) => {\n  return (\n    <Root aria-label={ariaLabel}>\n      {\n      title &&\n        <Head>\n          <Title>{title}</Title>\n        </Head>\n      }\n      {children}</Root>\n  )\n}\n\nexport default Card;\n","export enum AccountType {\n  None = 0,\n  InvoiceFinance = 1,\n  Instalments = 3,\n}\n\nexport const AccountTypeLabels = new Map<AccountType, string>([\n  [AccountType.InvoiceFinance, 'Invoice Finance'],\n  [AccountType.Instalments, 'Instalments'],\n]);\n\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React, { PropsWithChildren, useCallback } from 'react';\nimport {\n  Button,\n  createStyles,\n  DialogActions,\n  Drawer,\n  // Grid,\n  makeStyles,\n  ModalProps\n  } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterDrawer: {\n    },\n    filterHeading: {\n      padding: theme.spacing(2),\n      margin: 0,\n      borderBottom: '1px solid',\n      borderBottomColor: theme.palette.grey[200]\n    },\n    filters: {\n      padding: theme.spacing(2),\n      minHeight: '100%',\n    },\n    filterDrawerContent: {\n      minWidth: 250,\n      display: 'grid',\n      height: '100%',\n      gridTemplateRows: 'auto 1fr auto',\n    },\n    filterDrawerBackdrop: {\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    filteredCount: {\n      fontSize: '0.8em',\n      color: theme.palette.grey[400],\n      marginLeft: theme.spacing(1)\n    },\n    filterFooter: {\n      borderTop: '1px solid',\n      borderTopColor: theme.palette.grey[200]\n    },\n  }),\n);\n\ninterface FilterDrawerProps {\n  isOpen: boolean;\n  filteredCount: number;\n  topicName?: string;\n  isLoading?: boolean;\n  onClose: ModalProps['onClose'];\n  onClearFilters: () => void;\n}\n\nconst FilterDrawer: React.FC<PropsWithChildren<FilterDrawerProps>> = ({\n  isOpen,\n  onClose,\n  onClearFilters,\n  children,\n  topicName,\n  // isLoading,\n  filteredCount,\n}) => {\n  const classes = useStyles()\n\n  const handleClear = useCallback((evt: any) => {\n    if (onClearFilters) {\n      onClearFilters();\n    }\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClearFilters, onClose]);\n\n  const handleApply = useCallback((evt: any) => {\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClose]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.filterDrawer}\n      open={isOpen}\n      onClose={onClose}\n      // transitionDuration={100}\n      ModalProps={{\n        BackdropProps: {\n          className: classes.filterDrawerBackdrop\n        }\n      }}\n    >\n      <div className={classes.filterDrawerContent}>\n        <h2 className={classes.filterHeading}>Filter <span className={classes.filteredCount}>{filteredCount} {topicName?.toLowerCase()}</span></h2>\n        <div className={classes.filters}>{children}</div>\n        <div className={classes.filterFooter}>\n          <DialogActions>\n            {/* <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <Button size=\"large\" autoFocus color=\"primary\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Grid>\n              <Grid item xs={6} className>\n                <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n                  Apply\n                </Button>\n              </Grid>\n            </Grid> */}\n            <Button size=\"large\" color=\"primary\" onClick={handleClear}>\n              Clear\n            </Button>\n            <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n              Apply\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default FilterDrawer;\n","const isNullOrUndefined = (value: unknown): value is null | undefined => value == null;\n\nexport default isNullOrUndefined;","const isArray = <T>(value: unknown): value is T[] => Array.isArray(value);\n\nexport default isArray;","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nconst isObject = <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n\n export default isObject;\n ","import { EmptyObject } from 'types/resolvers';\nimport isObject from './isObject';\n\nconst isEmptyObject = (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n\nexport default isEmptyObject;","import DelayedLoader from '../DelayedLoader';\nimport FilterDrawer from './FilterDrawer';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n  } from 'react';\nimport {\n  // makeStyles,\n  // createStyles,\n  TableContainer,\n  Table as MuiTable,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  TablePagination,\n  Toolbar,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport isEmptyObject from 'utils/isEmptyObject';\n\nexport declare type CompareFn<T> = ((a: T, b: T, sortOrder?: 'ascend' | 'descend') => number);\n\nconst TableLoaderContainer = styled.div`\n  height: 4px;\n`\n\nconst TableHeadCellStyles = css`\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n`;\n\nconst TableCellStyles = css`\n  padding: 10px 5px;\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n  font-size: 14px;\n`;\n\nconst TableRowClickableStyles = css`\n  cursor: pointer;\n  &:hover {\n    td {\n      background-color: rgba(0, 0, 0, 0.04);\n    }\n  }\n`;\n\nconst TableHeadCellInnerStyles = css`\n  padding: 10px 5px;\n  width: 100%;\n  color: #777;\n  font-weight: normal;\n  display: inline-flex;\n  align-items: center;\n  flex-direction: inherit;\n  justify-content: flex-start;\n`;\n\nexport interface ColumnProps<T> {\n  title?: React.ReactNode;\n  dataIndex: keyof T;\n  render?: (value: any, record: T, index: number) => React.ReactNode;\n  align?: 'left' | 'right' | 'center';\n  // filters?: ColumnFilterItem[];\n  // onFilter?: (value: any, record: T) => boolean;\n  // filterMultiple?: boolean;\n  // filterDropdown?: React.ReactNode | ((props: Object) => React.ReactNode);\n  // filterDropdownVisible?: boolean;\n  // onFilterDropdownVisibleChange?: (visible: boolean) => void;\n  sortable?: boolean;\n  // sorter?: boolean | CompareFn<T>;\n  // defaultSortOrder?: 'ascend' | 'descend';\n  // colSpan?: number;\n  width?: string | number;\n  className?: string;\n  // fixed?: boolean | ('left' | 'right');\n  // filterIcon?: React.ReactNode;\n  // filteredValue?: any[];\n  filterComponent?: React.ReactNode;\n  // sortOrder?: SortOrder;\n  // children?: ColumnProps<T>[];\n  // onCellClick?: (record: T, event: any) => void;\n  // onCell?: (record: T) => any;\n  // onHeaderCell?: (props: ColumnProps<T>) => any;\n}\n\nexport declare type SortOrder = 'descend' | 'ascend';\n\nexport interface ListRequest<T> {\n  sort?: SortState<T>\n  // sortField?: string;\n  // sortOrder?: SortOrder;\n  filters?: FilterState<T>;\n  pageSize: number;\n  pageNumber: number;\n}\n\nexport const defaultListRequest: ListRequest<any> = {\n  pageNumber: 1,\n  pageSize: 1000,\n};\n\n\nexport interface ListItems<I extends object> {\n  isLoading: boolean;\n  items: I[];\n  hasRequested?: boolean;\n  totalCount: number;\n}\n\nexport interface PaginationProps {\n  total: number;\n  current: number;\n  pageSize: number;\n  // defaultCurrent?: number;\n  // defaultPageSize?: number;\n  // onChange?: (page: number, pageSize?: number) => void;\n  // hideOnSinglePage?: boolean;\n  // showSizeChanger?: boolean;\n  // pageSizeOptions?: string[];\n  // onShowSizeChange?: (current: number, size: number) => void;\n  // showQuickJumper?: boolean;\n  // showTotal?: (total: number, range: [number, number]) => React.ReactNode;\n  // size?: string;\n  // simple?: boolean;\n  // style?: CSSProperties;\n  // locale?: Object;\n  // className?: string;\n  // prefixCls?: string;\n  // selectPrefixCls?: string;\n  // itemRender?: (page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next') => React.ReactNode;\n  // role?: string;\n}\n\nexport interface SorterResult<T> {\n  column: ColumnProps<T>;\n  order: SortOrder;\n  field: string;\n  columnKey: string;\n}\n\nexport type SortState<T> = Partial<Record<keyof T, SortOrder>>;\nexport type FilterState<T> = Partial<Record<keyof T, string>>;\nexport type FilterKey<T> = keyof T;\n\nexport const defaultPaginationState: PaginationProps = {\n  total: 0,\n  current: 1,\n  pageSize: 10,\n}\nexport const defaultTableState: TableState<any> = {\n  pagination: defaultPaginationState,\n  filters: {},\n  sort: {}\n}\n\nexport interface TableState<T> {\n  pagination: PaginationProps;\n  filters: FilterState<T>;\n  sort: SortState<T>;\n};\n\nexport interface TableProps<T extends object> {\n  // localStorageStateKey: string;\n  height?: number;\n  frozenHeader?: boolean;\n  columns: ColumnProps<T>[];\n  data?: T[];\n  filterable?: boolean;\n  sort?: SortState<T>;\n  filters?: FilterState<T>;\n  isLoading?: boolean;\n  pagination?: PaginationProps;\n  onPaginationChange?: (paginationState: PaginationProps) => void;\n  onFilterChange?: (filterState: FilterState<T>) => void;\n  onSortChange?: (sortState: SortState<T>) => void;\n  onRowClick?: (record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => void;\n  rowClassName?: (record: T) => string;\n  onClearFilters?: () => void; \n  rowsPerPageOptions?: Array<number | { value: number; label: string }>\n  title?: string;\n  topic?: string;\n}\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n    // tableContainer: {\n    //   position: relative\n    // },\n    // tableLoader: {\n    //   // height: '4px',\n    // },\n    // tableToolbar: {\n      // paddingRight: theme.spacing(1),\n    // },\n    // tableTitle: {\n      // flex: '1 1 100%',\n      // margin: 0,\n    // },\n    // tableHeadCell: {\n      // padding: 0,\n      // textTransform: 'uppercase',\n      // backgroundColor: '#f2f2f2',\n      // fontSize: '10px',\n      // color: '#111',\n      // fontWeight: 'bold',\n    // },\n    // tableHeadCellInner: {\n      // padding: '6px 10px',\n      // width: '100%',\n      // display: 'inline-flex',\n      // alignItems: 'center',\n      // flexDirection: 'inherit',\n      // justifyContent: 'flex-start',\n    // },\n    // tableHeadCellSortable: {\n      // '&:hover': {\n      //   cursor: 'pointer',\n      //   backgroundColor: '#ddd',\n      // }\n    // },\n    // tableRowClickable: {\n      // cursor: 'pointer',\n      // '&:hover > td': {\n      //   backgroundColor: '#e7f6ff',\n      // }\n    // },\n//   }),\n// );\n\nexport function Table<T extends object>(props: TableProps<T>): React.ReactElement {\n  const {\n    // localStorageStateKey,\n    frozenHeader,\n    height,\n    columns,\n    data,\n    onPaginationChange,\n    onSortChange,\n    onRowClick,\n    pagination,\n    sort,\n    filters,\n    filterable,\n    isLoading,\n    rowsPerPageOptions = [10, 15, 20, 25],\n    title,\n    topic,\n    onClearFilters,\n    // onClick,\n  } = props\n\n  // const classes = useStyles()\n  // const initialSortState = columns.map(column => )\n  const [sortState, setSortState] = useState<SortState<T>>(sort || {});\n  // const [filterState, setFilterState] = useState<FilterState<T>>(filters || {});\n  const [paginationState, setPaginationState] = useState<PaginationProps>(pagination || defaultPaginationState);\n  const [filtersDrawerOpen, setFiltersDrawerOpen]= useState(false);\n\n  useEffect(() => {\n    if (pagination) {\n      setPaginationState(pagination)\n    }\n  }, [pagination])\n\n  const handleChangePage = useCallback((_evt: unknown, newPage: number) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      current: newPage + 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState)\n  }, [paginationState, onPaginationChange]);\n\n  const handleChangeRowsPerPage = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      pageSize: +evt.target.value,\n      current: 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState);\n  }, [paginationState, onPaginationChange]);;\n\n  const handleRowClick = useCallback((record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n    if (onRowClick) {\n      onRowClick(record, evt);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick]);\n\n  const handleFilterClick = () => {\n    setFiltersDrawerOpen(true);\n  };\n\n  const rowClassName = useMemo(() => {\n    return !!onRowClick ? TableRowClickableStyles : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick])\n\n  const tableHeaders = useMemo(() => (\n    <TableRow>\n      {columns.map((column, index) => {\n        const columnSortState = sortState[column.dataIndex];\n        const columnDataIndex = column.dataIndex;\n        return (\n          <TableCell\n            classes={{\n              root: TableHeadCellStyles,\n            }}\n            // className={clsx(\n            //   // classes.tableHeadCell,\n            //   {[classes.tableHeadCellSortable]: column.sortable},\n            // )}\n            width={column.width}\n            key={index}\n          >\n            {\n              column.sortable ?\n              <TableSortLabel\n                className={TableHeadCellInnerStyles}\n                active={!!columnSortState}\n                direction={columnSortState ? columnSortState === 'descend' ? 'desc' : 'asc' : undefined}\n                onClick={() => {\n                  let newSortState: SortState<T> = {};\n                  if (columnSortState !== 'descend') {\n                    newSortState = {\n                      [columnDataIndex]: !columnSortState ? 'ascend' : 'descend',\n                    } as SortState<T>;\n                  }\n                  setSortState(newSortState)\n                  onSortChange && onSortChange(newSortState)\n                }}\n              >\n                {column.title}\n              </TableSortLabel> :\n              <span className={TableHeadCellInnerStyles}>{column.title}</span>\n            }\n          </TableCell>\n          )\n        }\n      )}\n    </TableRow>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [columns, onSortChange, sortState]);\n\n  const rowCells = useMemo(\n    () =>\n      data?.map((row: T, i) => {\n        return (\n          <TableRow\n            key={i}\n            onClick={(evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n              handleRowClick(row, evt);\n            }}\n            className={rowClassName}\n          >\n            {columns.map((column, index) => \n              <TableCell className={TableCellStyles} key={index}>\n                {column.render ? column.render(((row as any)[column.dataIndex]), row, index) : ((row as any)[column.dataIndex])}\n              </TableCell>\n            )}\n          </TableRow>\n        )\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columns, data, handleRowClick, rowClassName]\n  );\n\n  const filterComponents = useMemo(\n    () => (\n      columns.map((column, index) => (\n        column.filterComponent &&\n        <React.Fragment key={index}>{column.filterComponent}</React.Fragment>\n      ))\n    ),\n    [columns],\n  )\n\n  const hasFilters = useMemo(\n    () => !isEmptyObject(filters),\n    [filters],\n  )\n\n  return (\n    <>\n      {\n        (title || filterable) &&\n        <Toolbar variant=\"dense\">\n          <h2>{title}</h2>\n          {\n            filterable &&\n            <Tooltip title=\"Filter\">\n              <IconButton\n                onClick={handleFilterClick}\n                aria-label=\"filter list\"\n                color={hasFilters ? \"primary\" : undefined}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        </Toolbar>\n      }\n      <TableLoaderContainer>{ isLoading && <DelayedLoader />}</TableLoaderContainer>\n      <TableContainer style={{ maxHeight: height }}>\n        <MuiTable stickyHeader={frozenHeader}>\n          <TableHead>{tableHeaders}</TableHead>\n          <TableBody>\n            {rowCells}\n          </TableBody>\n        </MuiTable>\n      </TableContainer>\n      {\n        (!!pagination) &&\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          count={pagination.total}\n          rowsPerPage={pagination.pageSize}\n          page={pagination.current - 1}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      }\n      {\n        (filterable && onClearFilters) &&\n        <FilterDrawer\n          filteredCount={pagination?.total || 0}\n          topicName={topic}\n          isOpen={filtersDrawerOpen}\n          onClose={() => setFiltersDrawerOpen(false)}\n          onClearFilters={onClearFilters}\n        >\n          {filterComponents}\n        </FilterDrawer>\n      }\n    </>\n  )\n}\n","\nimport PaddedContainer from 'components/PaddedContainer'\nimport { ColumnProps, Table } from 'components/table/Table'\nimport Card from 'components/Card'\nimport React from 'react'\nimport Account from 'types/Account';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport { Fab } from '@material-ui/core';\nimport { MdAdd } from 'react-icons/md';\nimport { useHistory } from 'react-router';\nimport { AccountTypeLabels } from 'types/AccountType';\nimport LazyDialog from 'components/LazyDialog';\n\nconst NewAccountDialog = React.lazy(() => import('components/organisms/NewAccountDialog'))\n\nconst Img = styled.img`\n  width: 48px;\n  vertical-align: bottom;\n`;\n\nconst columns: ColumnProps<Account>[] = [\n  {\n    title: '',\n    dataIndex: 'avatar',\n    width: 100,\n    render: (value, record) => <Img src={`/avatars/${value}`} alt={record.name} />\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    width: 200,\n    render: (value, record) => AccountTypeLabels.get(value)\n  },\n];\n\nconst NewButtonStyle = css`\n  font-size: 2em;\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`;\n\nconst AccountsPage = () => {\n  const { push } = useHistory();\n  const [isNewAccountModalOpen, setIsNewAccountModalOpen] = React.useState(false);\n\n  const handleRowClick = (row: Account) => {\n    push(`/accounts/${row.id}`);\n  };\n\n  const onNewButtonClick = () => {\n    setIsNewAccountModalOpen(true);\n  }\n\n  const onNewAccountModalClose = () => {\n    setIsNewAccountModalOpen(false);\n  }\n\n  const onNewAccountModalOK = () => {\n    setIsNewAccountModalOpen(false);\n    push(`/accounts/4`);\n  }\n\n  return (\n    <>\n      <PaddedContainer>\n        <Card title=\"Accounts\">\n          <Table<Account>\n            height={720}\n            frozenHeader\n            // localStorageStateKey='client'\n            // data={data?.items}\n            data={[\n              {\n                id: 1,\n                avatar: 'marvel.png',\n                name: 'Marvel Cinematic Universe',\n                type: 1,\n              },\n              {\n                id: 2,\n                avatar: 'amc.jpg',\n                name: 'Breaking Bad',\n                type: 1,\n              },\n              {\n                id: 3,\n                avatar: 'black-noir.jpg',\n                name: 'The Boys',\n                type: 3,\n              }\n            ]}\n            columns={columns}\n            // sort={sortState}\n            // filters={filterState}\n            // pagination={paginationState}\n            onRowClick={handleRowClick}\n            // onPaginationChange={setPaginationState}\n            // onSortChange={setSortState}\n            // onFilterChange={setFilterState}\n          />\n        </Card>\n      </PaddedContainer>\n      <LazyDialog isOpen={isNewAccountModalOpen}>\n        <NewAccountDialog\n          isOpen={isNewAccountModalOpen}\n          onClose={onNewAccountModalClose}\n          onSubmit={onNewAccountModalOK}\n        />\n      </LazyDialog>\n      <Fab aria-label=\"add\" color=\"primary\" className={NewButtonStyle} onClick={onNewButtonClick}>\n        <MdAdd />\n      </Fab>\n    </>\n  );\n}\n\nexport default AccountsPage\n"],"sourceRoot":""}