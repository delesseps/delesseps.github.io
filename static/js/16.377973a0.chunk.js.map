{"version":3,"sources":["types/Country.ts","utils/isArray.ts","components/LazyDialog.tsx","utils/businessIdentifier.ts","utils/isNullOrUndefined.ts","types/EntityType.ts","types/AbrEntityType.ts","components/table/FilterDrawer.tsx","utils/isObject.ts","utils/isEmptyObject.ts","components/table/TotalsFooter.tsx","components/table/Table.tsx","utils/number.ts","../node_modules/@material-ui/core/Dialog/Dialog.js","state/AccountTradingEntityState.ts","types/TrustType.ts","components/form/Switch.tsx","pages/accounts/Customers.tsx","../node_modules/@material-ui/core/internal/SwitchBase.js","../node_modules/@material-ui/core/Switch/Switch.js"],"names":["Country","CountryLabels","Map","AU","NZ","isArray","value","Array","LazyDialog","isOpen","children","useState","isOpenState","setOpenState","useEffect","timeoutId","setTimeout","clearTimeout","Suspense","fallback","open","nonDigits","formatAbnAcn","sanitizedValue","replace","sanitizeAbnAcn","length","formatAbn","formatAcn","formatBusinessNumber","incorporationCountry","formatCompanyNumber","slice","isNullOrUndefined","EntityType","EntityTypeLabels","None","Individual","Partnership","Company","Trust","AbrEntityType","AustralianPrivateCompany","AustralianPublicCompany","CorporateUnitTrust","DiscretionaryInvestmentTrust","DiscretionaryTradingTrust","FamilyPartnership","FixedTrust","FixedUnitTrust","HybridTrust","IndividualSoleTrader","OtherTrust","SelfManagedSuperannuationFund","useStyles","makeStyles","theme","createStyles","filterDrawer","filterHeading","padding","spacing","margin","borderBottom","borderBottomColor","palette","grey","filters","minHeight","filterDrawerContent","minWidth","display","height","gridTemplateRows","filterDrawerBackdrop","background","filteredCount","fontSize","color","marginLeft","filterFooter","borderTop","borderTopColor","FilterDrawer","onClose","onClearFilters","topicName","classes","handleClear","useCallback","evt","handleApply","Drawer","anchor","className","ModalProps","BackdropProps","toLowerCase","DialogActions","Button","size","onClick","variant","isObject","isObjectType","Date","isEmptyObject","Object","keys","TotalsFooter","data","columns","paddedCells","filteredItems","totalsItems","columnTotals","useMemo","map","column","total","showTotal","reduce","item","Decimal","dataIndex","plus","toNumber","undefined","TableFooter","TableRow","columnTotal","index","TableCell","cx","TableCellStyles","PaddedCellStyles","AlignRightCellStyles","align","totalRender","TableLoaderContainer","styled","div","TableHeadCellStyles","css","AlignRightHeadStyles","TableRowClickableStyles","TableHeadCellInnerStyles","defaultPaginationState","current","pageSize","Table","props","frozenHeader","onPaginationChange","onSortChange","onRowClick","pagination","sort","filterable","isLoading","rowsPerPageOptions","title","topic","totalsFooter","sortState","setSortState","paginationState","setPaginationState","filtersDrawerOpen","setFiltersDrawerOpen","handleChangePage","_evt","newPage","newPaginationState","handleChangeRowsPerPage","target","handleRowClick","record","rowClassName","tableHeaders","columnSortState","columnDataIndex","root","width","sortable","TableSortLabel","active","direction","newSortState","rowCells","row","i","render","filterComponents","filterComponent","Fragment","hasFilters","Toolbar","Tooltip","IconButton","aria-label","DelayedLoader","TableContainer","style","maxHeight","stickyHeader","TableHead","TableBody","TablePagination","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","injectThousandsSeparator","formatDecimal","formatThousands","decimals","places","formatted","toFixed","formatMoney","formatPerc","formatInteger","Math","round","toString","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","ref","disableBackdropClick","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","PaperComponent","Paper","PaperProps","scroll","TransitionComponent","Fade","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutPropertiesLoose","backdropClick","Modal","_extends","clsx","BackdropComponent","Backdrop","closeAfterTransition","event","appear","in","timeout","role","container","capitalize","onMouseDown","currentTarget","elevation","paper","String","paperFullScreen","paperFullWidth","withStyles","position","scrollPaper","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","outline","boxShadow","paperScrollPaper","flexDirection","paperScrollBody","paperWidthFalse","paperWidthXs","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","name","accountTradingEntityState","atom","key","default","TrustType","TrustTypeLabels","SwitchBaseStyles","TrackStyles","CheckedTrackStyles","Switch","switchBase","track","checked","AddTradingEntityDialog","lazy","CheckApprovedIcon","span","id","tradingEntity","businessNumber","mainName","entityType","tradingCountry","entity","legalName","trustType","trustees","companyNumber","grossDebt","disapproved","fundingLimit","insuranceLimit","concentrationPerc","advanceRate","noaSent","nominated","approved","tradingName","businessNames","Customers","history","useHistory","accountFromRoute","useParams","accountId","filter","customer","nominatedList","setNominatedList","isModalOpen","setIsModalOpen","useRecoilState","accountTradingEntity","onFindBusinessClick","onChange","customerId","indexOf","concat","onNominateChange","push","onSubmit","tradingJurisdiction","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","disabled","icon","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","useControlled","controlled","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","component","input","newChecked","cursor","opacity","top","left","zIndex","edge","thumb","edgeStart","edgeEnd","overflow","boxSizing","flexShrink","colorAdjust","marginRight","mode","transition","transitions","create","shortest","transform","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","shadows"],"mappings":"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","file":"static/js/16.377973a0.chunk.js","sourcesContent":["export enum Country {\n  None = 0,\n  AU = 1,\n  NZ = 3,\n}\n\nexport const CountryLabels = new Map<Country, string>([\n  [Country.AU, 'Australia'],\n  [Country.NZ, 'New Zealand'],\n]);\n\nexport default Country;\n","const isArray = <T>(value: unknown): value is T[] => Array.isArray(value);\n\nexport default isArray;","\nimport { Dialog } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nexport interface LazyDialogProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n}\n\nconst dialogCloseAnimationDuration = 500;\n\nfunction LazyDialog({ isOpen, children }: LazyDialogProps) {\n  const [isOpenState, setOpenState] = useState(isOpen);\n  // Defer close of the dialog for the animation to complete\n  useEffect(\n    () => {\n      let timeoutId: NodeJS.Timeout;\n      if (isOpenState !== isOpen) {\n        if (!isOpen) {\n          timeoutId = setTimeout(() => {\n            setOpenState(isOpen);\n          }, dialogCloseAnimationDuration);\n        } else {\n          setOpenState(isOpen);\n        }\n      }\n      return () => clearTimeout(timeoutId);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isOpen],\n  );\n\n  return (\n    <React.Suspense fallback={<Dialog open />}>\n      {isOpenState && children}\n    </React.Suspense>\n  )\n}\n\nexport default LazyDialog;\n","import { Country } from \"types/Country\";\n\nconst nonDigits = /[^\\d]/g;\n\nconst sanitizeAbnAcn = (value: string | null | undefined): string =>\n  value ? value.replace(nonDigits, '') : '';\n\nconst formatAbnAcn = (value: string | null | undefined): string => {\n  if (!value) {\n    return '';\n  }\n  const sanitizedValue = sanitizeAbnAcn(value);\n\n  if (sanitizedValue.length === 11) {\n    return formatAbn(sanitizedValue);\n  }\n\n  if (sanitizedValue.length === 9) {\n    return formatAcn(sanitizedValue);\n  }\n\n  return value;\n};\n\nexport const formatBusinessNumber = (value: string | null | undefined, incorporationCountry: Country | undefined) =>\n  incorporationCountry === Country.AU ? formatAbnAcn(value) : value;\n\nexport const formatCompanyNumber = (value: string | null | undefined, incorporationCountry: Country | undefined) =>\n  incorporationCountry === Country.AU ? formatAbnAcn(value) : value;\n\nconst formatAbn = (value: string): string => {\n  return `${value.slice(0, 2)} ${value.slice(2, 5)} ${value.slice(5, 8)} ${value.slice(8, 11)}`;\n};\n\nconst formatAcn = (value: string): string => {\n  return `${value.slice(0, 3)} ${value.slice(3, 6)} ${value.slice(6, 9)}`;\n};","const isNullOrUndefined = (value: unknown): value is null | undefined => value == null;\n\nexport default isNullOrUndefined;","import AbrEntityType from './AbrEntityType';\n\nenum EntityType {\n  None = 0,\n  Individual = 1,\n  Partnership = 3,\n  Company = 5,\n  Trust = 7,\n}\n\nexport const EntityTypeLabels = new Map<EntityType, string>([\n  [EntityType.None, ''],\n  [EntityType.Individual, 'Individual'],\n  [EntityType.Partnership, 'Partnership'],\n  [EntityType.Company, 'Company'],\n  [EntityType.Trust, 'Trust'],\n]);\n\nexport const EntityTypeAbrEntityTypeMapping = new Map<AbrEntityType, EntityType>([\n  [AbrEntityType.None, EntityType.None],\n  [AbrEntityType.AustralianPrivateCompany, EntityType.Company],\n  [AbrEntityType.AustralianPublicCompany, EntityType.Company],\n  [AbrEntityType.CorporateUnitTrust, EntityType.Trust],\n  [AbrEntityType.DiscretionaryInvestmentTrust, EntityType.Trust],\n  [AbrEntityType.DiscretionaryTradingTrust, EntityType.Trust],\n  [AbrEntityType.FamilyPartnership, EntityType.Partnership],\n  [AbrEntityType.FixedTrust, EntityType.Trust],\n  [AbrEntityType.FixedUnitTrust, EntityType.Trust],\n  [AbrEntityType.HybridTrust, EntityType.Trust],\n  [AbrEntityType.IndividualSoleTrader, EntityType.Individual],\n  [AbrEntityType.OtherTrust, EntityType.Trust],\n  [AbrEntityType.Partnership, EntityType.Partnership],\n  [AbrEntityType.SelfManagedSuperannuationFund, EntityType.Trust],\n]);\n\nexport default EntityType;\n","enum AbrEntityType {\n  None = '',\n  AustralianPrivateCompany = 'PRV',\n  AustralianPublicCompany = 'PUB',\n  CorporateUnitTrust = 'CUT',\n  DiscretionaryInvestmentTrust = 'DIT',\n  DiscretionaryTradingTrust = 'DTT',\n  FamilyPartnership = 'FPT',\n  FixedTrust = 'FXT',\n  FixedUnitTrust = 'FUT',\n  HybridTrust = 'HYT',\n  IndividualSoleTrader = 'IND',\n  OtherTrust = 'TRT',\n  Partnership = 'PTR',\n  SelfManagedSuperannuationFund = 'SMF',\n}\n\nexport default AbrEntityType;\n","import React, { PropsWithChildren, useCallback } from 'react';\nimport {\n  Button,\n  createStyles,\n  DialogActions,\n  Drawer,\n  // Grid,\n  makeStyles,\n  ModalProps\n  } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterDrawer: {\n    },\n    filterHeading: {\n      padding: theme.spacing(2),\n      margin: 0,\n      borderBottom: '1px solid',\n      borderBottomColor: theme.palette.grey[200]\n    },\n    filters: {\n      padding: theme.spacing(2),\n      minHeight: '100%',\n    },\n    filterDrawerContent: {\n      minWidth: 250,\n      display: 'grid',\n      height: '100%',\n      gridTemplateRows: 'auto 1fr auto',\n    },\n    filterDrawerBackdrop: {\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    filteredCount: {\n      fontSize: '0.8em',\n      color: theme.palette.grey[400],\n      marginLeft: theme.spacing(1)\n    },\n    filterFooter: {\n      borderTop: '1px solid',\n      borderTopColor: theme.palette.grey[200]\n    },\n  }),\n);\n\ninterface FilterDrawerProps {\n  isOpen: boolean;\n  filteredCount: number;\n  topicName?: string;\n  isLoading?: boolean;\n  onClose: ModalProps['onClose'];\n  onClearFilters: () => void;\n}\n\nconst FilterDrawer: React.FC<PropsWithChildren<FilterDrawerProps>> = ({\n  isOpen,\n  onClose,\n  onClearFilters,\n  children,\n  topicName,\n  // isLoading,\n  filteredCount,\n}) => {\n  const classes = useStyles()\n\n  const handleClear = useCallback((evt: any) => {\n    if (onClearFilters) {\n      onClearFilters();\n    }\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClearFilters, onClose]);\n\n  const handleApply = useCallback((evt: any) => {\n    if (onClose) {\n      onClose(evt, 'escapeKeyDown');\n    }\n  }, [onClose]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.filterDrawer}\n      open={isOpen}\n      onClose={onClose}\n      // transitionDuration={100}\n      ModalProps={{\n        BackdropProps: {\n          className: classes.filterDrawerBackdrop\n        }\n      }}\n    >\n      <div className={classes.filterDrawerContent}>\n        <h2 className={classes.filterHeading}>Filter <span className={classes.filteredCount}>{filteredCount} {topicName?.toLowerCase()}</span></h2>\n        <div className={classes.filters}>{children}</div>\n        <div className={classes.filterFooter}>\n          <DialogActions>\n            {/* <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <Button size=\"large\" autoFocus color=\"primary\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Grid>\n              <Grid item xs={6} className>\n                <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n                  Apply\n                </Button>\n              </Grid>\n            </Grid> */}\n            <Button size=\"large\" color=\"primary\" onClick={handleClear}>\n              Clear\n            </Button>\n            <Button size=\"large\" onClick={handleApply} variant=\"contained\" color=\"primary\">\n              Apply\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default FilterDrawer;\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nconst isObject = <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n\n export default isObject;\n ","import { EmptyObject } from 'types/resolvers';\nimport isObject from './isObject';\n\nconst isEmptyObject = (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n\nexport default isEmptyObject;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { AlignRightCellStyles, ColumnProps, PaddedCellStyles, TableCellStyles } from './Table';\nimport Decimal from \"decimal.js-light\";\nimport { TableCell, TableFooter, TableRow } from '@material-ui/core';\nimport { cx } from 'emotion';\n\nexport interface TotalColumnProps<T> extends ColumnProps<T> {\n  showTotal?: boolean;\n  totalRender?: (value: number, index: number) => React.ReactNode;\n}\n\ninterface TotalsFooterProps<T> {\n  data: T[];\n  paddedCells?: boolean;\n  columns: TotalColumnProps<T>[];\n  filteredItems?: T[];\n}\n\n// tslint:disable-next-line:function-name\nexport default function TotalsFooter<T extends object>({\n  data,\n  columns,\n  paddedCells,\n  filteredItems,\n}: TotalsFooterProps<T>) {\n  const isFiltered = !!filteredItems && filteredItems.length < data.length;\n  const totalsItems = isFiltered ? filteredItems : data;\n  const columnTotals = useMemo(\n    () => columns.map((column) => {\n      return {\n        ...column,\n        total: column.showTotal ?\n          totalsItems?.reduce(\n            (total: number, item: any) =>\n              new Decimal((item[column.dataIndex] || 0) as number).plus(total).toNumber(),\n            0,\n          ) as number : undefined,\n      };\n    }),\n    [columns, totalsItems],\n  );\n\n  return (\n    <TableFooter>\n      <TableRow>\n        {\n          columnTotals.map((columnTotal, index) =>\n            <TableCell\n              className={cx(\n                TableCellStyles,\n                {[PaddedCellStyles]: paddedCells},\n                {[AlignRightCellStyles]: columnTotal.align === 'right'}\n              )}\n              key={index}>\n            {\n              index === 0 ? `Total: ${totalsItems?.length}`\n              :\n              columnTotal.total ?\n                columnTotal.totalRender ?\n                  columnTotal.totalRender(columnTotal.total, index)\n                : columnTotal.total\n              :\n              ' '\n            }\n            </TableCell>\n          )\n        }\n      </TableRow>\n    </TableFooter>\n  );\n}\n","import DelayedLoader from '../DelayedLoader';\nimport FilterDrawer from './FilterDrawer';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n  } from 'react';\nimport {\n  // makeStyles,\n  // createStyles,\n  TableContainer,\n  Table as MuiTable,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  TablePagination,\n  Toolbar,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { css, cx } from 'emotion';\nimport isEmptyObject from 'utils/isEmptyObject';\nimport TotalsFooter from './TotalsFooter';\n\nexport declare type CompareFn<T> = ((a: T, b: T, sortOrder?: 'ascend' | 'descend') => number);\n\nconst TableLoaderContainer = styled.div`\n  height: 4px;\n`\n\nconst TableHeadCellStyles = css`\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n  vertical-align: top;\n`;\n\nexport const TableCellStyles = css`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid rgba(0,0,0,0.12);\n  font-size: 14px;\n`;\n\nexport const PaddedCellStyles = css`\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n\nexport const AlignRightCellStyles = css`\n  text-align: right;\n`;\n\nconst AlignRightHeadStyles = css`\n  text-align: right;\n  display: block;\n`;\n\nconst TableRowClickableStyles = css`\n  cursor: pointer;\n  &:hover {\n    td {\n      background-color: rgba(0, 0, 0, 0.04);\n    }\n  }\n`;\n\nconst TableHeadCellInnerStyles = css`\n  padding: 10px 0;\n  width: 100%;\n  color: #777;\n  font-weight: normal;\n  display: inline-flex;\n  align-items: center;\n  flex-direction: inherit;\n  justify-content: flex-start;\n  font-size: 11px;\n`;\n\nexport interface ColumnProps<T> {\n  title?: React.ReactNode;\n  dataIndex: keyof T;\n  render?: (value: any, record: T, index: number) => React.ReactNode;\n  align?: 'left' | 'right' | 'center';\n  // filters?: ColumnFilterItem[];\n  // onFilter?: (value: any, record: T) => boolean;\n  // filterMultiple?: boolean;\n  // filterDropdown?: React.ReactNode | ((props: Object) => React.ReactNode);\n  // filterDropdownVisible?: boolean;\n  // onFilterDropdownVisibleChange?: (visible: boolean) => void;\n  sortable?: boolean;\n  // sorter?: boolean | CompareFn<T>;\n  // defaultSortOrder?: 'ascend' | 'descend';\n  // colSpan?: number;\n  width?: string | number;\n  className?: string;\n  // fixed?: boolean | ('left' | 'right');\n  // filterIcon?: React.ReactNode;\n  // filteredValue?: any[];\n  filterComponent?: React.ReactNode;\n  // sortOrder?: SortOrder;\n  // children?: ColumnProps<T>[];\n  // onCellClick?: (record: T, event: any) => void;\n  // onCell?: (record: T) => any;\n  // onHeaderCell?: (props: ColumnProps<T>) => any;\n}\n\nexport declare type SortOrder = 'descend' | 'ascend';\n\nexport interface ListRequest<T> {\n  sort?: SortState<T>\n  // sortField?: string;\n  // sortOrder?: SortOrder;\n  filters?: FilterState<T>;\n  pageSize: number;\n  pageNumber: number;\n}\n\nexport const defaultListRequest: ListRequest<any> = {\n  pageNumber: 1,\n  pageSize: 1000,\n};\n\n\nexport interface ListItems<I extends object> {\n  isLoading: boolean;\n  items: I[];\n  hasRequested?: boolean;\n  totalCount: number;\n}\n\nexport interface PaginationProps {\n  total: number;\n  current: number;\n  pageSize: number;\n  // defaultCurrent?: number;\n  // defaultPageSize?: number;\n  // onChange?: (page: number, pageSize?: number) => void;\n  // hideOnSinglePage?: boolean;\n  // showSizeChanger?: boolean;\n  // pageSizeOptions?: string[];\n  // onShowSizeChange?: (current: number, size: number) => void;\n  // showQuickJumper?: boolean;\n  // showTotal?: (total: number, range: [number, number]) => React.ReactNode;\n  // size?: string;\n  // simple?: boolean;\n  // style?: CSSProperties;\n  // locale?: Object;\n  // className?: string;\n  // prefixCls?: string;\n  // selectPrefixCls?: string;\n  // itemRender?: (page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next') => React.ReactNode;\n  // role?: string;\n}\n\nexport interface SorterResult<T> {\n  column: ColumnProps<T>;\n  order: SortOrder;\n  field: string;\n  columnKey: string;\n}\n\nexport type SortState<T> = Partial<Record<keyof T, SortOrder>>;\nexport type FilterState<T> = Partial<Record<keyof T, string>>;\nexport type FilterKey<T> = keyof T;\n\nexport const defaultPaginationState: PaginationProps = {\n  total: 0,\n  current: 1,\n  pageSize: 10,\n}\nexport const defaultTableState: TableState<any> = {\n  pagination: defaultPaginationState,\n  filters: {},\n  sort: {}\n}\n\nexport interface TableState<T> {\n  pagination: PaginationProps;\n  filters: FilterState<T>;\n  sort: SortState<T>;\n};\n\nexport interface TableProps<T extends object> {\n  // localStorageStateKey: string;\n  paddedCells?: boolean;\n  height?: number;\n  frozenHeader?: boolean;\n  columns: ColumnProps<T>[];\n  data?: T[];\n  filterable?: boolean;\n  totalsFooter?: boolean;\n  sort?: SortState<T>;\n  filters?: FilterState<T>;\n  isLoading?: boolean;\n  pagination?: PaginationProps;\n  onPaginationChange?: (paginationState: PaginationProps) => void;\n  onFilterChange?: (filterState: FilterState<T>) => void;\n  onSortChange?: (sortState: SortState<T>) => void;\n  onRowClick?: (record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => void;\n  rowClassName?: (record: T) => string;\n  onClearFilters?: () => void; \n  rowsPerPageOptions?: Array<number | { value: number; label: string }>\n  title?: string;\n  topic?: string;\n}\n\nexport function Table<T extends object>(props: TableProps<T>): React.ReactElement {\n  const {\n    // localStorageStateKey,\n    frozenHeader,\n    height,\n    columns,\n    data,\n    onPaginationChange,\n    onSortChange,\n    onRowClick,\n    pagination,\n    sort,\n    filters,\n    filterable,\n    isLoading,\n    rowsPerPageOptions = [10, 15, 20, 25],\n    title,\n    topic,\n    totalsFooter,\n    paddedCells,\n    onClearFilters,\n    // onClick,\n  } = props\n\n  // const classes = useStyles()\n  // const initialSortState = columns.map(column => )\n  const [sortState, setSortState] = useState<SortState<T>>(sort || {});\n  // const [filterState, setFilterState] = useState<FilterState<T>>(filters || {});\n  const [paginationState, setPaginationState] = useState<PaginationProps>(pagination || defaultPaginationState);\n  const [filtersDrawerOpen, setFiltersDrawerOpen]= useState(false);\n\n  useEffect(() => {\n    if (pagination) {\n      setPaginationState(pagination)\n    }\n  }, [pagination])\n\n  const handleChangePage = useCallback((_evt: unknown, newPage: number) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      current: newPage + 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState)\n  }, [paginationState, onPaginationChange]);\n\n  const handleChangeRowsPerPage = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const newPaginationState: PaginationProps = {\n      ...paginationState,\n      pageSize: +evt.target.value,\n      current: 1,\n    }\n    setPaginationState(newPaginationState);\n    onPaginationChange && onPaginationChange(newPaginationState);\n  }, [paginationState, onPaginationChange]);;\n\n  const handleRowClick = useCallback((record: T, evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n    if (onRowClick) {\n      onRowClick(record, evt);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick]);\n\n  const handleFilterClick = () => {\n    setFiltersDrawerOpen(true);\n  };\n\n  const rowClassName = useMemo(() => {\n    return !!onRowClick ? TableRowClickableStyles : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onRowClick])\n\n  const tableHeaders = useMemo(() => (\n    <TableRow>\n      {columns.map((column, index) => {\n        const columnSortState = sortState[column.dataIndex];\n        const columnDataIndex = column.dataIndex;\n        return (\n          <TableCell\n            classes={{\n              root: cx(\n                TableHeadCellStyles,\n                {[PaddedCellStyles]: paddedCells}\n              )\n            }}\n            // className={clsx(\n            //   // classes.tableHeadCell,\n            //   {[classes.tableHeadCellSortable]: column.sortable},\n            // )}\n            width={column.width}\n            key={index}\n          >\n            {\n              column.sortable ?\n              <TableSortLabel\n                className={cx(\n                  TableHeadCellInnerStyles,\n                  {[AlignRightHeadStyles]: column.align === 'right'}\n                )}\n                active={!!columnSortState}\n                direction={columnSortState ? columnSortState === 'descend' ? 'desc' : 'asc' : undefined}\n                onClick={() => {\n                  let newSortState: SortState<T> = {};\n                  if (columnSortState !== 'descend') {\n                    newSortState = {\n                      [columnDataIndex]: !columnSortState ? 'ascend' : 'descend',\n                    } as SortState<T>;\n                  }\n                  setSortState(newSortState)\n                  onSortChange && onSortChange(newSortState)\n                }}\n              >\n                {column.title}\n              </TableSortLabel> :\n              <span\n                className={cx(\n                  TableHeadCellInnerStyles,\n                  {[AlignRightHeadStyles]: column.align === 'right'}\n                )}\n              >\n                {column.title}\n              </span>\n            }\n          </TableCell>\n          )\n        }\n      )}\n    </TableRow>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [columns, onSortChange, sortState]);\n\n  const rowCells = useMemo(\n    () =>\n      data?.map((row: T, i) => {\n        return (\n          <TableRow\n            key={i}\n            onClick={(evt: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\n              handleRowClick(row, evt);\n            }}\n            className={rowClassName}\n          >\n            {columns.map((column, index) => \n              <TableCell\n                className={cx(\n                  TableCellStyles,\n                  {[PaddedCellStyles]: paddedCells},\n                  {[AlignRightCellStyles]: column.align === 'right'}\n                )}\n                key={index}\n              >\n                {column.render ? column.render(((row as any)[column.dataIndex]), row, index) : ((row as any)[column.dataIndex])}\n              </TableCell>\n            )}\n          </TableRow>\n        )\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columns, data, handleRowClick, rowClassName]\n  );\n\n  const filterComponents = useMemo(\n    () => (\n      columns.map((column, index) => (\n        column.filterComponent &&\n        <React.Fragment key={index}>{column.filterComponent}</React.Fragment>\n      ))\n    ),\n    [columns],\n  )\n\n  const hasFilters = useMemo(\n    () => !isEmptyObject(filters),\n    [filters],\n  )\n\n  return (\n    <>\n      {\n        (title || filterable) &&\n        <Toolbar variant=\"dense\">\n          <h2>{title}</h2>\n          {\n            filterable &&\n            <Tooltip title=\"Filter\">\n              <IconButton\n                onClick={handleFilterClick}\n                aria-label=\"filter list\"\n                color={hasFilters ? \"primary\" : undefined}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        </Toolbar>\n      }\n      <TableLoaderContainer>{ isLoading && <DelayedLoader />}</TableLoaderContainer>\n      <TableContainer style={{ maxHeight: height }}>\n        <MuiTable stickyHeader={frozenHeader}>\n          <TableHead>{tableHeaders}</TableHead>\n          <TableBody>\n            {rowCells}\n          </TableBody>\n          {\n            !!totalsFooter &&\n            <TotalsFooter\n              paddedCells={paddedCells}\n              data={data || []}\n              columns={columns}\n            />\n          }\n        </MuiTable>\n      </TableContainer>\n      {\n        (!!pagination) &&\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          count={pagination.total}\n          rowsPerPage={pagination.pageSize}\n          page={pagination.current - 1}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      }\n      {\n        (filterable && onClearFilters) &&\n        <FilterDrawer\n          filteredCount={pagination?.total || 0}\n          topicName={topic}\n          isOpen={filtersDrawerOpen}\n          onClose={() => setFiltersDrawerOpen(false)}\n          onClearFilters={onClearFilters}\n        >\n          {filterComponents}\n        </FilterDrawer>\n      }\n    </>\n  )\n}\n","import Decimal from \"decimal.js-light\";\n\nconst injectThousandsSeparator = (value: string) =>\n  value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nexport const formatDecimal = (value: number, formatThousands = true, decimals = true, places = 2): string => {\n  const formatted = new Decimal(value).toFixed(decimals ? places : undefined);\n  return formatThousands ? injectThousandsSeparator(formatted) : formatted;\n};\n\nexport const formatMoney = (value: number, places = 2): string => {\n  return `$${formatDecimal(value, true, true, places)}`;\n};\n\nexport const formatPerc = (value: number, places = 2): string => {\n  return `${formatDecimal(value, false, true, places)}%`;\n};\n\nexport const formatInteger = (value: number): string =>\n  injectThousandsSeparator(Math.round(value).toString());\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '@media print': {\n      // Use !important to override the Modal inline-style.\n      position: 'absolute !important'\n    }\n  },\n\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the container element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    '@media print': {\n      height: 'auto'\n    },\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    margin: 32,\n    position: 'relative',\n    overflowY: 'auto',\n    // Fix IE11 issue, to remove at some point.\n    '@media print': {\n      overflowY: 'visible',\n      boxShadow: 'none'\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=false`. */\n  paperWidthFalse: {\n    maxWidth: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  }\n});\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  const {\n    BackdropProps,\n    children,\n    classes,\n    className,\n    disableBackdropClick = false,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    onEscapeKeyDown,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import { atom } from 'recoil';\nimport TradingEntity from 'types/TradingEntity';\n\nexport const accountTradingEntityState = atom<TradingEntity | undefined>({\n  key: 'accountTradingEntityState',\n  default: undefined,\n});\n\n","import AbrEntityType from './AbrEntityType';\n\nenum TrustType {\n  None = 0,\n  FixedUnitTrust = 1,\n  FixedTrust = 3,\n  OtherTrust = 5,\n  CorporateUnitTrust = 7,\n  DiscretionaryTradingTrust = 9,\n  HybridTrust = 11,\n  SelfManagedSuperannuationFund = 13,\n  DiscretionaryInvestmentTrust = 15,\n}\n\nexport const TrustTypeFromAbrEntityType = new Map<AbrEntityType, TrustType>([\n  [AbrEntityType.None, TrustType.None],\n  [AbrEntityType.FixedUnitTrust, TrustType.FixedUnitTrust],\n  [AbrEntityType.FixedTrust, TrustType.FixedTrust],\n  [AbrEntityType.OtherTrust, TrustType.OtherTrust],\n  [AbrEntityType.CorporateUnitTrust, TrustType.CorporateUnitTrust],\n  [AbrEntityType.DiscretionaryTradingTrust, TrustType.DiscretionaryTradingTrust],\n  [AbrEntityType.DiscretionaryInvestmentTrust, TrustType.DiscretionaryInvestmentTrust],\n  [AbrEntityType.HybridTrust, TrustType.HybridTrust],\n  [AbrEntityType.SelfManagedSuperannuationFund, TrustType.SelfManagedSuperannuationFund],\n]);\n\nexport const TrustTypeLabels = new Map<TrustType, string>([\n  [TrustType.CorporateUnitTrust, 'Corporate Unit Trust'],\n  [TrustType.DiscretionaryInvestmentTrust, 'Discretionary Investment Trust'],\n  [TrustType.DiscretionaryTradingTrust, 'Discretionary Trading Trust'],\n  [TrustType.FixedTrust, 'Fixed Trust'],\n  [TrustType.FixedUnitTrust, 'Fixed Unit Trust'],\n  [TrustType.HybridTrust, 'Hybrid Trust'],\n  [TrustType.SelfManagedSuperannuationFund, 'Self Managed Super Fund'],\n  [TrustType.OtherTrust, 'Other Trust'],\n]);\n\nexport const isUnitTrustType = (trustType: TrustType): boolean => {\n  return trustType === TrustType.FixedUnitTrust ||\n    trustType === TrustType.CorporateUnitTrust;\n};\n\nexport default TrustType;\n","import React from 'react';\nimport MuiSwitch, { SwitchProps } from '@material-ui/core/Switch';\nimport { css } from 'emotion';\n\nconst SwitchBaseStyles = css`\n  color: #fff;\n`\n\nconst TrackStyles = css`\n  background-color: #aaa;\n`\n\nconst CheckedTrackStyles = css`\n  background-color: #555;\n`\n\nconst Switch = (props: SwitchProps) => {\n  return (\n    <MuiSwitch\n      {...props}\n      classes={{\n        switchBase: SwitchBaseStyles,\n        track: props.checked ? CheckedTrackStyles : TrackStyles,\n      }}\n    />\n  );\n};\n\nexport default Switch;\n","\nimport React, { useState } from 'react'\nimport CustomerListItem from 'types/CustomerListItem'\nimport EntityType from 'types/EntityType'\nimport { CompanyTrustee, Trust } from 'types/Trust'\nimport TrustType from 'types/TrustType'\nimport Company from 'types/Company'\nimport { Table } from 'components/table/Table'\nimport { formatBusinessNumber } from 'utils/businessIdentifier'\nimport { Button } from '@material-ui/core'\n// import StyledLink from 'components/StyledLink'\nimport { MdCheckCircle } from 'react-icons/md'\nimport styled from '@emotion/styled'\nimport { formatMoney, formatPerc } from 'utils/number'\nimport isNullOrUndefined from 'utils/isNullOrUndefined'\nimport LazyDialog from 'components/LazyDialog'\nimport TradingEntity from 'types/TradingEntity'\nimport Switch from 'components/form/Switch'\nimport { Country } from 'types/Country'\nimport { useRecoilState } from 'recoil'\nimport { accountTradingEntityState } from 'state/AccountTradingEntityState'\nimport { TotalColumnProps } from 'components/table/TotalsFooter'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst AddTradingEntityDialog = React.lazy(() => import('components/organisms/AddTradingEntityDialog'))\n\nconst CheckApprovedIcon = styled.span`\n  color: #20a220;\n  font-size: 22px;\n`;\n\nconst data: CustomerListItem[] = [\n  {\n    id: '1',\n    tradingEntity: {\n      businessNumber: '93 009 662 284',\n      mainName: 'The Trustee for the Kettleman Family Trust',\n      entityType: EntityType.Trust,\n      tradingCountry: Country.AU\n    },\n    entity: {\n      legalName: 'Kettleman Family Trust',\n      trustType: TrustType.DiscretionaryInvestmentTrust,\n      trustees: [\n        {\n          companyNumber: '005 137 851',\n          name: 'Kettleman Pty Ltd'\n        } as CompanyTrustee\n      ]\n    } as Trust,\n    grossDebt: 123456.78,\n    disapproved: 5432.1,\n    fundingLimit: 50000,\n    insuranceLimit: 40000,\n    concentrationPerc: 25,\n    advanceRate: 80,\n    noaSent: true,\n    nominated: true,\n    approved: true,\n    tradingName: 'Kettleman Pty Ltd'\n  },\n  {\n    id: '2',\n    tradingEntity: {\n      businessNumber: '61 624 709 753',\n      mainName: 'Lalo Pty Ltd',\n      entityType: EntityType.Company,\n      tradingCountry: Country.AU,\n      businessNames: [\n        'Lay Low'\n      ]\n    },\n    entity: {\n      name: 'Lalo Pty Ltd',\n      companyNumber: '624 709 753',\n    } as Company,\n    grossDebt: 3456.78,\n    disapproved: 789,\n    noaSent: false,\n    nominated: false,\n    approved: false,\n    tradingName: 'Lalo Pty Ltd',\n    insuranceLimit: 1.23,\n  },\n  {\n    id: '3',\n    noaSent: false,\n    nominated: false,\n    approved: false,\n    tradingName: 'Nacho Varga'\n  }\n]\n\nconst Customers = () => {\n  const history = useHistory();\n  const params = useParams();\n  const accountFromRoute: string = (params as any).accountId;\n\n  const [nominatedList, setNominatedList] = useState<string[]>(data.filter(customer => customer.nominated).map(customer => customer.id));\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [accountTradingEntity] = useRecoilState(accountTradingEntityState);\n\n  function onFindBusinessClick() {\n    setIsModalOpen(true);\n  }\n\n  const onModalClose = () => {\n    setIsModalOpen(false);\n  }\n\n  const onModalSubmit = (tradingEntity: TradingEntity) => {\n    setIsModalOpen(false);\n    // setTradingEntity(tradingEntity);\n  }\n\n  const onNominateChange = (customerId: string, checked: boolean) => {\n    if (checked) {\n      setNominatedList([...nominatedList, customerId]);\n    } else {\n      const index = nominatedList.indexOf(customerId);\n      setNominatedList((nominatedList.slice(0, index).concat(nominatedList.slice(index + 1))));\n    }\n  };\n\n  const handleRowClick = (row: CustomerListItem) => {\n    history.push(`/accounts/${accountFromRoute}/customers/${row.id}`);\n  };\n\n  return (\n    <React.Fragment>\n      <Table<CustomerListItem>\n        data={data}\n        paddedCells\n        totalsFooter\n        columns={[\n          {\n            title: 'Customer',\n            dataIndex: 'tradingName',\n            // render: (value, record) => <StyledLink to=\"/entities/companies/1\">{value}</StyledLink>\n          },\n          {\n            title: 'Business Number',\n            dataIndex: 'tradingEntity',\n            render: (value, record) => record.tradingEntity ? formatBusinessNumber(record.tradingEntity.businessNumber, record.tradingEntity.tradingCountry) : <Button onClick={onFindBusinessClick} size=\"small\" variant=\"outlined\">Find Business</Button>\n          },\n          {\n            title: 'Gross Debt',\n            align: 'right',\n            dataIndex: 'grossDebt',\n            render: (value, record) => !isNullOrUndefined(value) ? formatMoney(value) : '',\n            showTotal: true,\n            totalRender: (value) => formatMoney(value)\n          },\n          {\n            title: 'Disapproved',\n            align: 'right',\n            dataIndex: 'disapproved',\n            render: (value, record) => !isNullOrUndefined(value) ? formatMoney(value) : '',\n            showTotal: true,\n            totalRender: (value) => formatMoney(value)\n          },\n          {\n            title: 'Concentration',\n            align: 'right',\n            dataIndex: 'concentrationPerc',\n            render: (value, record) => !isNullOrUndefined(value) ? formatPerc(value, 0) : ''\n          },\n          {\n            title: 'Advance Rate',\n            align: 'right',\n            dataIndex: 'advanceRate',\n            render: (value, record) => !isNullOrUndefined(value) ? formatPerc(value, 0) : ''\n          },\n          {\n            title: 'Funding Limit',\n            align: 'right',\n            dataIndex: 'fundingLimit',\n            render: (value, record) => !isNullOrUndefined(value) ? formatMoney(value) : '',\n            showTotal: true,\n            totalRender: (value) => formatMoney(value)\n          },\n          {\n            title: 'Insurance Limit',\n            align: 'right',\n            dataIndex: 'insuranceLimit',\n            render: (value, record) => !isNullOrUndefined(value) ? formatMoney(value) : '',\n            showTotal: true,\n            totalRender: (value) => formatMoney(value)\n          },\n          {\n            title: 'Nominated',\n            align: 'right',\n            dataIndex: 'nominated',\n            render: (value, record) => record.tradingEntity ?\n            <Switch\n              onChange={(_evt, checked: boolean) => onNominateChange(record.id, checked)}\n              checked={nominatedList.indexOf(record.id) > -1}\n            /> : ''\n          },\n          {\n            title: 'Approved',\n            align: 'right',\n            dataIndex: 'approved',\n            render: (value, record) => record.approved ? <CheckApprovedIcon><MdCheckCircle /></CheckApprovedIcon> : ''\n          }\n        ] as TotalColumnProps<CustomerListItem>[]}\n        onRowClick={handleRowClick}\n      />\n      <LazyDialog isOpen={isModalOpen}>\n        <AddTradingEntityDialog\n          isOpen={isModalOpen}\n          onClose={onModalClose}\n          onSubmit={onModalSubmit}\n          tradingJurisdiction={accountTradingEntity?.tradingCountry || Country.None}\n        />\n      </LazyDialog>\n    </React.Fragment>\n  );\n}\n\nexport default Customers;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport const styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    classes,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 34 + 12 * 2,\n    height: 14 + 12 * 2,\n    overflow: 'hidden',\n    padding: 12,\n    boxSizing: 'border-box',\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0,\n    // Reset the stacking context.\n    verticalAlign: 'middle',\n    // For correct alignment with the text.\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -8\n  },\n\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -8\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    // Render above the focus ripple.\n    color: theme.palette.mode === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create(['left', 'transform'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&$checked': {\n      transform: 'translateX(20px)'\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      opacity: 0.5\n    },\n    '&$disabled + $track': {\n      opacity: theme.palette.mode === 'light' ? 0.12 : 0.1\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.secondary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    width: 40,\n    height: 24,\n    padding: 7,\n    '& $thumb': {\n      width: 16,\n      height: 16\n    },\n    '& $switchBase': {\n      padding: 4,\n      '&$checked': {\n        transform: 'translateX(16px)'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {},\n\n  /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n  disabled: {},\n\n  /* Styles applied to the internal SwitchBase component's input element. */\n  input: {\n    left: '-100%',\n    width: '300%'\n  },\n\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  thumb: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the track element. */\n  track: {\n    height: '100%',\n    width: '100%',\n    borderRadius: 14 / 2,\n    zIndex: -1,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n  }\n});\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  const icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[`size${capitalize(size)}`])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[`color${capitalize(color)}`]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}